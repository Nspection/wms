#Область ПрограммныйИнтерфейс

// Структура параметров для см. процедуру ПодключитьКомпоненту.
//
// Возвращаемое значение:
// Структура.
Функция ПараметрыПодключения() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Кэшировать", Истина);
	Параметры.Вставить("ПредложитьУстановить", Истина);
	Параметры.Вставить("ТекстПояснения", "");
	Параметры.Вставить("ИдентификаторыСозданияОбъектов", Новый Массив);
	
	Возврат Параметры;
	
КонецФункции
//
Процедура ПодключитьКомпоненту(Оповещение, Идентификатор, Версия = Неопределено,
	ПараметрыПодключения = Неопределено) Экспорт
	
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("Подключено", Ложь);
	РезультатВыполнения.Вставить("ОписаниеОшибки",  НСтр("ru='Функциональность доступна только при использовании подсистемы БСП.'"));
	ВыполнитьОбработкуОповещения(Оповещение, РезультатВыполнения)
	
КонецПроцедуры

// Подключает компоненту, выполненную по технологии COM, из реестра Windows в асинхронном режиме.
// (не рекомендуется, для обратной совместимости с компонентами 1С 7.7). 
//
Процедура ПодключитьКомпонентуИзРеестраWindows(Оповещение, Идентификатор, ИдентификаторСозданияОбъекта = Неопределено) Экспорт 
	
	Контекст = Новый Структура;
	Контекст.Вставить("Оповещение"                  , Оповещение);
	Контекст.Вставить("Идентификатор"               , Идентификатор);
	Контекст.Вставить("ИдентификаторСозданияОбъекта", ИдентификаторСозданияОбъекта);
	
	Оповещение = Новый ОписаниеОповещения("ПодключитьКомпонентуИзРеестраWindowsПослеПопыткиПодключения", ЭтотОбъект, Контекст);
	НачатьПодключениеВнешнейКомпоненты(Оповещение, "AddIn." + Идентификатор);
	
КонецПроцедуры

// Продолжение процедуры ПодключитьКомпонентуИзРеестраWindows.
//
// Параметры:
//  Подключено - Булево
//  Контекст - Структура:
//    * Оповещение - ОписаниеОповещения
//    * Идентификатор - Строка
//    * Версия - Строка
//    * Кэшировать - Булево
//    * ПредложитьУстановить - Булево
//    * ПредложитьЗагрузить - Булево
//    * ТекстПояснения - Строка
//    * ИдентификаторыСозданияОбъектов - Массив

Процедура ПодключитьКомпонентуИзРеестраWindowsПослеПопыткиПодключения(Подключено, Контекст) Экспорт
	
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("Подключено", Ложь);
	РезультатВыполнения.Вставить("ОписаниеОшибки", "");
	РезультатВыполнения.Вставить("ПодключаемыйМодуль", Неопределено);
	ОписаниеОшибки = "";
	
	Если Подключено Тогда 
		
		ИдентификаторСозданияОбъекта = Контекст.ИдентификаторСозданияОбъекта;
			
		Если ИдентификаторСозданияОбъекта = Неопределено Тогда 
			ИдентификаторСозданияОбъекта = Контекст.Идентификатор;
		КонецЕсли;
		
		Попытка
			ПодключаемыйМодуль = Новый("AddIn." + ИдентификаторСозданияОбъекта);
			Если ПодключаемыйМодуль = Неопределено Тогда 
				ВызватьИсключение НСтр("ru = 'Оператор Новый вернул Неопределено'");
			КонецЕсли;
			РезультатВыполнения.Подключено = Истина;
			РезультатВыполнения.ПодключаемыйМодуль = ПодключаемыйМодуль;
		Исключение
			ОписаниеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
		
	Иначе 
		ОписаниеОшибки = НСтр("ru='Не удалось подключить внешнюю компоненту на клиенте'");
	КонецЕсли;
	
	РезультатВыполнения.ОписаниеОшибки = ОписаниеОшибки;
	
	ВыполнитьОбработкуОповещения(Контекст.Оповещение, РезультатВыполнения)
	
КонецПроцедуры

// Возвращает структуру параметров для описания правил поиска дополнительной информации в составе внешней компоненты
// см. процедуру ЗагрузитьКомпонентуИзФайла.
// Возвращаемое значение:
//  Структура:
//      * ИмяФайлаXML - Строка - (необязательный) имя файла в составе компоненты, из которого будет извлечена информация.
//      * ВыражениеXPath - Строка - (необязательный) XPath путь до информации в файле.
//
Функция ПараметрыПоискаДополнительнойИнформации() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ИмяФайлаXML", "");
	Параметры.Вставить("ВыражениеXPath", "");
	
	Возврат Параметры;
	
КонецФункции

// Структура параметров для см. процедуру ЗагрузитьКомпонентуИзФайла.
//
// Возвращаемое значение:
//  Структура:
//      * Идентификатор - Строка -(необязательный)  идентификатор объекта внешней компоненты.
//      * Версия - Строка - (необязательный) версия компоненты.
//      * ПараметрыПоискаДополнительнойИнформации - Соответствие из КлючИЗначение - (необязательный) параметры:
//          ** Ключ - Строка - идентификатор дополнительной запрошенной информации.
//          ** Значение - см. ПараметрыПоискаДополнительнойИнформации.
Функция ПараметрыЗагрузки() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Идентификатор", Неопределено);
	Параметры.Вставить("Версия", Неопределено);
	Параметры.Вставить("ПараметрыПоискаДополнительнойИнформации", Новый Соответствие);
	
	Возврат Параметры;
	
КонецФункции

// Загружает файл компоненты в справочник внешних компонент в асинхронном режиме. 
//
Процедура ЗагрузитьКомпонентуИзФайла(Оповещение, ПараметрыЗагрузки = Неопределено) Экспорт
	
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("Загружена", Ложь);
	РезультатВыполнения.Вставить("ОписаниеОшибки",  НСтр("ru='Функциональность доступна только при использовании подсистемы БСП.'"));
	ВыполнитьОбработкуОповещения(Оповещение, РезультатВыполнения);
	
КонецПроцедуры

// Структура параметров для см. процедуру УстановитьКомпоненту.
//
// Возвращаемое значение:
//  Структура:
//      * ТекстПояснения - Строка - для чего нужна компонента и что не будет работать, если ее не устанавливать.
//
Функция ПараметрыУстановки() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ТекстПояснения", "");
	
	Возврат Параметры;
	
КонецФункции

// Устанавливает компоненту, выполненную по технологии Native API и COM асинхронном режиме.
// Выполняет проверку возможности исполнения компоненты на текущем клиенте пользователя.
//
Процедура УстановитьКомпоненту(Оповещение, Идентификатор, Версия = Неопределено, ПараметрыУстановки = Неопределено) Экспорт
	
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("Установлено", Ложь);
	РезультатВыполнения.Вставить("ОписаниеОшибки",  НСтр("ru='Функциональность доступна только при использовании подсистемы БСП.'"));
	ВыполнитьОбработкуОповещения(Оповещение, РезультатВыполнения);
	
КонецПроцедуры

#КонецОбласти
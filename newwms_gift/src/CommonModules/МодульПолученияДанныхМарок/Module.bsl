#Область ПолучениеДанных
Функция ПолучениеДанных(знач СтруктураДанных) Экспорт
	Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(СтруктураДанных,"ТипБд") Тогда
		СтруктураОтвета=новый Структура();
		СтруктураОтвета.Вставить("НомерСообщения",СтруктураДанных.НомерСообщения);
		СтруктураОтвета.Вставить("ДанныеПриняты",Ложь);
		СтруктураОтвета.Вставить("Статус",СтруктураДанных.Статус);
		СтруктураОтвета.Вставить("ОписаниеОшибки",СтруктураДанных.ОписаниеОшибки);
		Возврат СтруктураОтвета;
	КонецЕсли;	
	Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(СтруктураДанных,"НомерСообщения") Тогда
		СтруктураОтвета=новый Структура();
		СтруктураОтвета.Вставить("НомерСообщения",СтруктураДанных.НомерСообщения);
		СтруктураОтвета.Вставить("ДанныеПриняты",Ложь);
		СтруктураОтвета.Вставить("Статус",СтруктураДанных.Статус);
		СтруктураОтвета.Вставить("ОписаниеОшибки",СтруктураДанных.ОписаниеОшибки);
		Возврат СтруктураОтвета;
	КонецЕсли;	
	Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(СтруктураДанных,"УзелОбмена") Тогда
		СтруктураОтвета=новый Структура();
		СтруктураОтвета.Вставить("НомерСообщения",СтруктураДанных.НомерСообщения);
		СтруктураОтвета.Вставить("ДанныеПриняты",Ложь);
		СтруктураОтвета.Вставить("Статус",СтруктураДанных.Статус);
		СтруктураОтвета.Вставить("ОписаниеОшибки",СтруктураДанных.ОписаниеОшибки);
		Возврат СтруктураОтвета;
	КонецЕсли;	
	//Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(СтруктураДанных,"ГлавныйУзелОбменаWMS") Тогда
	//СтруктураОтвета=новый Структура();
	//СтруктураОтвета.Вставить("НомерСообщения",СтруктураДанных.НомерСообщения);
	//СтруктураОтвета.Вставить("ДанныеПриняты",Ложь);
	//СтруктураОтвета.Вставить("Статус",СтруктураДанных.Статус);
	//СтруктураОтвета.Вставить("ОписаниеОшибки",СтруктураДанных.ОписаниеОшибки);
	//Возврат СтруктураОтвета;
	//КонецЕсли;	
	
	Отказ=Ложь;
	Если СтруктураДанных.ТипБд="КА 1.1" Тогда
		ПолучениеДанныхКА11(СтруктураДанных,Отказ);
	КонецЕсли;
	СтруктураОтвета=новый Структура();
	СтруктураОтвета.Вставить("НомерСообщения",СтруктураДанных.НомерСообщения);
	СтруктураОтвета.Вставить("ДанныеПриняты",не Отказ);
	Если СтруктураДанных.Свойство("Статус") Тогда
		СтруктураОтвета.Вставить("Статус",СтруктураДанных.Статус);
		СтруктураОтвета.Вставить("ОписаниеОшибки",СтруктураДанных.ОписаниеОшибки);
		Если  СтруктураДанных.Свойство("АлкогольнаяПродукция") Тогда
			СтруктураОтвета.Вставить("АлкогольнаяПродукция",СтруктураДанных.АлкогольнаяПродукция);
		КонецЕсли;
		Если  СтруктураДанных.Свойство("СправкаБ") Тогда
			СтруктураОтвета.Вставить("СправкаБ",СтруктураДанных.СправкаБ);
		КонецЕсли;
		Если  СтруктураДанных.Свойство("ПунктРазгрузки") Тогда
			СтруктураОтвета.Вставить("ПунктРазгрузки",СтруктураДанных.ПунктРазгрузки);
		КонецЕсли;
		
		Если  СтруктураДанных.Свойство("Организация") Тогда
			СтруктураОтвета.Вставить("Организация",СтруктураДанных.Организация);
		КонецЕсли;	
	КонецЕсли;
	Возврат СтруктураОтвета;
КонецФункции

Процедура ПолучениеДанныхКА11(СтруктураДанных,Отказ)
	УзелОбмена=ПолучитьУзелОбмена(СтруктураДанных.УзелОбмена);
	ГлавныйУзелОбменаWMS=УзелОбмена.ГлавныйУзелОбменаWMS;
	Если  УзелОбмена=Неопределено или ГлавныйУзелОбменаWMS=Неопределено Тогда
		СтруктураДанных.Вставить("Статус",404);
		СтруктураДанных.Вставить("ОписаниеОшибки","данные узлов не синхронизованы");
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Если не СтруктураДанных.Свойство("ПМУДанные") Тогда
		Возврат;	
	КонецЕсли;
	ПМУДанные=СтруктураДанных.ПМУДанные;
	Для Каждого стр из ПМУДанные Цикл
		АнализИЗаписьМарок(стр.АкцизныеМарки);
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		СсылкаНаДокументДвиженияМарок=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаСБлокировкой(стр.Регистратор,УзелОбмена,"ДокументСсылка.ДокументДвиженияМарок");
		Если СсылкаНаДокументДвиженияМарок=Неопределено Тогда 
			ОбъектДокументДвиженияМарок=Документы.ДокументДвиженияМарок.СоздатьДокумент();
		иначе
			ОбъектДокументДвиженияМарок=СсылкаНаДокументДвиженияМарок.ПолучитьОбъект();
		КонецЕсли;
		Если стр.Организация=ПустойИдентификатор() тогда
			Организация=Справочники.Организации.ПустаяСсылка();
		иначе
			Организация= итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.Организация,ГлавныйУзелОбменаWMS);
			Если Организация=Неопределено Тогда 
				СтруктураДанных.Вставить("Статус",404);
				СтруктураДанных.Вставить("ОписаниеОшибки","Объект Организация не был найден "+Строка(стр.Организация)+" для заказа "+стр.НомерИсточника);
				СтруктураДанных.Вставить("Организация",стр.Организация);
				ОтменитьТранзакцию();
				Отказ=Истина;
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ОбъектДокументДвиженияМарок.Организация=Организация;
		ОбъектДокументДвиженияМарок.Дата=стр.Дата;
		ОбъектДокументДвиженияМарок.НомерИсточника=стр.Номер;
		ОбъектДокументДвиженияМарок.Комментарий=стр.Комментарий;
		АкцизныеМарки=стр.АкцизныеМарки;
		Упаковки=стр.Упаковки;		
		ОбъектДокументДвиженияМарок.ОбменДанными.Отправитель=УзелОбмена;
		Если ОбъектДокументДвиженияМарок.Проведен и стр.ПометкаУдаления Тогда 
			ОбъектДокументДвиженияМарок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			ОбъектДокументДвиженияМарок.ПометкаУдаления=стр.ПометкаУдаления;
			ОбъектДокументДвиженияМарок.ОбменДанными.Отправитель=УзелОбмена;
			ОбъектДокументДвиженияМарок.Записать();
		ИначеЕсли ОбъектДокументДвиженияМарок.Проведен и не стр.Проведен  Тогда 
			ОбъектДокументДвиженияМарок.ПометкаУдаления=стр.ПометкаУдаления;
			ОбъектДокументДвиженияМарок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ИначеЕсли стр.Проведен Тогда 
			ОбъектДокументДвиженияМарок.ПометкаУдаления=стр.ПометкаУдаления;
			ОбъектДокументДвиженияМарок.Записать(РежимЗаписиДокумента.Проведение);
		иначе
			ОбъектДокументДвиженияМарок.ПометкаУдаления=стр.ПометкаУдаления;
			ОбъектДокументДвиженияМарок.Записать();
		КонецЕсли;
		ЗаписьСоотвОбмена(ОбъектДокументДвиженияМарок.Ссылка,стр.Регистратор,стр.ИмяТипаПриемника,УзелОбмена);
		ЗаписьМарок(ГлавныйУзелОбменаWMS,ОбъектДокументДвиженияМарок.Ссылка,АкцизныеМарки,Отказ,Организация,СтруктураДанных);
		Если Отказ Тогда 
			ОтменитьТранзакцию();
			Возврат
		КонецЕсли;	
		ЗаписьУпаковок(ОбъектДокументДвиженияМарок.Ссылка,Отказ,Упаковки,СтруктураДанных);
		Если Отказ Тогда 
			ОтменитьТранзакцию();
			Возврат
		КонецЕсли;	
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаписьМарок(ГлавныйУзелОбменаWMS,Ссылка,АкцизныеМарки,Отказ,Организация,СтруктураДанных)
	НаборЗаписей=РегистрыСведений.алкХранилищеАкцизныхМарок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	Для Каждого  стр из АкцизныеМарки Цикл 
		НоваяЗапись=НаборЗаписей.Добавить();
		Марка=итWMSСлужебныеПроцедурыИФункции.НайтиСоздатьМаркуСБлокировкой(стр.Марка);
		АлкогольнаяПродукция=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.АлкогольнаяПродукция,ГлавныйУзелОбменаWMS);
		СправкаБ=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.СправкаБ,ГлавныйУзелОбменаWMS);
		ПунктРазгрузки=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.ПунктРазгрузки,ГлавныйУзелОбменаWMS);
		Если АлкогольнаяПродукция=Неопределено Тогда 
			СтруктураДанных.Вставить("Статус",404);
			СтруктураДанных.Вставить("ОписаниеОшибки","Объект АлкогольнаяПродукция не был найден "+Строка(стр.АлкогольнаяПродукция)+" для документа "+Ссылка.НомерИсточника);
			СтруктураДанных.Вставить("АлкогольнаяПродукция",стр.АлкогольнаяПродукция);
			Отказ=Истина;
			Возврат;
		КонецЕсли;
		Если СправкаБ=Неопределено Тогда 
			СтруктураДанных.Вставить("Статус",404);
			СтруктураДанных.Вставить("ОписаниеОшибки","Объект СправкаБ не был найден "+Строка(стр.СправкаБ)+" для документа "+Ссылка.НомерИсточника);
			СтруктураДанных.Вставить("СправкаБ",стр.СправкаБ);
			Отказ=Истина;
			Возврат;
		КонецЕсли;
		Если стр.ПунктРазгрузки=ПустойИдентификатор() Тогда 
			ПунктРазгрузки=Справочники.алкПунктыРазгрузки.ПустаяСсылка();
		иначе
			Если ПунктРазгрузки=Неопределено Тогда 
				СтруктураДанных.Вставить("Статус",404);
				СтруктураДанных.Вставить("ОписаниеОшибки","Объект ПунктРазгрузки не был найден "+Строка(стр.ПунктРазгрузки)+" для документа "+Ссылка.НомерИсточника);
				СтруктураДанных.Вставить("ПунктРазгрузки",стр.ПунктРазгрузки);
				Отказ=Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Марка=Неопределено Тогда 
			ВызватьИсключение "Ошибка создания марки";
		КонецЕсли;
		НоваяЗапись.Активность=стр.Активность;
		НоваяЗапись.АлкогольнаяПродукция=АлкогольнаяПродукция;
		НоваяЗапись.Марка=Марка;
		НоваяЗапись.Организация=Организация;
		НоваяЗапись.ОтметкаВыбытия=стр.ОтметкаВыбытия;
		НоваяЗапись.Период=стр.Период;
		НоваяЗапись.ПунктРазгрузки=ПунктРазгрузки;
		НоваяЗапись.Регистратор=Ссылка;
		НоваяЗапись.СправкаБ=СправкаБ;
		НоваяЗапись.Упаковка=стр.Упаковка;
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры

Процедура ЗаписьУпаковок(Ссылка,Отказ,Упаковки,СтруктураДанных)
	НаборЗаписей=РегистрыСведений.алкХранилищеУпаковок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	Для Каждого  стр из Упаковки Цикл 
		НоваяЗапись=НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,стр);
		НоваяЗапись.Регистратор=Ссылка;
		НоваяЗапись.Период=стр.Период;
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры



Процедура АнализИЗаписьМарок(АкцизныеМарки)
	Таблица=новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Марка",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(180)));
	Для Каждого стр из АкцизныеМарки Цикл 
		НоваяСтрока=Таблица.Добавить();
		НоваяСтрока.Марка=стр.Марка;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаМарок.Марка КАК Марка
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТаблицаМарок КАК ТаблицаМарок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Марка КАК Марка
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Марки КАК Марки
	|		ПО ВТ.Марка = Марки.ЗначениеШтрихКода
	|ГДЕ
	|	Марки.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ТаблицаМарок",Таблица);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивМарок=новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивМарок.Добавить(ВыборкаДетальныеЗаписи.Марка);
	КонецЦикла;
	Если МассивМарок.Количество()>0 Тогда 
		итWMSПривилегированныйМодуль.СоздатьМаркиСБлокировкой(МассивМарок);
	КонецЕсли;


	КонецПроцедуры
#КонецОбласти


#Область ЗапросПередачаДанных
Процедура НачатьОбмен(УзелОбмена) Экспорт
	Отказ=Ложь;
	ОбъектУзла=УзелОбмена.ПолучитьОбъект();
	ОбъектУзла.НомерОтправленного=ОбъектУзла.НомерОтправленного+1;
	ОбъектУзла.Записать();
	ПланыОбмена.ВыбратьИзменения(УзелОбмена,ОбъектУзла.НомерОтправленного);
	НомерСообщенияКОбработке=ПолучитьМиниальныйНомерСообщения(УзелОбмена);
	Если не НомерСообщенияКОбработке=0 Тогда 
		ЗапроситьДанныеПоСправкамБ(НомерСообщенияКОбработке,УзелОбмена,Отказ);
		Если не Отказ Тогда 
			ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбмена,НомерСообщенияКОбработке);
		КонецЕсли;
	КонецЕсли;	
	ПередачаАлкПереупаковка(УзелОбмена);
КонецПроцедуры

Процедура ЗапроситьДанныеПоСправкамБ(МаксимальныйНомерСообщения,Узел,Отказ) 
	Определение=новый WSОпределения(СформироватьСтрокуПодключения(Узел) ,"webserv","111");
	ПараметрыПрокиСервера=СформироватьПараметрыПроксиСервера(Узел);
	Прокси = новый WSПрокси(Определение,ПараметрыПрокиСервера.URLПространствоИменСервиса,ПараметрыПрокиСервера.ИмяСервиса,ПараметрыПрокиСервера.ИмяТочкиПодключения);
	Прокси.Пользователь="webserv";
	Прокси.Пароль="111";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	алкКлассификаторСправокАиБИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.алкКлассификаторСправокАиБ.Изменения КАК алкКлассификаторСправокАиБИзменения
	|ГДЕ
	|	алкКлассификаторСправокАиБИзменения.Узел = &Узел
	|	И алкКлассификаторСправокАиБИзменения.НомерСообщения <= &НомерСообщения";
	
	Запрос.УстановитьПараметр("НомерСообщения", МаксимальныйНомерСообщения);
	Запрос.УстановитьПараметр("Узел", Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтруктураЗапросаДанных=новый Структура;
	СтруктураЗапросаДанных.Вставить("КлючЗапросаДанных","ЗапросПоСправкаБ");
	СтруктураЗапросаДанных.Вставить("ДатаСреза",ТекущаяДата());
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СсылкаВИсточнике=ПоискЭлементаСоответствияОбменаДругойИБ(ВыборкаДетальныеЗаписи.Ссылка,Узел.ГлавныйУзелОбменаWMS);
		Если СсылкаВИсточнике=Неопределено Тогда 
			Продолжить;
		КонецЕсли;	
		СтруктураЗапросаДанных.Вставить("СправкаБ",СсылкаВИсточнике);
		Данные=СериализаторДанных(СтруктураЗапросаДанных);
		Ответ=ДесериализаторДанных(Прокси.ToGetData(Данные));
		
		Если Ответ.Свойство("Статус") Тогда 
			Если Ответ.Статус=404 Тогда
				ЗаписьЖурналаРегистрации("ЗапросДанныхПоСправкеБ",УровеньЖурналаРегистрации.Ошибка,Метаданные.Справочники.алкКлассификаторСправокАиБ,ВыборкаДетальныеЗаписи.Ссылка,Ответ.ОписаниеОшибки);
				Отказ=Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		ПолучениеДанныхПоСправкеБКА11(Ответ,Узел,Отказ,ВыборкаДетальныеЗаписи.Ссылка);
		Если Отказ Тогда 
			Возврат
		КонецЕсли;	
	КонецЦикла;
	
	
	
	
	
	
КонецПроцедуры

Процедура ПолучениеДанныхПоСправкеБКА11(Данные,Узел,Отказ,СправкаБ)
	
	ГлавныйУзелОбменаWMS=Узел.ГлавныйУзелОбменаWMS;
	ДатаСреза=ТекущаяДата();
	СсылкаНаДокумент=НайтиДокументНаДатуПоСправкеБ(СправкаБ,ДатаСреза);
	Если СсылкаНаДокумент= Неопределено Тогда 
		ОбъектДокументДвиженияМарок=Документы.ДокументДвиженияМарок.СоздатьДокумент();
	иначе
		ОбъектДокументДвиженияМарок=СсылкаНаДокумент.ПолучитьОбъект();
		ОбъектДокументДвиженияМарок.ПометкаУдаления=Ложь;
	КонецЕсли;
	Организация=Узел.Организация;
	Если Организация=Неопределено Тогда 
		ЗаписьЖурналаРегистрации("ЗапросДанныхПоСправкеБ",УровеньЖурналаРегистрации.Ошибка,Справочники.алкКлассификаторСправокАиБ,СправкаБ,"не найдена организация");
		ОтменитьТранзакцию();
		Отказ=Истина;
		Возврат;
	КонецЕсли;				
	ОбъектДокументДвиженияМарок.Организация=Организация;
	ОбъектДокументДвиженияМарок.Дата=ДатаСреза;
	ОбъектДокументДвиженияМарок.НомерИсточника=Строка(СправкаБ);
	ОбъектДокументДвиженияМарок.Комментарий=Строка(СправкаБ);
	АкцизныеМарки=Данные.АкцизныеМарки;
	Упаковки=Данные.Упаковки;		
	ОбъектДокументДвиженияМарок.ОбменДанными.Отправитель=Узел;
	АнализИЗаписьМарок(АкцизныеМарки);	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	ОбъектДокументДвиженияМарок.Записать(РежимЗаписиДокумента.Проведение);
	СтруктураДанных=новый Структура;
	ЗаписьМарок(ГлавныйУзелОбменаWMS,ОбъектДокументДвиженияМарок.Ссылка,АкцизныеМарки,Отказ,Организация,СтруктураДанных);
	Если Отказ Тогда
		ЗаписьЖурналаРегистрации("ЗапросДанныхПоСправкеБ",УровеньЖурналаРегистрации.Ошибка,Справочники.алкКлассификаторСправокАиБ,СправкаБ,СтруктураДанных.ОписаниеОшибки);
		ОтменитьТранзакцию();
		Возврат
	КонецЕсли;	
	ЗаписьУпаковок(ОбъектДокументДвиженияМарок.Ссылка,Отказ,Упаковки,СтруктураДанных);
	
	Если Отказ Тогда 
		ОтменитьТранзакцию();
		Возврат
	КонецЕсли;	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ПередачаАлкПереупаковка(Узел)  
	МинимальныйНомерОбработки=ПолучитьМинимальныйНомерСообщенияДвиженияМарок(Узел);
	Если МинимальныйНомерОбработки=0 Тогда 
		Возврат;
	КонецЕсли;
	МаксимальныйНомерОбработки=ПолучитьМаксимальныйНомерСообщенияДвиженияМарок(Узел);
	Если МинимальныйНомерОбработки=0 Тогда 
		Возврат;
	КонецЕсли;
	Шаг=0;
	Если МаксимальныйНомерОбработки-МинимальныйНомерОбработки>2 Тогда 
		МаксимальныйНомерОбработки=МинимальныйНомерОбработки+2;
		Шаг=2;
	иначе
		Шаг=МаксимальныйНомерОбработки-МинимальныйНомерОбработки;
	КонецЕсли;
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка КАК Ссылка,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.Дата КАК Дата,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.Проведен КАК Проведен,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.Организация КАК Организация,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.Комментарий КАК Комментарий,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.ПунктРазгрузки КАК ПунктРазгрузки,
	|	ит_WMS_РегистрацияДвиженияМарок.Ссылка.Номер КАК Номер
	|ИЗ
	|	РегистрСведений.ит_WMS_РегистрацияДвиженияМарок КАК ит_WMS_РегистрацияДвиженияМарок
	|ГДЕ
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена = &УзелОбмена
	|	И ит_WMS_РегистрацияДвиженияМарок.НомерСообщения <= &НомерСообщения";
	
	Запрос.УстановитьПараметр("НомерСообщения", МаксимальныйНомерОбработки);
	Запрос.УстановитьПараметр("УзелОбмена", Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТаблицаПереупаковок=новый ТаблицаЗначений;
	ТаблицаПереупаковок.Колонки.Добавить("Ссылка");
	ТаблицаПереупаковок.Колонки.Добавить("Дата");
	ТаблицаПереупаковок.Колонки.Добавить("Номер");
	ТаблицаПереупаковок.Колонки.Добавить("Проведен");
	ТаблицаПереупаковок.Колонки.Добавить("ПометкаУдаления");
	ТаблицаПереупаковок.Колонки.Добавить("Организация");
	ТаблицаПереупаковок.Колонки.Добавить("Комментарий");
	ТаблицаПереупаковок.Колонки.Добавить("ПунктРазгрузки");
	ТаблицаПереупаковок.Колонки.Добавить("ТаблицаМарок");
	ТаблицаПереупаковок.Колонки.Добавить("ТаблицаУпаковок");
	ТаблицаПереупаковок.Колонки.Добавить("ИмяТипаПриемника");
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=ТаблицаПереупаковок.Добавить();	
		НоваяСтрока.Ссылка=ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор();
		НоваяСтрока.Дата=ВыборкаДетальныеЗаписи.Дата;
		НоваяСтрока.Номер=ВыборкаДетальныеЗаписи.Номер;
		НоваяСтрока.Проведен=ВыборкаДетальныеЗаписи.Проведен;
		НоваяСтрока.ПометкаУдаления=ВыборкаДетальныеЗаписи.ПометкаУдаления;
		НоваяСтрока.Организация=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаДругойИБ(ВыборкаДетальныеЗаписи.Организация,Узел.ГлавныйУзелОбменаWMS);	
		НоваяСтрока.Комментарий=ВыборкаДетальныеЗаписи.Комментарий;	
		НоваяСтрока.ПунктРазгрузки=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаДругойИБ(ВыборкаДетальныеЗаписи.ПунктРазгрузки,Узел.ГлавныйУзелОбменаWMS);
		НоваяСтрока.ИмяТипаПриемника=ВыборкаДетальныеЗаписи.Ссылка.Метаданные().ПолноеИмя();
		ТаблицаМарок= новый ТаблицаЗначений;
		ТаблицаМарок.Колонки.Добавить("АлкогольнаяПродукция");
		ТаблицаМарок.Колонки.Добавить("СправкаБ");
		ТаблицаМарок.Колонки.Добавить("Марка");
		ТаблицаМарок.Колонки.Добавить("Упаковка");
		ТаблицаМарок.Колонки.Добавить("ОтметкаВыбытия");
		
		
		ТаблицаУпаковок= новый ТаблицаЗначений;
		ТаблицаУпаковок.Колонки.Добавить("Упаковка");
		ТаблицаУпаковок.Колонки.Добавить("ИерархияУпаковки");
		Для Каждого стр из ВыборкаДетальныеЗаписи.Ссылка.АкцизныеМарки Цикл 
			НоваяСтрокаМарок=ТаблицаМарок.Добавить();
			НоваяСтрокаМарок.АлкогольнаяПродукция=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаДругойИБ(стр.АлкогольнаяПродукция,Узел.ГлавныйУзелОбменаWMS);
			НоваяСтрокаМарок.СправкаБ=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаДругойИБ(стр.СправкаБ,Узел.ГлавныйУзелОбменаWMS);
			НоваяСтрокаМарок.Марка=стр.Марка.ЗначениеШтрихКода;
			НоваяСтрокаМарок.Упаковка=стр.Упаковка;
			НоваяСтрокаМарок.ОтметкаВыбытия=стр.ОтметкаВыбытия;
		КонецЦикла;
		НоваяСтрока.ТаблицаМарок=ТаблицаМарок;
		Для Каждого стр из  ВыборкаДетальныеЗаписи.Ссылка.Упаковки Цикл 
			НоваяСтрокаУпаковок=ТаблицаУпаковок.Добавить();
			НоваяСтрокаУпаковок.Упаковка= стр.Упаковка;
			НоваяСтрокаУпаковок.ИерархияУпаковки= стр.ИерархияУпаковки;
		КонецЦикла;
		НоваяСтрока.ТаблицаУпаковок=ТаблицаУпаковок;
		
		
	КонецЦикла;
	Определение=новый WSОпределения(СформироватьСтрокуПодключения(Узел) ,"webserv","111");
	ПараметрыПрокиСервера=СформироватьПараметрыПроксиСервера(Узел);
	Прокси = новый WSПрокси(Определение,ПараметрыПрокиСервера.URLПространствоИменСервиса,ПараметрыПрокиСервера.ИмяСервиса,ПараметрыПрокиСервера.ИмяТочкиПодключения);
	Прокси.Пользователь="webserv";
	Прокси.Пароль="111";
	СтруктураЗапросаДанных=новый Структура;
	СтруктураЗапросаДанных.Вставить("КлючЗапросаДанных","ЗаписьАлкПереупаковка");
	СтруктураЗапросаДанных.Вставить("УзелОбмена",Узел.УникальныйИдентификатор());
	СтруктураЗапросаДанных.Вставить("ТаблицаПереупаковок",ТаблицаПереупаковок);
	
	Данные=СериализаторДанных(СтруктураЗапросаДанных);
	Ответ=ДесериализаторДанных(Прокси.ToGetData(Данные));
	
	Если Ответ.Свойство("Статус") Тогда 
		Если Ответ.Статус=404 Тогда
			ЗаписьЖурналаРегистрации("ПередачаАлкПереупаковка",УровеньЖурналаРегистрации.Ошибка,Метаданные.Документы.алкПереупаковка,ВыборкаДетальныеЗаписи.Ссылка,Ответ.ОписаниеОшибки);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	Если Шаг=0 Тогда 
		итWMSПривилегированныйМодуль.УдалитьРегистрациюИзмененийДвжиенияМарок(Узел,МинимальныйНомерОбработки);
	иначе
		для n=0 по Шаг Цикл 
			итWMSПривилегированныйМодуль.УдалитьРегистрациюИзмененийДвжиенияМарок(Узел,МинимальныйНомерОбработки+n);		
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

Функция НайтиДокументНаДатуПоСправкеБ(СправкаБ,ДатаСреза)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументДвиженияМарок.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДокументДвиженияМарок КАК ДокументДвиженияМарок
	|ГДЕ
	|	ДокументДвиженияМарок.Дата = &Дата
	|	И ДокументДвиженияМарок.НомерИсточника = &НомерИсточника";
	
	Запрос.УстановитьПараметр("Дата", ДатаСреза);
	Запрос.УстановитьПараметр("НомерИсточника", Строка(СправкаБ));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;	
КонецФункции

Функция ПолучитьМинимальныйНомерСообщенияДвиженияМарок(УзелОбмена)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена КАК УзелОбмена,
	|	МИНИМУМ(ит_WMS_РегистрацияДвиженияМарок.НомерСообщения) КАК НомерСообщения
	|ИЗ
	|	РегистрСведений.ит_WMS_РегистрацияДвиженияМарок КАК ит_WMS_РегистрацияДвиженияМарок
	|ГДЕ
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена = &УзелОбмена
	|	И ит_WMS_РегистрацияДвиженияМарок.НомерСообщения > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена";
	
	Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.НомерСообщения;
	КонецЦикла;
	Возврат 0;
	
	
КонецФункции
Функция ПолучитьМаксимальныйНомерСообщенияДвиженияМарок(УзелОбмена)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена КАК УзелОбмена,
	|	МАКСИМУМ(ит_WMS_РегистрацияДвиженияМарок.НомерСообщения) КАК НомерСообщения
	|ИЗ
	|	РегистрСведений.ит_WMS_РегистрацияДвиженияМарок КАК ит_WMS_РегистрацияДвиженияМарок
	|ГДЕ
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена = &УзелОбмена
	|	И ит_WMS_РегистрацияДвиженияМарок.НомерСообщения > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ит_WMS_РегистрацияДвиженияМарок.УзелОбмена";
	
	Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.НомерСообщения;
	КонецЦикла;
	Возврат 0;
	
	
КонецФункции

#КонецОбласти


#Область СлужебныеФункцииПроцедуры
Функция ПолучитьУзелОбмена(СсылкаВДругойИБ)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеОбъектовДляОбмена.УзелОбмена КАК УзелОбмена
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|ГДЕ
	|	СоответствиеОбъектовДляОбмена.СсылкаВДругойИБ = ПОДСТРОКА(&СсылкаВДругойИБ, 1, 100)
	|	И СоответствиеОбъектовДляОбмена.СобственнаяСсылка = НЕОПРЕДЕЛЕНО";
	
	Запрос.УстановитьПараметр("СсылкаВДругойИБ", Строка(СсылкаВДругойИБ));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.УзелОбмена;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

//Функция ПоискЭлементаСоответствияОбмена(СсылкаВДругойИБ,УзелОбмена=Неопределено)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	СоответствиеОбъектовДляОбмена.СобственнаяСсылка КАК СобственнаяСсылка
//	|ИЗ
//	|	РегистрСведений.СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
//	|ГДЕ
//	|	ВЫБОР
//	|			КОГДА &УзелОбмена = НЕОПРЕДЕЛЕНО
//	|				ТОГДА ИСТИНА
//	|			ИНАЧЕ СоответствиеОбъектовДляОбмена.УзелОбмена = &УзелОбмена
//	|		КОНЕЦ
//	|	И СоответствиеОбъектовДляОбмена.СсылкаВДругойИБ = ПОДСТРОКА(&СсылкаВДругойИБ, 1, 100)";
//	
//	Запрос.УстановитьПараметр("СсылкаВДругойИБ", Строка(СсылкаВДругойИБ));
//	Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		Возврат ВыборкаДетальныеЗаписи.СобственнаяСсылка;
//	КонецЦикла;
//	Возврат Неопределено;
//КонецФункции
Процедура ЗаписьСоотвОбмена(Знач СсылкаБазы, Знач СсылкаВИточнике, Знач ИмяТипаПриемника, Знач УзелОбмена)
	
	Перем МенеджерЗаписиСоотвОбмена;
	МенеджерЗаписиСоотвОбмена=РегистрыСведений.СоответствиеОбъектовДляОбмена.СоздатьМенеджерЗаписи();
	МенеджерЗаписиСоотвОбмена.УзелОбмена=УзелОбмена;
	МенеджерЗаписиСоотвОбмена.СобственнаяСсылка=СсылкаБазы;
	МенеджерЗаписиСоотвОбмена.СсылкаВДругойИБ=Строка(СсылкаВИточнике);
	МенеджерЗаписиСоотвОбмена.ИмяТипаПриемника=ИмяТипаПриемника;
	МенеджерЗаписиСоотвОбмена.Записать(Истина);
	
КонецПроцедуры


Функция НайтиМаркуПоЗначению(КодМарки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Марки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Марки КАК Марки
	|ГДЕ
	|	Марки.ЗначениеШтрихКода = &ЗначениеШтрихКода";
	
	Запрос.УстановитьПараметр("ЗначениеШтрихКода", КодМарки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;	
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

Функция ПоискЭлементаСоответствияОбменаДругойИБ(СобственнаяСсылка,УзелОбмена)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеОбъектовДляОбмена.СсылкаВДругойИБ КАК СсылкаВДругойИБ
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|ГДЕ
	|	СоответствиеОбъектовДляОбмена.УзелОбмена = &УзелОбмена
	|	И СоответствиеОбъектовДляОбмена.СобственнаяСсылка = &СобственнаяСсылка";
	
	Запрос.УстановитьПараметр("СобственнаяСсылка", СобственнаяСсылка);
	Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат новый УникальныйИдентификатор(ВыборкаДетальныеЗаписи.СсылкаВДругойИБ);
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьМиниальныйНомерСообщения(Узел)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	алкКлассификаторСправокАиБИзменения.НомерСообщения КАК НомерСообщения,
	|	алкКлассификаторСправокАиБИзменения.Узел КАК Узел
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Справочник.алкКлассификаторСправокАиБ.Изменения КАК алкКлассификаторСправокАиБИзменения
	|ГДЕ
	|	алкКлассификаторСправокАиБИзменения.Узел = &Узел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	алкПереупаковкаИзменения.НомерСообщения,
	|	алкПереупаковкаИзменения.Узел
	|ИЗ
	|	Документ.алкПереупаковка.Изменения КАК алкПереупаковкаИзменения
	|ГДЕ
	|	алкПереупаковкаИзменения.Узел = &Узел
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТ.НомерСообщения) КАК НомерСообщения,
	|	ВТ.Узел КАК Узел
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	НЕ ВТ.НомерСообщения ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Узел";
	
	Запрос.УстановитьПараметр("Узел", Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат  ВыборкаДетальныеЗаписи.НомерСообщения;
	КонецЦикла;
	Возврат 0;
	
	
КонецФункции

Функция ПолучитьСписокПлановОбмена() Экспорт
	СоответсвиеДанных=новый Соответствие();
	//Для Каждого ЭлементПлана Из Метаданные.ПланыОбмена Цикл
	Выборка=ПланыОбмена.WMSОбменМарками.Выбрать();
	МассивВыборки=новый Массив();
	Пока Выборка.Следующий() Цикл
		СтруктураДанных=новый Структура();
		СтруктураДанных.Вставить("Имя",Выборка.Наименование);
		СтруктураДанных.Вставить("Ссылка",Выборка.Ссылка.УникальныйИдентификатор());
		СтруктураДанных.Вставить("Тип",Выборка.Ссылка.Метаданные().ПолноеИмя());
		МассивВыборки.Добавить(СтруктураДанных);
	КонецЦикла;
	СоответсвиеДанных.Вставить("WMSОбменМарками",МассивВыборки);
	//КонецЦикла;
	Возврат СоответсвиеДанных;
КонецФункции

Функция ПустойИдентификатор()
	Возврат новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
КонецФункции
#КонецОбласти







#Область КонвертацияДанных
Функция ДесериализаторДанных(Данные)Экспорт 
	ЧтениеданныхXML=новый ЧтениеXML;
	ЧтениеданныхXML.УстановитьСтроку(Данные);
	Данные= СериализаторXDTO.ПрочитатьXML(ЧтениеданныхXML);
	ЧтениеданныхXML.Закрыть();
	Возврат Данные;
КонецФункции
Функция  СериализаторДанных(Данные)Экспорт
	ДеревоДанныхXDTO=СериализаторXDTO.ЗаписатьXDTO(Данные);
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ДеревоДанныхXDTO);
	Возврат ЗаписьXML.Закрыть();
КонецФункции
#КонецОбласти



#Область ФормированиеПараметровПодключенияWeb
Функция СформироватьСтрокуПодключения(Узел)  
	Параметры=СформироватьПараметрыПодключения(Узел);
	IPАдресСервера=Параметры.IPАдресСервера;
	ИмяПубликацииБазы=Параметры.ИмяПубликацииБазы;
	URLПространствоВебСервиса=Параметры.URLПространствоВебСервиса;	
	СтрокаWSОпределения = "http://"+СокрЛП(IPАдресСервера)+"/"+СокрЛП(ИмяПубликацииБазы)+"/ws/"+СокрЛП(URLПространствоВебСервиса)+".1cws?wsdl";
	Возврат СтрокаWSОпределения;
КонецФункции
Функция СформироватьПараметрыПодключения(Узел)
	IPАдресСервера=СокрЛП(Узел.IPАдресСервера);
	ИмяПубликацииБазы=СокрЛП(Узел.ИмяПубликацииБазы);
	URLПространствоВебСервиса=СокрЛП(Узел.URLПространствоВебСервиса);
	Структура=новый Структура("IPАдресСервера,ИмяПубликацииБазы,URLПространствоВебСервиса",IPАдресСервера,ИмяПубликацииБазы,URLПространствоВебСервиса);
	Возврат Структура
КонецФункции
Функция СформироватьПараметрыПроксиСервера(Узел)  
	URLПространствоВебСервиса=Узел.URLПространствоВебСервиса;
	Структура=новый Структура;
	Структура.Вставить("URLПространствоИменСервиса",СокрЛП(URLПространствоВебСервиса));
	Структура.Вставить("ИмяСервиса",СокрЛП(URLПространствоВебСервиса));
	Структура.Вставить("ИмяТочкиПодключения",СокрЛП(URLПространствоВебСервиса)+"Soap");
	
	Возврат Структура
КонецФункции


#КонецОбласти

Процедура ОбменДаннымиМарок() Экспорт
	Выборка=ПланыОбмена.WMSОбменМарками.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если Выборка.ПометкаУдаления Тогда 
			Продолжить;
		КонецЕсли;
		Если Выборка.Ссылка=ПланыОбмена.WMSОбменМарками.ЭтотУзел() Тогда 
			Продолжить;
		КонецЕсли;
		Если Выборка.РежимОтладки Тогда 
			Продолжить;
		КонецЕсли;
		НачатьОбмен(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры


/////////////////// если произошла ошибка в ходе обработки
//// всегда должна возвращаться структура с ключами Статус ,ОписаниеОшибки
///Статус = 404 (Число), ОписаниеОшибки="информация"(строка);
Функция Registration(СтруктураДанных)
	ДанныеАвторизации=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSОбработчикРегистрации.ПровестиРегистрациюУстройства(ДанныеАвторизации);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеАвторизации);
КонецФункции

Функция unRegistration(СтруктураДанных)
    ДанныеАвторизации=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSОбработчикРегистрации.ЗафиксироватьВыходИзПрограммы(ДанныеАвторизации);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеАвторизации);

КонецФункции

Функция DataRegistrationAndDonload(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSОбработчикиРегистрации_И_Загрузки.ОбработчикРегистрации_ПолученияДанных(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция UpdateChange(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSОбработчикиРегистрации_И_Загрузки.ВыгрузитьЗарегестрированныеИзменения(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция Initialization(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSОбработчикиРегистрации_И_Загрузки.ИнициализацияДанныхНаСервере(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция Acceptance(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSОбработчикДанныхПриемки.ЦентральныйОбработчикДанныхПриемки(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции


Функция Placement(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
	итWMSОбработчикДанныхРазмещения.ЦентральныйОбработчикДанныхРазмещения(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);	
КонецФункции

Функция Move(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
	итWMSОбработчикДанныхПеремещения.ЦентральныйОбработчикДанныхПеремещения(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция HandMove(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
	итWMSОбработчикДанныхПеремещения.ЦентральныйОбработчикДанныхРучногоПеремещения(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция ControlAggregation(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
	итWMSОбработчикДанныхКонтрольнойАгрегации.ЦентральныйОбработчикДанныхКонтрольнойАгрегации(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);	
КонецФункции

Функция Dial(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
    итWMSОбработчикДанныхНаборки.ЦентральныйОбработчикДанныхНаборка(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция HandDial(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
    итWMSОбработчикДанныхНаборки.ЦентральныйОбработчикДанныхРучнойНаборки(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции


Функция CheckingShipment(СтруктураДанных)
ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
 итWMSОбработчикДанныхПроверки.ЦентральныйОбработчикДанныхПроверки(ДанныеОбработчика);
Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция Inventory(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
    итWMSОбработчикДанныхИнвентаризации.ЦентральныйОбработчикДанныхИнвентаризации(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции


Функция ServiceFunction(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSСлужебныеПроцедурыИФункции.ОбработчикДанныхСлужебногоВызова(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции
Функция NewSSCC(СтруктураДанных)
	СтруктураДанных=ДесериализаторДанных(СтруктураДанных);
	///////обработкаПолучения параметров 
	Филиал=1;
	ВидДиапазона=1;
	ФизЛицо=1;
	/////////
    SSCC =	итWMSОбработчикSSCC.ПолучитьНовыйSSCC(Филиал,ВидДиапазона,ФизЛицо);
	Если ТипЗнч(SSCC)=Тип("Структура") тогда
	Возврат SSCC
иначе
	Возврат СериализаторДанных(новый Структура("SSCC",SSCC));
	КонецЕсли;
КонецФункции

Функция ControlAgrigationMark(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);
	итWMSСлужебныеПроцедурыИФункции.ОбработчикДанныхСлужебногоВызова(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);
КонецФункции

Функция Shipment(СтруктураДанных)
	ДанныеОбработчика=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(СтруктураДанных);	
	итWMSОбработчикДанныхОтгрузки.ЦентральныйОбработчикДанныхОтгрузки(ДанныеОбработчика);
	Возврат итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(ДанныеОбработчика);	
КонецФункции


#Область КонвертацияДанных
///// сериализация и десериализация венесены в общий модуль , однако для автономности SSCC блока 
/// здесь так же оставленны данные функции 
Функция ДесериализаторДанных(Данные)Экспорт 
	ЧтениеданныхXML=новый ЧтениеXML;
	ЧтениеданныхXML.УстановитьСтроку(Данные);
	Данные= СериализаторXDTO.ПрочитатьXML(ЧтениеданныхXML);
    ЧтениеданныхXML.Закрыть();
	Возврат Данные;
КонецФункции
Функция  СериализаторДанных(Данные)Экспорт
	ДеревоДанныхXDTO=СериализаторXDTO.ЗаписатьXDTO(Данные);
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ДеревоДанныхXDTO);
	Возврат ЗаписьXML.Закрыть();
КонецФункции








#КонецОбласти
&НаСервере
Процедура ВидимостьДоступностьЭлементов()
	Если  ПроверкаУстановкиСвязи() Тогда
		Элементы.ДекорацияНадписьСвязи.Заголовок="Связь установлена";
		Элементы.ДекорацияНадписьСвязи.ЦветТекста=WebЦвета.Зеленый;
	Иначе 
		Элементы.ДекорацияНадписьСвязи.Заголовок="Связь не установлена";
        Элементы.ДекорацияНадписьСвязи.ЦветТекста=WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ПроверкаУстановкиСвязи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектовДляОбмена.СсылкаВДругойИБ,
		|	СоответствиеОбъектовДляОбмена.ИмяТипаПриемника
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
		|ГДЕ
		|	СоответствиеОбъектовДляОбмена.УзелОбмена = &УзелОбмена
		|	И СоответствиеОбъектовДляОбмена.СобственнаяСсылка = НЕОПРЕДЕЛЕНО";
	
	Запрос.УстановитьПараметр("УзелОбмена", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если  Найти(ВыборкаДетальныеЗаписи.ИмяТипаПриемника,"ПланОбмена") Тогда 
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидимостьДоступностьЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьСвязь(Команда)
	Если Объект.Ссылка.Пустая() Тогда 
		итWMSОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запишите узел");
		Возврат
	КонецЕсли;
	Если Объект.IPАдресСервера="" или
	Объект.URLПространствоВебСервиса=""	 или
	Объект.ИмяПубликацииБазы="" Тогда 
	итWMSОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполните ключевые параметры");
	Возврат
КонецЕсли;
СтруктураДанных=новый Структура();
СтруктураДанных.Вставить("IPАдресСервера",Объект.IPАдресСервера);
СтруктураДанных.Вставить("URLПространствоВебСервиса",Объект.URLПространствоВебСервиса);
СтруктураДанных.Вставить("ИмяПубликацииБазы",Объект.ИмяПубликацииБазы);
СтруктураДанных.Вставить("Ссылка",Объект.Ссылка);
ОткрытьФорму("ПланОбмена.WMSОбменМарками.Форма.ФормаУстановкиСвязи",СтруктураДанных,ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы="ПланОбмена.WMSОбменМарками.Форма.ФормаУстановкиСвязи" Тогда 
		ЗаписатьДанныеСоотв(ВыбранноеЗначение);
		ВидимостьДоступностьЭлементов();
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ЗаписатьДанныеСоотв(ВыбранноеЗначение)
	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Имя",ВыбранноеЗначение.ИмяПланаОбмена);
	СтруктураДанных.Вставить("Ссылка",ВыбранноеЗначение.Ссылка);
    СтруктураДанных.Вставить("ИмяТипаПриемника",Объект.Ссылка.Метаданные().ПолноеИмя());
    СтруктураДанных.Вставить("СсылкаИсточник",Объект.Ссылка.УникальныйИдентификатор());
    Определение=новый WSОпределения(СформироватьСтрокуПодключения() ,"webserv","111");
    ПараметрыПрокиСервера=СформироватьПараметрыПроксиСервера();
    Прокси = новый WSПрокси(Определение,ПараметрыПрокиСервера.URLПространствоИменСервиса,ПараметрыПрокиСервера.ИмяСервиса,ПараметрыПрокиСервера.ИмяТочкиПодключения);
    Прокси.Пользователь="webserv";
    Прокси.Пароль="111";
	Данные=СериализаторДанных(СтруктураДанных);
    Ответ=ДесериализаторДанных(Прокси.InstallCompliance(Данные));
	Если ТипЗнч(Ответ)=Тип("Структура") Тогда 
		Если Ответ.ДанныеЗаписаны Тогда 
			НаборЗаписей=РегистрыСведений.СоответствиеОбъектовДляОбмена.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УзелОбмена.Установить(Объект.Ссылка);
			НаборЗаписей.Отбор.СобственнаяСсылка.Установить(Неопределено);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
			НоваяЗапись=НаборЗаписей.Добавить();
			НоваяЗапись.УзелОбмена=Объект.Ссылка;
			НоваяЗапись.СсылкаВДругойИБ=ВыбранноеЗначение.Ссылка;
			НоваяЗапись.ИмяТипаПриемника=ВыбранноеЗначение.Тип;
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;	
	КонецПроцедуры
#Область ФормированиеПараметровПодключенияWeb
&НаСервере
Функция СформироватьСтрокуПодключения()  
	ПараметрыДанных=СформироватьПараметрыПодключения();
	IPАдресСервера=ПараметрыДанных.IPАдресСервера;
	ИмяПубликацииБазы=ПараметрыДанных.ИмяПубликацииБазы;
	URLПространствоВебСервиса=ПараметрыДанных.URLПространствоВебСервиса;	
	СтрокаWSОпределения = "http://"+СокрЛП(IPАдресСервера)+"/"+СокрЛП(ИмяПубликацииБазы)+"/ws/"+СокрЛП(URLПространствоВебСервиса)+".1cws?wsdl";
	Возврат СтрокаWSОпределения;
КонецФункции
&НаСервере
Функция СформироватьПараметрыПодключения()
	IPАдресСервера=СокрЛП(Объект.IPАдресСервера);
	ИмяПубликацииБазы=СокрЛП(Объект.ИмяПубликацииБазы);
	URLПространствоВебСервиса=СокрЛП(Объект.URLПространствоВебСервиса);
	Структура=новый Структура("IPАдресСервера,ИмяПубликацииБазы,URLПространствоВебСервиса",IPАдресСервера,ИмяПубликацииБазы,URLПространствоВебСервиса);
	Возврат Структура
КонецФункции
&НаСервере
Функция СформироватьПараметрыПроксиСервера()  
	URLПространствоВебСервиса=Объект.URLПространствоВебСервиса;
	Структура=новый Структура;
	Структура.Вставить("URLПространствоИменСервиса",СокрЛП(URLПространствоВебСервиса));
	Структура.Вставить("ИмяСервиса",СокрЛП(URLПространствоВебСервиса));
	Структура.Вставить("ИмяТочкиПодключения",СокрЛП(URLПространствоВебСервиса)+"Soap");
	
	Возврат Структура
КонецФункции
#КонецОбласти
#Область КонвертацияДанных
&НаСервере
Функция ДесериализаторДанных(Данные)Экспорт 
	ЧтениеданныхXML=новый ЧтениеXML;
	ЧтениеданныхXML.УстановитьСтроку(Данные);
	Данные= СериализаторXDTO.ПрочитатьXML(ЧтениеданныхXML);
	ЧтениеданныхXML.Закрыть();
	Возврат Данные;
КонецФункции
&НаСервере
Функция  СериализаторДанных(Данные)Экспорт
	ДеревоДанныхXDTO=СериализаторXDTO.ЗаписатьXDTO(Данные);
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ДеревоДанныхXDTO);
	Возврат ЗаписьXML.Закрыть();
КонецФункции
#КонецОбласти

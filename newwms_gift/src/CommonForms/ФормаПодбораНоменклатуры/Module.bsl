
#Область ОбработчикиСобытий
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не Параметры.Свойство("Документ",ДокументОтбора) Тогда
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	Если не Параметры.Свойство("Организация") Тогда
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.ДанныеВыбораНоменклатуры.МножественныйВыбор=не Параметры.ОдиночныйВыбор;
	Если Параметры.Свойство("Склад") тогда
		Склад=Параметры.Склад;
	КонецЕсли;
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Организация",Параметры.Организация);
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("ОтборПоНоменклатуре",Параметры.ОтборПоНоменклатуре);
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка",Справочники.Номенклатура.ПустаяСсылка());
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Склад",Склад);
	Если Параметры.Свойство("ИдентификаторСтроки") тогда
		ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("ИдентификаторСтроки",Параметры.ИдентификаторСтроки);
		Если Параметры.Свойство("ВернутьИдентификаторСтроки") Тогда 
			ИдентификаторТекущейСтрокиДокумента=Параметры.ИдентификаторСтроки;
			УказатьЯчейкуПолучатель=Истина;
		КонецЕсли;
	иначе
		ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("ИдентификаторСтроки",новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	КонецЕсли;
	
	ПериодОстатков=новый Граница('21000101',ВидГраницы.Включая);
	Если Параметры.Свойство("Документ") тогда
	ПериодОстатков=новый Граница(новый МоментВремени(Параметры.Документ.Дата,Параметры.Документ.Ссылка),ВидГраницы.Исключая);
	КонецЕсли;
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Период",ПериодОстатков);
	
	МассивКлючей=новый Массив;
	МассивКлючей.Добавить(Параметры.ИдентификаторФормы);
	МассивКлючей.Добавить(ЭтаФорма.УникальныйИдентификатор);
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("МассивКлючей",МассивКлючей);
	Корзина.Параметры.УстановитьЗначениеПараметра("КлючДанных",ЭтаФорма.УникальныйИдентификатор);
    ВидимостьДоступностьСервер();
КонецПроцедуры
&НаКлиенте
Процедура НоменклатураПриАктивизацииСтроки(Элемент)
	ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка",Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если не Параметры.ПараметрПоискаНоменклатура.Пустая() тогда
		//ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка",Параметры.ПараметрПоискаНоменклатура);
    Элементы.Номенклатура.ТекущаяСтрока=Параметры.ПараметрПоискаНоменклатура;
КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеВыбораНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.ДанныеВыбораНоменклатуры.ВыделенныеСтроки.Количество()>1 и не Параметры.ОдиночныйВыбор Тогда 
		МассивДанных=новый Массив;
		для Каждого Строка из Элементы.ДанныеВыбораНоменклатуры.ВыделенныеСтроки цикл
			СтруктураДанных=СоздатьСтруктураПередачиДанныхКлиент();
			ДанныеСтроки=Элементы.ДанныеВыбораНоменклатуры.ДанныеСтроки(Строка);
			СтруктураДанных.Вставить("Количество");
			ЗаполнитьЗначенияСвойств(СтруктураДанных,ДанныеСтроки);
			СтруктураДанных.Количество=ДанныеСтроки.КоличествоОстаток;
			МассивДанных.Добавить(СтруктураДанных);
		КонецЦикла;
		
		Оповещение=новый ОписаниеОповещения("МассовыйВыборОбработкаОповещения",ЭтаФорма,МассивДанных);
		ПоказатьВопрос(Оповещение,"Будут выбранны все выделенные строки,с максимальным количеством. Продолжить?",РежимДиалогаВопрос.ДаНет);
	иначе
		СтруктураДанных=СоздатьСтруктураПередачиДанных();
		ЗаполнитьЗначенияСвойств(СтруктураДанных,Элемент.ТекущиеДанные);
		ОткрытьФорму("ОбщаяФорма.УказатьКоличествоПодбора",новый Структура("ДанныеВыбора,УказатьЯчейкуПолучатель",СтруктураДанных,УказатьЯчейкуПолучатель),ЭтаФорма);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура СкладОтбораПриИзменении(Элемент)
ДанныеВыбораНоменклатуры.Параметры.УстановитьЗначениеПараметра("Склад",Склад);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПриЗакрытииНаСервере();
КонецПроцедуры
&НаСервере
Процедура  ПриЗакрытииНаСервере()
НаборЗаписей=РегистрыСведений.итWMSКорзинаНоменклатуры.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.КлючДанных.Установить(ЭтаФорма.УникальныйИдентификатор);
НаборЗаписей.Прочитать();
НаборЗаписей.Очистить();
НаборЗаписей.Записать();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
МассивДанных=новый Массив;
ЗаполнитьСтруктурированныйМассивПробросаДанных(МассивДанных);
ОповеститьОВыборе(МассивДанных);
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьСтруктурированныйМассивПробросаДанных(МассивДанных)
	НабораЗаписей= РегистрыСведений.итWMSКорзинаНоменклатуры.СоздатьНаборЗаписей();
	НабораЗаписей.Отбор.КлючДанных.Установить(ЭтаФорма.УникальныйИдентификатор);
	НабораЗаписей.Прочитать();
	
	Для Каждого стр из НабораЗаписей цикл
		 СтруктураДанных=СоздатьСтруктураПередачиДанных();
		 СтруктураДанных.Вставить("Количество");
		 ЗаполнитьЗначенияСвойств(СтруктураДанных,стр);
		 МассивДанных.Добавить(СтруктураДанных);
	КонецЦикла;
 КонецПроцедуры
 &НаСервере
Процедура УдалитьСтрокуНаСервере(ИдентификаторСтрокикУдалению)
	НабораЗаписей= РегистрыСведений.итWMSКорзинаНоменклатуры.СоздатьНаборЗаписей();
	НабораЗаписей.Отбор.КлючДанных.Установить(ЭтаФорма.УникальныйИдентификатор);
	НабораЗаписей.Отбор.ИдентификаторСтроки.Установить(ИдентификаторСтрокикУдалению);
	НабораЗаписей.Прочитать();
	КоличествоКВычету=0;
	для Каждого стр из НабораЗаписей цикл
		КоличествоКВычету=КоличествоКВычету+стр.Количество;
    КонецЦикла;
	НабораЗаписей.Очистить();
	НабораЗаписей.Записать();
    КоличествоВКорзине=КоличествоВКорзине-КоличествоКВычету;	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	Если ТекущийЭлемент.Имя="Корзина" тогда
	ИдентификаторСтрокикУдалению=ТекущийЭлемент.ТекущиеДанные.ИдентификаторСтроки;
	УдалитьСтрокуНаСервере(ИдентификаторСтрокикУдалению);
	Элементы.ДанныеВыбораНоменклатуры.Обновить();
	Элементы.Корзина.Обновить();
	КонецЕсли;
КонецПроцедуры

 #КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура МассовыйВыборОбработкаОповещения(Результат,Параметры)Экспорт
	Если Результат=КодВозвратаДиалога.Нет Тогда 
		Возврат
	КонецЕсли;
	ДанныеВыбораНоменклатурыВыборКонец(Параметры);
КонецПроцедуры

&НаСервере
Процедура ВидимостьДоступностьСервер()
	Элементы.Корзина.Видимость=не Параметры.ОдиночныйВыбор;
	Элементы.ПеренестиВДокумент.Видимость=не Параметры.ОдиночныйВыбор;
	Элементы.КоличествоВКорзине.Видимость=не Параметры.ОдиночныйВыбор;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеВыбораНоменклатурыВыборКонец(ДанныеВыбора) Экспорт 
	Если ТипЗнч(ДокументОтбора)=Тип("ДокументСсылка.итWMSПеремещение") Тогда
		КонецВыбораПеремещение(ДанныеВыбора);
	Иначе
		КонецВыбора(ДанныеВыбора);
	КонецЕсли;
	
	
КонецПроцедуры
&НаКлиенте
Процедура КонецВыбора(ДанныеВыбора)
	Если Параметры.ОдиночныйВыбор тогда
		ОповеститьОВыборе(ДанныеВыбора);
	иначе
		СделатьЗаписьВКорзину(ДанныеВыбора);
		Элементы.ДанныеВыбораНоменклатуры.Обновить();
		Если ТипЗнч(ДанныеВыбора)=Тип("Массив") Тогда 
		Элементы.ДанныеВыбораНоменклатуры.ВыделенныеСтроки.Очистить();
		КонецЕсли;
		Элементы.Корзина.Обновить();
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура КонецВыбораПеремещение(ДанныеВыбора)
	Если Параметры.ОдиночныйВыбор тогда
		ФормаВладелец=ОпределенияФормыВладельца();
		ДанныеВыбора.Вставить("ИдентификаторТекущейСтрокиДокумента",ИдентификаторТекущейСтрокиДокумента);
			Если Строка(ФормаВладелец.Объект.СтатусДокумента)="Распределяется" 
				или Строка(ФормаВладелец.Объект.СтатусДокумента)="Распределен" Тогда  
				ФормаВладелец.ИзменениеРаспределенныхДанных(ДанныеВыбора);
				ЭтаФорма.Закрыть();
				Возврат
			КонецЕсли;	
		ОповеститьОВыборе(ДанныеВыбора);
	иначе
		СделатьЗаписьВКорзину(ДанныеВыбора);
		Элементы.ДанныеВыбораНоменклатуры.Обновить();
		Если ТипЗнч(ДанныеВыбора)=Тип("Массив") Тогда 
		Элементы.ДанныеВыбораНоменклатуры.ВыделенныеСтроки.Очистить();
		КонецЕсли;
		Элементы.Корзина.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СделатьЗаписьВКорзину(ДанныеВыбора)
	Если ТипЗнч(ДанныеВыбора)=Тип("Структура") Тогда 
		МассивДанных=новый Массив;
		МассивДанных.Добавить(ДанныеВыбора);
	иначе
		МассивДанных=ДанныеВыбора;
	КонецЕсли;
	
	НовыйНабораЗаписей= РегистрыСведений.итWMSКорзинаНоменклатуры.СоздатьНаборЗаписей();
	НовыйНабораЗаписей.Отбор.КлючДанных.Установить(ЭтаФорма.УникальныйИдентификатор);
	НовыйНабораЗаписей.Прочитать();
	КоличествоВКорзинеКэш=КоличествоВКорзине;
	для Каждого стр из МассивДанных цикл
	//НовыйНабораЗаписей.Очистить();
		НоваяЗапись=НовыйНабораЗаписей.Добавить();
		НоваяЗапись.ДатаЗаписи=ТекущаяДата();
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
		НоваяЗапись.КлючДанных=ЭтаФорма.УникальныйИдентификатор;
		НоваяЗапись.Ячейка = стр.Ячейка;
		НоваяЗапись.Качество=стр.Качество;
		НоваяЗапись.ИдентификаторСтроки=новый УникальныйИдентификатор;
		НоваяЗапись.Количество=стр.Количество;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		КоличествоВКорзинеКэш=КоличествоВКорзинеКэш+НоваяЗапись.Количество;
	КонецЦикла;
	НовыйНабораЗаписей.Записать();
	КоличествоВКорзине=КоличествоВКорзинеКэш;
КонецПроцедуры
&НаКлиенте
Функция СоздатьСтруктураПередачиДанныхКлиент()
	СтруктураДанных=новый Структура;
	для Каждого  Поле из ДанныеВыбораНоменклатуры.КомпоновщикНастроек.Настройки.Выбор.ДоступныеПоляВыбора.Элементы  цикл
		СтруктураДанных.Вставить(Строка(Поле.Поле));
	КонецЦикла;
	СтруктураДанных.Вставить("ОдиночныйВыбор");
	СтруктураДанных.Вставить("ОтборПоНоменклатуре");
	СтруктураДанных.Вставить("ПараметрПоискаНоменклатура");
	ЗаполнитьЗначенияСвойств(СтруктураДанных,Параметры);
	Возврат СтруктураДанных;
	КонецФункции
&НаСервере
Функция СоздатьСтруктураПередачиДанных()
	СтруктураДанных=новый Структура;
	для Каждого  Поле из ДанныеВыбораНоменклатуры.КомпоновщикНастроек.Настройки.Выбор.ДоступныеПоляВыбора.Элементы  цикл
		СтруктураДанных.Вставить(Строка(Поле.Поле));
	КонецЦикла;
	СтруктураДанных.Вставить("ОдиночныйВыбор");
	СтруктураДанных.Вставить("ОтборПоНоменклатуре");
	СтруктураДанных.Вставить("ПараметрПоискаНоменклатура");
	ЗаполнитьЗначенияСвойств(СтруктураДанных,Параметры);
	Возврат СтруктураДанных;
КонецФункции

&НаКлиенте
Функция  ОпределенияФормыВладельца()
	ФормаВладелец=Неопределено;
	Если ТипЗнч(ВладелецФормы)<>Тип("ФормаКлиентскогоПриложения") Тогда 
		СчетчикДанных=0;
		ТекущийЭлементОбхода=Неопределено;
		Пока ТипЗнч(ТекущийЭлементОбхода)<>Тип("ФормаКлиентскогоПриложения") Цикл 
			Если СчетчикДанных=0 Тогда 
				ТекущийЭлементОбхода=ВладелецФормы.Родитель;
			иначе
				ТекущийЭлементОбхода=ТекущийЭлементОбхода.Родитель;
			КонецЕсли;
			СчетчикДанных=СчетчикДанных+1;
			Если СчетчикДанных=10 Тогда 
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		ФормаВладелец=ТекущийЭлементОбхода;
	иначе
		ФормаВладелец=ВладелецФормы;
	КонецЕсли;
	Возврат ФормаВладелец;
	КонецФункции

#КонецОбласти








Функция СписаниеТоваровНаСервереОРТ(Основание) Экспорт 
	Если не Основание.Проведен тогда
		Сообщить("Проведите документ");
		Возврат Неопределено; 
	КонецЕсли;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итОтгрузкаРазмещениеТоваровТовары.Номенклатура,
	|	итОтгрузкаРазмещениеТоваровТовары.Характеристика,
	|	итОтгрузкаРазмещениеТоваровТовары.СерияНоменклатуры,
	|	СУММА(итОтгрузкаРазмещениеТоваровТовары.Количество) КАК Количество,
	|	итОтгрузкаРазмещениеТоваровТовары.ЕдиницаИзмерения,
	|	СУММА(итОтгрузкаРазмещениеТоваровТовары.КоличествоМест) КАК КоличествоМест,
	|	итОтгрузкаРазмещениеТоваровТовары.ЕдиницаИзмеренияМест,
	|	СУММА(итОтгрузкаРазмещениеТоваровТовары.Цена) КАК Цена,
	|	итОтгрузкаРазмещениеТоваровТовары.Качество,
	|	итОтгрузкаРазмещениеТоваровТовары.Коэффициент
	|ИЗ
	|	Документ.итОтгрузкаРазмещениеТоваров.Товары КАК итОтгрузкаРазмещениеТоваровТовары
	|ГДЕ
	|	итОтгрузкаРазмещениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итОтгрузкаРазмещениеТоваровТовары.Номенклатура,
	|	итОтгрузкаРазмещениеТоваровТовары.Характеристика,
	|	итОтгрузкаРазмещениеТоваровТовары.СерияНоменклатуры,
	|	итОтгрузкаРазмещениеТоваровТовары.ЕдиницаИзмерения,
	|	итОтгрузкаРазмещениеТоваровТовары.Качество,
	|	итОтгрузкаРазмещениеТоваровТовары.ЕдиницаИзмеренияМест,
	|	итОтгрузкаРазмещениеТоваровТовары.Коэффициент";
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	
	ДокументСписания=Документы.СписаниеТоваров.СоздатьДокумент();
	ДокументСписания.Склад=Основание.Склад;
	ДокументСписания.Ответственный=Основание.Ответственный;
	ДокументСписания.ОтражатьВБухгалтерскомУчете=Истина;
	ДокументСписания.ОтражатьВНалоговомУчете=Истина;
	ДокументСписания.ОтражатьВУправленческомУчете=Истина;
	ДокументСписания.Дата=ТекущаяДата();
	ДокументСписания.НДСвСтоимостиТоваров=Перечисления.ДействиеНДСВСтоимостиТоваров.ВключитьВСтоимость;
	ДокументСписания.ВидОперации=Перечисления.ВидыОперацийСписаниеТоваров.ТоварыПродукция;
	ДокументСписания.Товары.Загрузить(РезультатЗапроса);
	ДокументСписания.Организация=Справочники.Организации.НайтиПоНаименованию("ООО "+""""+"ГИФТ"+"""");
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументСписания, "ПродажаКомиссия");
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", ДокументСписания.Товары, ДокументСписания, Истина, Истина);
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументСписания);
	Возврат ДокументСписания;
КонецФункции

Функция СписаниеТоваровНаСервереWMS(Основание) Экспорт 
	Если не Основание.Проведен тогда
		Сообщить("Проведите документ");
		Возврат Неопределено; 
	КонецЕсли;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSСписаниеТовараТовары.Номенклатура,
	|	итWMSСписаниеТовараТовары.Характеристика,
	|	итWMSСписаниеТовараТовары.СерияНоменклатуры,
	|	итWMSСписаниеТовараТовары.Количество КАК Количество,
	|	итWMSСписаниеТовараТовары.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	0 КАК КоличествоМест,
	|	итWMSСписаниеТовараТовары.Номенклатура.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|	0 КАК Цена,
	|	итWMSСписаниеТовараТовары.Качество,
	|	"""" КАК Коэффициент
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.итWMSСписаниеТовара.Товары КАК итWMSСписаниеТовараТовары
	|ГДЕ
	|	итWMSСписаниеТовараТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	ВТ.Характеристика,
	|	ВТ.СерияНоменклатуры,
	|	СУММА(ВТ.Количество) КАК Количество,
	|	ВТ.ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(ВТ.Количество, 0) * ЕСТЬNULL(ВТ.ЕдиницаИзмерения.Коэффициент, 0) / ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|				ТОГДА 1
	|			ИНАЧЕ ВТ.ЕдиницаИзмеренияМест.Коэффициент
	|		КОНЕЦ) КАК КоличествоМест,
	|	ВТ.ЕдиницаИзмеренияМест,
	|	СУММА(ВТ.Цена) КАК Цена,
	|	ВТ.Качество,
	|	ВТ.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Номенклатура,
	|	ВТ.Характеристика,
	|	ВТ.СерияНоменклатуры,
	|	ВТ.ЕдиницаИзмерения,
	|	ВТ.ЕдиницаИзмеренияМест,
	|	ВТ.Качество,
	|	ВТ.ЕдиницаИзмерения.Коэффициент";
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	
	ДокументСписания=Документы.СписаниеТоваров.СоздатьДокумент();
	ДокументСписания.Склад=Основание.Склад;
	ДокументСписания.Ответственный=Основание.Ответственный;
	ДокументСписания.ОтражатьВБухгалтерскомУчете=Истина;
	ДокументСписания.ОтражатьВНалоговомУчете=Истина;
	ДокументСписания.ОтражатьВУправленческомУчете=Истина;
	ДокументСписания.Дата=ТекущаяДата();
	ДокументСписания.итОснование=Основание;
	ДокументСписания.НДСвСтоимостиТоваров=Перечисления.ДействиеНДСВСтоимостиТоваров.ВключитьВСтоимость;
	ДокументСписания.ВидОперации=Перечисления.ВидыОперацийСписаниеТоваров.ТоварыПродукция;
	ДокументСписания.Товары.Загрузить(РезультатЗапроса);
	ДокументСписания.Организация=Основание.Организация;
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументСписания, "ПродажаКомиссия");
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", ДокументСписания.Товары, ДокументСписания, Истина, Истина);
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументСписания);
	Возврат ДокументСписания;
КонецФункции


Функция СоздатьПТУ(Основание) Экспорт 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSРазмещениеТовары.Номенклатура,
	|	итWMSРазмещениеТовары.Характеристика,
	|	итWMSРазмещениеТовары.СерияНоменклатуры,
	|	СУММА(итWMSРазмещениеТовары.Количество) КАК Количество,
	|	итWMSРазмещениеТовары.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	итWMSРазмещениеТовары.Номенклатура.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|	МАКСИМУМ(1) КАК Коэффициент,
	|	СУММА(итWMSРазмещениеТовары.Количество / ЕСТЬNULL(итWMSРазмещениеТовары.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 1)) КАК КоличествоМест,
	|	итWMSРазмещениеТовары.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Документ.итWMSРазмещение.Товары КАК итWMSРазмещениеТовары
	|ГДЕ
	|	итWMSРазмещениеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSРазмещениеТовары.Номенклатура,
	|	итWMSРазмещениеТовары.Характеристика,
	|	итWMSРазмещениеТовары.СерияНоменклатуры,
	|	итWMSРазмещениеТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	итWMSРазмещениеТовары.Номенклатура.ЕдиницаИзмеренияМест,
	|	итWMSРазмещениеТовары.Номенклатура.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	итWMSРучноеРазмещениеТовары.Номенклатура,
	|	итWMSРучноеРазмещениеТовары.Характеристика,
	|	итWMSРучноеРазмещениеТовары.СерияНоменклатуры,
	|	СУММА(итWMSРучноеРазмещениеТовары.Количество),
	|	итWMSРучноеРазмещениеТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	итWMSРучноеРазмещениеТовары.Номенклатура.ЕдиницаИзмеренияМест,
	|	МАКСИМУМ(1),
	|	СУММА(итWMSРучноеРазмещениеТовары.Количество / ЕСТЬNULL(итWMSРучноеРазмещениеТовары.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 1)),
	|	итWMSРучноеРазмещениеТовары.Номенклатура.СтавкаНДС
	|ИЗ
	|	Документ.итWMSРучноеРазмещение.Товары КАК итWMSРучноеРазмещениеТовары
	|ГДЕ
	|	итWMSРучноеРазмещениеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSРучноеРазмещениеТовары.Номенклатура,
	|	итWMSРучноеРазмещениеТовары.СерияНоменклатуры,
	|	итWMSРучноеРазмещениеТовары.Характеристика,
	|	итWMSРучноеРазмещениеТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	итWMSРучноеРазмещениеТовары.Номенклатура.ЕдиницаИзмеренияМест,
	|	итWMSРучноеРазмещениеТовары.Номенклатура.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	итWMSПриемкаТовары.Номенклатура,
	|	итWMSПриемкаТовары.Характеристика,
	|	итWMSПриемкаТовары.СерияНоменклатуры,
	|	СУММА(итWMSПриемкаТовары.КоличествоФакт),
	|	итWMSПриемкаТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	итWMSПриемкаТовары.Номенклатура.ЕдиницаИзмеренияМест,
	|	МАКСИМУМ(1),
	|	СУММА(итWMSПриемкаТовары.КоличествоФакт / ЕСТЬNULL(итWMSПриемкаТовары.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 1)),
	|	итWMSПриемкаТовары.Номенклатура.СтавкаНДС
	|ИЗ
	|	Документ.итWMSПриемка.Товары КАК итWMSПриемкаТовары
	|ГДЕ
	|	итWMSПриемкаТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSПриемкаТовары.Номенклатура,
	|	итWMSПриемкаТовары.СерияНоменклатуры,
	|	итWMSПриемкаТовары.Характеристика,
	|	итWMSПриемкаТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	итWMSПриемкаТовары.Номенклатура.ЕдиницаИзмеренияМест,
	|	итWMSПриемкаТовары.Номенклатура.СтавкаНДС";
	
	Запрос.УстановитьПараметр("Ссылка",Основание);	
	РезультатЗапроса = Запрос.Выполнить();
	ДокументПТУ=Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	ДокументПТУ.Контрагент=Основание.Контрагент;
	ДокументПТУ.ВидПоступления=Перечисления.ВидыПоступленияТоваров.НаСклад;
	ДокументПТУ.Организация=Основание.Организация;
	ДокументПТУ.ДоговорКонтрагента=ДокументПТУ.Контрагент.ОсновнойДоговорКонтрагента;
	ДокументПТУ.СкладОрдер=Основание.Склад;
	ДокументПТУ.алкПунктРазгрузки=ДокументПТУ.Контрагент.алкОсновнойПунктРазгрузки;
	ДокументПТУ.алкЛицензияКонтрагента=ДокументПТУ.алкПунктРазгрузки.алкОсновнаяЛицензия;
	ДокументПТУ.алкПунктРазгрузкиОрганизации=ДокументПТУ.Организация.алкОсновнойПунктРазгрузки;
	ДокументПТУ.алкЛицензияОрганизации=ДокументПТУ.алкПунктРазгрузкиОрганизации.алкОсновнаяЛицензия;
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.итWMSРазмещение") Тогда 
		ДокументПТУ.НомерВходящегоДокумента=Основание.итОснование.НомерВходящегоДокумента;
		ДокументПТУ.ДатаВходящегоДокумента=Основание.итОснование.ДатаВходящегоДокумента;
	иначе
		ДокументПТУ.НомерВходящегоДокумента=Основание.НомерВходящегоДокумента;
		ДокументПТУ.ДатаВходящегоДокумента=Основание.ДатаВходящегоДокумента;
	КонецЕсли;
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.итWMSПриемка") Тогда 
	ДокументПТУ.ит_WMS_ГУИД_ДокументаТранизата=Основание.ГУИД_ДокументаТранизата;
	КонецЕсли;
	ДокументПТУ.Дата=ТекущаяДата();
	ДокументПТУ.итОснование=Основание.Ссылка;
	//ДокументПТУ.ОтражатьВБухгалтерскомУчете=Истина;
	//ДокументПТУ.ОтражатьВНалоговомУчете=Истина;
	//ДокументПТУ.ОтражатьВУправленческомУчете=Истина;
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументПТУ, "ПокупкаКомиссия");	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=ДокументПТУ.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);	
	КонецЦикла;
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", ДокументПТУ.Товары, ДокументПТУ, Истина, Истина);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументПТУ);

	Возврат ДокументПТУ;
КонецФункции

Функция СоздатьПеремещение(Основание) Экспорт 
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.итWMSПеремещение") тогда
		Возврат ПеремещениеНаОснованииИтWmsПеремещения(Основание);
	КонецЕсли;
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.итWMSИзменениеПараметровТовараВЯчейках") тогда
		Возврат ПеремещениеНаОснованииИтWMSИзменениеПараметровТовараВЯчейках(Основание);
	КонецЕсли;
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.итWMSСписаниеТовара") тогда
		Возврат ПеремещениеНаОснованииИтWMSСписания(Основание);
	КонецЕсли;
КонецФункции
Функция ПеремещениеНаОснованииИтWmsПеремещения(Основание)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.Номенклатура,
	|	итWMSПеремещениеТовары.Характеристика,
	|	итWMSПеремещениеТовары.СерияНоменклатуры,
	|	итWMSПеремещениеТовары.Качество,
	|	итWMSПеремещениеТовары.ДатаРозлива,
	|	СУММА(итWMSПеремещениеТовары.КоличествоФакт) КАК Количество,
	|	НМ.ЕдиницаХраненияОстатков,
	|	НМ.ЕдиницаИзмеренияМест,
	|	СУММА(ЕСТЬNULL(итWMSПеремещениеТовары.КоличествоФакт, 0) / ЕСТЬNULL(НМ.ЕдиницаИзмеренияМест.Коэффициент, 1)) КАК КоличествоМест,
	|	НМ.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.итWMSПеремещение.Товары КАК итWMSПеремещениеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НМ
	|		ПО итWMSПеремещениеТовары.Номенклатура = НМ.Ссылка
	|ГДЕ
	|	итWMSПеремещениеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSПеремещениеТовары.Номенклатура,
	|	итWMSПеремещениеТовары.Характеристика,
	|	итWMSПеремещениеТовары.СерияНоменклатуры,
	|	итWMSПеремещениеТовары.Качество,
	|	итWMSПеремещениеТовары.ДатаРозлива,
	|	НМ.ЕдиницаХраненияОстатков,
	|	НМ.ЕдиницаИзмеренияМест";
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	РезультатЗапроса = Запрос.Выполнить();
	Запрос.УстановитьПараметр("Ссылка",Основание);	
	РезультатЗапроса = Запрос.Выполнить();
	ДокументПеремещения=Документы.ПеремещениеТоваров.СоздатьДокумент();
	ДокументПеремещения.ОтражатьВБухгалтерскомУчете=Истина;
	ДокументПеремещения.ОтражатьВНалоговомУчете = Истина;
	ДокументПеремещения.ОтражатьВУправленческомУчете = Истина;
	ДокументПеремещения.ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
	ДокументПеремещения.Организация=Основание.Организация;
	ДокументПеремещения.СкладОтправитель=Основание.СкладОтправитель;
	ДокументПеремещения.СкладПолучатель=Основание.СкладПолучатель;
	ДокументПеремещения.Ответственный=Основание.Ответственный;
	ДокументПеремещения.Дата=ТекущаяДата();
	ДокументПеремещения.итОснование=Основание.Ссылка;
	//ДокументПТУ.ОтражатьВБухгалтерскомУчете=Истина;
	//ДокументПТУ.ОтражатьВНалоговомУчете=Истина;
	//ДокументПТУ.ОтражатьВУправленческомУчете=Истина;
	//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументПеремещения, "ПокупкаКомиссия");
	
	
	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=ДокументПеремещения.Товары.Добавить();
		НоваяСтрока.Номенклатура               = ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры = ВыборкаДетальныеЗаписи.Характеристика;
		НоваяСтрока.СерияНоменклатуры          = ВыборкаДетальныеЗаписи.СерияНоменклатуры;
		НоваяСтрока.ЕдиницаИзмерения           = ВыборкаДетальныеЗаписи.ЕдиницаХраненияОстатков;
		НоваяСтрока.ЕдиницаИзмеренияМест       = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияМест;
		НоваяСтрока.Количество                 = ВыборкаДетальныеЗаписи.Количество;
		НоваяСтрока.КоличествоМест             = ВыборкаДетальныеЗаписи.КоличествоМест;
		НоваяСтрока.Коэффициент                = ВыборкаДетальныеЗаписи.Коэффициент;
		НоваяСтрока.Качество                   = ВыборкаДетальныеЗаписи.Качество;
		
		СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", НоваяСтрока, ДокументПеремещения, Истина, Истина);
		
	КонецЦикла;
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументПеремещения);
	Возврат ДокументПеремещения;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецФункции

Функция ПеремещениеНаОснованииИтWMSИзменениеПараметровТовараВЯчейках(Основание)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Номенклатура,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ХарактеристикаИзменения КАК Характеристика,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.СерияНоменклатурыИзменения КАК СерияНоменклатуры,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.КачествоИзменения КАК Качество,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ДатаРозливаИзменения КАК ДатаРозлива,
	|	СУММА(итWMSИзменениеПараметровТовараВЯчейкахТовары.КоличествоИзменения) КАК Количество,
	|	НМ.ЕдиницаХраненияОстатков,
	|	НМ.ЕдиницаИзмеренияМест,
	|	СУММА(ЕСТЬNULL(итWMSИзменениеПараметровТовараВЯчейкахТовары.КоличествоИзменения, 0) / ЕСТЬNULL(НМ.ЕдиницаИзмеренияМест.Коэффициент, 1)) КАК КоличествоМест,
	|	НМ.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.итWMSИзменениеПараметровТовараВЯчейках.Товары КАК итWMSИзменениеПараметровТовараВЯчейкахТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НМ
	|		ПО итWMSИзменениеПараметровТовараВЯчейкахТовары.Номенклатура = НМ.Ссылка
	|ГДЕ
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НМ.ЕдиницаХраненияОстатков,
	|	НМ.ЕдиницаИзмеренияМест,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Номенклатура,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.КачествоИзменения,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.СерияНоменклатурыИзменения,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ХарактеристикаИзменения,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ДатаРозливаИзменения,
	|	НМ.ЕдиницаХраненияОстатков.Коэффициент";
 
	Запрос.УстановитьПараметр("Ссылка", Основание);
	РезультатЗапроса = Запрос.Выполнить();
	ДокументПеремещения=Документы.ПеремещениеТоваров.СоздатьДокумент();
	ДокументПеремещения.ОтражатьВБухгалтерскомУчете=Истина;
	ДокументПеремещения.ОтражатьВНалоговомУчете = Истина;
	ДокументПеремещения.ОтражатьВУправленческомУчете = Истина;
	ДокументПеремещения.ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
	ДокументПеремещения.Организация=Основание.ОрганизацияОтправитель;
	ДокументПеремещения.СкладОтправитель=Основание.СкладОтправитель;
	ДокументПеремещения.СкладПолучатель=Основание.СкладПолучатель;
	ДокументПеремещения.Ответственный=Основание.Ответственный;
	ДокументПеремещения.Дата=ТекущаяДата();
	ДокументПеремещения.итОснование=Основание.Ссылка;
	//ДокументПТУ.ОтражатьВБухгалтерскомУчете=Истина;
	//ДокументПТУ.ОтражатьВНалоговомУчете=Истина;
	//ДокументПТУ.ОтражатьВУправленческомУчете=Истина;
	//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументПеремещения, "ПокупкаКомиссия");
	
	
	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=ДокументПеремещения.Товары.Добавить();
		НоваяСтрока.Номенклатура               = ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры = ВыборкаДетальныеЗаписи.Характеристика;
		НоваяСтрока.СерияНоменклатуры          = ВыборкаДетальныеЗаписи.СерияНоменклатуры;
		НоваяСтрока.ЕдиницаИзмерения           = ВыборкаДетальныеЗаписи.ЕдиницаХраненияОстатков;
		НоваяСтрока.ЕдиницаИзмеренияМест       = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияМест;
		НоваяСтрока.Количество                 = ВыборкаДетальныеЗаписи.Количество;
		НоваяСтрока.КоличествоМест             = ВыборкаДетальныеЗаписи.КоличествоМест;
		НоваяСтрока.Коэффициент                = ВыборкаДетальныеЗаписи.Коэффициент;
		НоваяСтрока.Качество                   = ВыборкаДетальныеЗаписи.Качество;
		
		СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", НоваяСтрока, ДокументПеремещения, Истина, Истина);
		
	КонецЦикла;
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументПеремещения);
	Возврат ДокументПеремещения;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		КонецФункции
		
Функция ПеремещениеНаОснованииИтWMSСписания(Основание)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
	|	итWMSСписаниеТовараТовары.Номенклатура,
	|	итWMSСписаниеТовараТовары.Характеристика КАК Характеристика,
	|	итWMSСписаниеТовараТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итWMSСписаниеТовараТовары.Качество КАК Качество,
	|	итWMSСписаниеТовараТовары.ДатаРозлива КАК ДатаРозлива,
	|	СУММА(итWMSСписаниеТовараТовары.Количество) КАК Количество,
	|	НМ.ЕдиницаХраненияОстатков,
	|	НМ.ЕдиницаИзмеренияМест,
	|	СУММА(ЕСТЬNULL(итWMSСписаниеТовараТовары.Количество, 0) / ЕСТЬNULL(НМ.ЕдиницаИзмеренияМест.Коэффициент, 1)) КАК КоличествоМест,
	|	НМ.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.итWMSСписаниеТовара.Товары КАК итWMSСписаниеТовараТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НМ
	|		ПО итWMSСписаниеТовараТовары.Номенклатура = НМ.Ссылка
	|ГДЕ
	|	итWMSСписаниеТовараТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НМ.ЕдиницаХраненияОстатков,
	|	НМ.ЕдиницаИзмеренияМест,
	|	итWMSСписаниеТовараТовары.Номенклатура,
	|	НМ.ЕдиницаХраненияОстатков.Коэффициент,
	|	итWMSСписаниеТовараТовары.Характеристика,
	|	итWMSСписаниеТовараТовары.СерияНоменклатуры,
	|	итWMSСписаниеТовараТовары.Качество,
	|	итWMSСписаниеТовараТовары.ДатаРозлива";
	
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	РезультатЗапроса = Запрос.Выполнить();
	ДокументПеремещения=Документы.ПеремещениеТоваров.СоздатьДокумент();
	ДокументПеремещения.ОтражатьВБухгалтерскомУчете=Истина;
	ДокументПеремещения.ОтражатьВНалоговомУчете = Истина;
	ДокументПеремещения.ОтражатьВУправленческомУчете = Истина;
	ДокументПеремещения.ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
	ДокументПеремещения.Организация=Основание.Организация;
	ДокументПеремещения.СкладОтправитель=Основание.Склад;
	ДокументПеремещения.Ответственный=Основание.Ответственный;
	ДокументПеремещения.Дата=ТекущаяДата();
	ДокументПеремещения.итОснование=Основание.Ссылка;
	//ДокументПТУ.ОтражатьВБухгалтерскомУчете=Истина;
	//ДокументПТУ.ОтражатьВНалоговомУчете=Истина;
	//ДокументПТУ.ОтражатьВУправленческомУчете=Истина;
	//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументПеремещения, "ПокупкаКомиссия");
	
	
	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=ДокументПеремещения.Товары.Добавить();
		НоваяСтрока.Номенклатура               = ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры = ВыборкаДетальныеЗаписи.Характеристика;
		НоваяСтрока.СерияНоменклатуры          = ВыборкаДетальныеЗаписи.СерияНоменклатуры;
		НоваяСтрока.ЕдиницаИзмерения           = ВыборкаДетальныеЗаписи.ЕдиницаХраненияОстатков;
		НоваяСтрока.ЕдиницаИзмеренияМест       = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияМест;
		НоваяСтрока.Количество                 = ВыборкаДетальныеЗаписи.Количество;
		НоваяСтрока.КоличествоМест             = ВыборкаДетальныеЗаписи.КоличествоМест;
		НоваяСтрока.Коэффициент                = ВыборкаДетальныеЗаписи.Коэффициент;
		НоваяСтрока.Качество                   = ВыборкаДетальныеЗаписи.Качество;
		СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", НоваяСтрока, ДокументПеремещения, Истина, Истина);	
	КонецЦикла;
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументПеремещения);
	Возврат ДокументПеремещения;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		
	КонецФункции
Функция СоздатьРеализацию(Основание) Экспорт 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяТовары.Номенклатура,
	|	МАКСИМУМ(ЗаказПокупателяТовары.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(ЗаказПокупателяТовары.Цена) КАК Цена,
	|	ЗаказПокупателяТовары.ХарактеристикаНоменклатуры,
	|	итWMSНаборка.Ссылка КАК Наборка,
	|	МАКСИМУМ(ЗаказПокупателяТовары.ПроцентСкидкиНаценки) КАК ПроцентСкидкиНаценки,
	|	МАКСИМУМ(ЗаказПокупателяТовары.ПроцентАвтоматическихСкидок) КАК ПроцентАвтоматическихСкидок,
	|	МАКСИМУМ(ЗаказПокупателяТовары.УсловиеАвтоматическойСкидки) КАК УсловиеАвтоматическойСкидки,
	|	МАКСИМУМ(ЗаказПокупателяТовары.ЗначениеУсловияАвтоматическойСкидки) КАК ЗначениеУсловияАвтоматическойСкидки
	|ПОМЕСТИТЬ ДанныеЦеныПоЗаказу
	|ИЗ
	|	Документ.итWMSНаборка КАК итWMSНаборка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|		ПО итWMSНаборка.итОснование = ЗаказПокупателяТовары.Ссылка
	|ГДЕ
	|	итWMSНаборка.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяТовары.Номенклатура,
	|	ЗаказПокупателяТовары.ХарактеристикаНоменклатуры,
	|	итWMSНаборка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итWMSНаборкаТовары.Ссылка КАК Ссылка,
	|	итWMSНаборкаТовары.Номенклатура,
	|	итWMSНаборкаТовары.Характеристика,
	|	итWMSНаборкаТовары.СерияНоменклатуры,
	|	итWMSНаборкаТовары.Качество,
	|	итWMSНаборкаТовары.ДатаРозлива,
	|	СУММА(итWMSНаборкаТовары.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА итWMSНаборкаТовары.ФиксацияСтроки
	|				ТОГДА ВЫБОР
	|						КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	|							ТОГДА ЕСТЬNULL(итWMSНаборкаТовары.КоличествоФакт, 0) - ЕСТЬNULL(итWMSНаборкаТовары.КоличествоИзъятия, 0)
	|						ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	|						ТОГДА ЕСТЬNULL(итWMSНаборкаТовары.Количество, 0) - ЕСТЬNULL(итWMSНаборкаТовары.КоличествоИзъятия, 0)
	|					ИНАЧЕ итWMSНаборкаТовары.Количество
	|				КОНЕЦ
	|		КОНЕЦ) КАК КоличествоФакт,
	|	итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	ДанныеЦеныПоЗаказу.Цена,
	|	ДанныеЦеныПоЗаказу.СтавкаНДС,
	|	ДанныеЦеныПоЗаказу.ПроцентСкидкиНаценки,
	|	ДанныеЦеныПоЗаказу.ПроцентАвтоматическихСкидок,
	|	ДанныеЦеныПоЗаказу.УсловиеАвтоматическойСкидки,
	|	ДанныеЦеныПоЗаказу.ЗначениеУсловияАвтоматическойСкидки
	|ИЗ
	|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЦеныПоЗаказу КАК ДанныеЦеныПоЗаказу
	|		ПО итWMSНаборкаТовары.Номенклатура = ДанныеЦеныПоЗаказу.Номенклатура
	|			И итWMSНаборкаТовары.Ссылка = ДанныеЦеныПоЗаказу.Наборка
	|			И итWMSНаборкаТовары.Характеристика = ДанныеЦеныПоЗаказу.ХарактеристикаНоменклатуры
	|ГДЕ
	|	итWMSНаборкаТовары.Ссылка = &Ссылка
	|	И ВЫБОР
	|			КОГДА итWMSНаборкаТовары.ФиксацияСтроки
	|				ТОГДА ВЫБОР
	|						КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	|							ТОГДА ЕСТЬNULL(итWMSНаборкаТовары.КоличествоФакт, 0) - ЕСТЬNULL(итWMSНаборкаТовары.КоличествоИзъятия, 0)
	|						ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	|						ТОГДА ЕСТЬNULL(итWMSНаборкаТовары.Количество, 0) - ЕСТЬNULL(итWMSНаборкаТовары.КоличествоИзъятия, 0)
	|					ИНАЧЕ итWMSНаборкаТовары.Количество
	|				КОНЕЦ
	|		КОНЕЦ > 0
	|	И итWMSНаборкаТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итWMSСостоянияЗадачТСД.Отменена)
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSНаборкаТовары.Ссылка,
	|	итWMSНаборкаТовары.Номенклатура,
	|	итWMSНаборкаТовары.Характеристика,
	|	итWMSНаборкаТовары.СерияНоменклатуры,
	|	итWMSНаборкаТовары.Качество,
	|	итWMSНаборкаТовары.ДатаРозлива,
	|	итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	ДанныеЦеныПоЗаказу.Цена,
	|	ДанныеЦеныПоЗаказу.СтавкаНДС,
	|	ДанныеЦеныПоЗаказу.ПроцентСкидкиНаценки,
	|	ДанныеЦеныПоЗаказу.ПроцентАвтоматическихСкидок,
	|	ДанныеЦеныПоЗаказу.УсловиеАвтоматическойСкидки,
	|	ДанныеЦеныПоЗаказу.ЗначениеУсловияАвтоматическойСкидки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Основание);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если  ВыборкаСсылка.Следующий() тогда
		ДокументРеализации = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокументРеализации,Основание.ИтОснование,,"Номер,Дата,Проведен,ПометкаУдаления,Комментарий");
		ЗаполнитьЗначенияСвойств(ДокументРеализации,ВыборкаСсылка.Ссылка,,"Номер,Дата,Проведен,ПометкаУдаления,Комментарий");
		ДокументРеализации.итОснование=Основание;
		ДокументРеализации.Сделка=Основание.ИтОснование;
		ДокументРеализации.Дата=ТекущаяДата();
		ДокументРеализации.ВалютаДокумента=Основание.ИтОснование.ВалютаДокумента;;
		ДокументРеализации.СуммаВключаетНДС=Основание.ИтОснование.СуммаВключаетНДС;
		ДокументРеализации.УчитыватьНДС=Основание.ИтОснование.УчитыватьНДС;
		ДокументРеализации.алкЛицензияКонтрагента=Основание.ИтОснование.алкЛицензияКонтрагента;
		ДокументРеализации.алкЛицензияОрганизации=Основание.ИтОснование.алкЛицензияОрганизации;
		ДокументРеализации.алкПунктРазгрузки=Основание.ИтОснование.алкПунктРазгрузки;
		ДокументРеализации.алкПунктРазгрузкиОрганизации=Основание.ИтОснование.алкПунктРазгрузкиОрганизации;
        Попытка
			ДокументРеализации.БанковскийСчетОрганизации = Основание.ИтОснование.СтруктурнаяЕдиница;
		Исключение
			ДокументРеализации.БанковскийСчетОрганизации = ДокументРеализации.Контрагент.ОсновнойБанковскийСчет;
		КонецПопытки;
		Попытка
			ДокументРеализации.ДоговорКонтрагента = Основание.ИтОснование.ДоговорКонтрагента;
		Исключение
			ДокументРеализации.ДоговорКонтрагента = ДокументРеализации.Контрагент.ОсновнойДоговорКонтрагента;
		КонецПопытки;
		ДокументРеализации.НомерЗаказа=Основание.ИтОснование.НомерЗаказа;
        СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(ДокументРеализации.ВалютаДокумента, ОбщегоНазначения.ПолучитьРабочуюДату());
	    ДокументРеализации.КурсВзаиморасчетов           = СтруктураКурсаВзаиморасчетов.Курс;
        ДокументРеализации.Ответственный = ПараметрыСеанса.ТекущийПользователь;

		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока=ДокументРеализации.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
			НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.КоличествоФакт;
			НоваяСтрока.ЕдиницаИзмерения=ВыборкаДетальныеЗаписи.НоменклатураЕдиницаХраненияОстатков;
			НоваяСтрока.ЕдиницаИзмеренияМест=НоваяСтрока.Номенклатура.ЕдиницаИзмеренияМест;
			НоваяСтрока.Коэффициент=НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
			НоваяСтрока.ПроцентСкидкиНаценки=ВыборкаДетальныеЗаписи.ПроцентСкидкиНаценки;
			НоваяСтрока.ПроцентАвтоматическихСкидок=ВыборкаДетальныеЗаписи.ПроцентАвтоматическихСкидок;
			НоваяСтрока.УсловиеАвтоматическойСкидки=ВыборкаДетальныеЗаписи.УсловиеАвтоматическойСкидки;
			НоваяСтрока.ЗначениеУсловияАвтоматическойСкидки=ВыборкаДетальныеЗаписи.ЗначениеУсловияАвтоматическойСкидки;
			Если  НоваяСтрока.ЕдиницаИзмеренияМест.Коэффициент = 0 тогда
				Сообщить(" не возможно рассчитать количество мест для номенклатуры "+НоваяСтрока.Номенклатура+" т.е не указан коэфициент еденицы мест");
			иначе
				НоваяСтрока.КоличествоМест=НоваяСтрока.Количество / НоваяСтрока.ЕдиницаИзмеренияМест.Коэффициент;
			КонецЕсли;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрока, ДокументРеализации);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, ДокументРеализации);
			ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрока,ДокументРеализации);
			НоваяСтрока.СпособСписанияОстаткаТоваров=Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва;
			
		КонецЦикла;
		ДокументРеализации.ПроставитьМенеджеров();
		ДокументРеализации.УстановитьРуководителяИГлавногоБухгалтера();
		УстанениеРасхожденияПоКопейкам(ДокументРеализации);
	иначе
		ДокументРеализации=Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	КонецЕсли;
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументРеализации);
	Возврат ДокументРеализации;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецФункции

Функция СоздатьРеализациюДокументРучнойОтгрузки(Основание) Экспорт 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяТовары.Номенклатура,
	|	МАКСИМУМ(ЗаказПокупателяТовары.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(ЗаказПокупателяТовары.Цена) КАК Цена,
	|	ЗаказПокупателяТовары.ХарактеристикаНоменклатуры,
	|	итWMSРучнаяОтгрузка.Ссылка КАК Наборка
	|ПОМЕСТИТЬ ДанныеЦеныПоЗаказу
	|ИЗ
	|	Документ.итWMSРучнаяОтгрузка КАК итWMSРучнаяОтгрузка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|		ПО итWMSРучнаяОтгрузка.итОснование = ЗаказПокупателяТовары.Ссылка
	|ГДЕ
	|	итWMSРучнаяОтгрузка.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяТовары.Номенклатура,
	|	ЗаказПокупателяТовары.ХарактеристикаНоменклатуры,
	|	итWMSРучнаяОтгрузка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итWMSРучнаяОтгрузкаТовары.Ссылка КАК Ссылка,
	|	итWMSРучнаяОтгрузкаТовары.Номенклатура,
	|	итWMSРучнаяОтгрузкаТовары.Характеристика,
	|	итWMSРучнаяОтгрузкаТовары.СерияНоменклатуры,
	|	итWMSРучнаяОтгрузкаТовары.Качество,
	|	итWMSРучнаяОтгрузкаТовары.ДатаРозлива,
	|	СУММА(итWMSРучнаяОтгрузкаТовары.Количество) КАК Количество,
	|	итWMSРучнаяОтгрузкаТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	ЕСТЬNULL(ДанныеЦеныПоЗаказу.Цена, 0) КАК цена,
	|	ЕСТЬNULL(ДанныеЦеныПоЗаказу.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)) КАК СтавкаНДС
	|ИЗ
	|	Документ.итWMSРучнаяОтгрузка.Товары КАК итWMSРучнаяОтгрузкаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЦеныПоЗаказу КАК ДанныеЦеныПоЗаказу
	|		ПО итWMSРучнаяОтгрузкаТовары.Номенклатура = ДанныеЦеныПоЗаказу.Номенклатура
	|			И итWMSРучнаяОтгрузкаТовары.Ссылка = ДанныеЦеныПоЗаказу.Наборка
	|			И итWMSРучнаяОтгрузкаТовары.Характеристика = ДанныеЦеныПоЗаказу.ХарактеристикаНоменклатуры
	|ГДЕ
	|	итWMSРучнаяОтгрузкаТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSРучнаяОтгрузкаТовары.Ссылка,
	|	итWMSРучнаяОтгрузкаТовары.Номенклатура,
	|	итWMSРучнаяОтгрузкаТовары.Характеристика,
	|	итWMSРучнаяОтгрузкаТовары.СерияНоменклатуры,
	|	итWMSРучнаяОтгрузкаТовары.Качество,
	|	итWMSРучнаяОтгрузкаТовары.ДатаРозлива,
	|	итWMSРучнаяОтгрузкаТовары.Номенклатура.ЕдиницаХраненияОстатков,
	|	ЕСТЬNULL(ДанныеЦеныПоЗаказу.Цена, 0),
	|	ЕСТЬNULL(ДанныеЦеныПоЗаказу.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Основание);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если Основание.ИтОснование=Неопределено Тогда
	ИтОснованиеДокумента=Документы.ЗаказПокупателя.ПустаяСсылка();
    иначе
	ИтОснованиеДокумента= Основание.ИтОснование;
	КонецЕсли;
	Если  ВыборкаСсылка.Следующий() тогда
		ДокументРеализации = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокументРеализации,ИтОснованиеДокумента,,"Номер,Дата,Проведен,ПометкаУдаления");
		ЗаполнитьЗначенияСвойств(ДокументРеализации,ВыборкаСсылка.Ссылка,,"Номер,Дата,Проведен,ПометкаУдаления");
		ДокументРеализации.итОснование=Основание;
		ДокументРеализации.Сделка=Основание.ИтОснование;
		ДокументРеализации.Дата=ТекущаяДата();
		ДокументРеализации.ВалютаДокумента=ИтОснованиеДокумента.ВалютаДокумента;;
		ДокументРеализации.СуммаВключаетНДС=ИтОснованиеДокумента.СуммаВключаетНДС;
		ДокументРеализации.УчитыватьНДС=ИтОснованиеДокумента.УчитыватьНДС;
		ДокументРеализации.алкЛицензияКонтрагента=ИтОснованиеДокумента.алкЛицензияКонтрагента;
		ДокументРеализации.алкЛицензияОрганизации=ИтОснованиеДокумента.алкЛицензияОрганизации;
		ДокументРеализации.алкПунктРазгрузки=ИтОснованиеДокумента.алкПунктРазгрузки;
		ДокументРеализации.алкПунктРазгрузкиОрганизации=ИтОснованиеДокумента.алкПунктРазгрузкиОрганизации;
        Попытка
			ДокументРеализации.БанковскийСчетОрганизации = ИтОснованиеДокумента.СтруктурнаяЕдиница;
		Исключение
			ДокументРеализации.БанковскийСчетОрганизации = ДокументРеализации.Контрагент.ОсновнойБанковскийСчет;
		КонецПопытки;
		Попытка
			ДокументРеализации.ДоговорКонтрагента = ИтОснованиеДокумента.ДоговорКонтрагента;
		Исключение
			ДокументРеализации.ДоговорКонтрагента = ДокументРеализации.Контрагент.ОсновнойДоговорКонтрагента;
		КонецПопытки;
		ДокументРеализации.НомерЗаказа=ИтОснованиеДокумента.НомерЗаказа;
        СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(ДокументРеализации.ВалютаДокумента, ОбщегоНазначения.ПолучитьРабочуюДату());
	    ДокументРеализации.КурсВзаиморасчетов           = СтруктураКурсаВзаиморасчетов.Курс;
        ДокументРеализации.Ответственный = ПараметрыСеанса.ТекущийПользователь;

		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока=ДокументРеализации.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
			НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.Количество;
			НоваяСтрока.ЕдиницаИзмерения=ВыборкаДетальныеЗаписи.НоменклатураЕдиницаХраненияОстатков;
			НоваяСтрока.ЕдиницаИзмеренияМест=НоваяСтрока.Номенклатура.ЕдиницаИзмеренияМест;
			НоваяСтрока.Коэффициент=НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
			Если  НоваяСтрока.ЕдиницаИзмеренияМест.Коэффициент = 0 тогда
				Сообщить(" не возможно рассчитать количество мест для номенклатуры "+НоваяСтрока.Номенклатура+" т.е не указан коэфициент еденицы мест");
			иначе
				НоваяСтрока.КоличествоМест=НоваяСтрока.Количество / НоваяСтрока.ЕдиницаИзмеренияМест.Коэффициент;
			КонецЕсли;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрока, ДокументРеализации);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, ДокументРеализации);
			НоваяСтрока.СпособСписанияОстаткаТоваров=Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва;
			
		КонецЦикла;
		ДокументРеализации.ПроставитьМенеджеров();
		ДокументРеализации.УстановитьРуководителяИГлавногоБухгалтера();
		УстанениеРасхожденияПоКопейкам(ДокументРеализации);
	иначе
		ДокументРеализации=Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	КонецЕсли;
	Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,ДокументРеализации);

	Возврат ДокументРеализации;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецФункции

Процедура УстанениеРасхожденияПоКопейкам(ДокументРеализации)
	Если НЕ ДокументРеализации.СуммаВключаетНДС Тогда 
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТЧ.Номенклатура,
				|	ТЧ.Сумма,
				|	ТЧ.НомерСтроки,
				|	ТЧ.СуммаНДС
				|ПОМЕСТИТЬ ВТ_ТЧ
				|ИЗ
				|	&ТЧ КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗаказПокупателяТовары.Номенклатура,
				|	СУММА(ЗаказПокупателяТовары.Сумма) КАК Сумма,
				|	СУММА(ЗаказПокупателяТовары.СуммаНДС) КАК СуммаНДС
				|ПОМЕСТИТЬ ВТ_Заказ
				|ИЗ
				|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
				|ГДЕ
				|	ЗаказПокупателяТовары.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗаказПокупателяТовары.Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_ТЧ.Номенклатура,
				|	ВТ_ТЧ.Сумма,
				|	ВТ_ТЧ.НомерСтроки,
				|	ВТ_Заказ.Сумма КАК СуммаВЗаказе,
				|	ВТ_ТЧ.СуммаНДС,
				|	ВТ_Заказ.СуммаНДС КАК СуммаНДСВЗаказе
				|ПОМЕСТИТЬ ВТ_10
				|ИЗ
				|	ВТ_ТЧ КАК ВТ_ТЧ
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказ КАК ВТ_Заказ
				|		ПО ВТ_ТЧ.Номенклатура = ВТ_Заказ.Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_10.Номенклатура КАК Номенклатура,
				|	ЕСТЬNULL(ВТ_10.Сумма, 0) КАК Сумма,
				|	ВТ_10.НомерСтроки КАК НомерСтроки,
				|	ЕСТЬNULL(ВТ_10.СуммаВЗаказе, 0) КАК СуммаВЗаказе,
				|	ЕСТЬNULL(ВТ_10.СуммаНДС, 0) КАК СуммаНДС,
				|	ЕСТЬNULL(ВТ_10.СуммаНДСВЗаказе, 0) КАК СуммаНДСВЗаказе
				|ИЗ
				|	ВТ_10 КАК ВТ_10
				|ИТОГИ
				|	СУММА(Сумма),
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки),
				|	МАКСИМУМ(СуммаВЗаказе),
				|	СУММА(СуммаНДС),
				|	МАКСИМУМ(СуммаНДСВЗаказе)
				|ПО
				|	Номенклатура";
				
			Запрос.УстановитьПараметр("ТЧ", ДокументРеализации.Товары);	
			Запрос.УстановитьПараметр("Ссылка", ДокументРеализации.Сделка );
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаНоменклатура.Следующий() Цикл
				_Разница = ВыборкаНоменклатура.Сумма - ВыборкаНоменклатура.СуммаВЗаказе;
				_РазницаНДС = ВыборкаНоменклатура.СуммаНДС - ВыборкаНоменклатура.СуммаНДСВЗаказе;
				Если _Разница<>0 ИЛИ _РазницаНДС<>0 Тогда 
					Выборка =  ВыборкаНоменклатура.Выбрать();
					_СуммаВРеализации = 0;
					_СуммаНДСВРеализации = 0;
					Пока Выборка.Следующий() Цикл 
						_НС = Выборка.НомерСтроки-1;
						ДокументРеализации.Товары[_НС].Сумма = ДокументРеализации.Товары[_НС].Сумма - _Разница/ВыборкаНоменклатура.НомерСтроки;
						_СуммаВРеализации = _СуммаВРеализации + ДокументРеализации.Товары[_НС].Сумма;
						ДокументРеализации.Товары[_НС].СуммаНДС = ДокументРеализации.Товары[_НС].СуммаНДС - _РазницаНДС/ВыборкаНоменклатура.НомерСтроки;
						_СуммаНДСВРеализации = _СуммаНДСВРеализации + ДокументРеализации.Товары[_НС].СуммаНДС;
					КонецЦикла;	
					ДокументРеализации.Товары[_НС].Сумма = ДокументРеализации.Товары[_НС].Сумма + (ВыборкаНоменклатура.СуммаВЗаказе-_СуммаВРеализации);
					ДокументРеализации.Товары[_НС].СуммаНДС = ДокументРеализации.Товары[_НС].СуммаНДС + (ВыборкаНоменклатура.СуммаНДСВЗаказе - _СуммаНДСВРеализации);
				КонецЕсли;	
				_РазницаНДС = ВыборкаНоменклатура.СуммаНДС - ВыборкаНоменклатура.СуммаНДСВЗаказе;
			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

Функция ПолучитьОъектоОРТ(Основание) Экспорт 	
	ДокументОъектОРТ=Основание.ПолучитьОбъект();
	Возврат ДокументОъектОРТ;
КонецФункции

// ++ит, BEN (03.07.2019)
Функция  СоздатьСписаниеНаОснованииНаборки(Основание) Экспорт 
	 СписаниеТоваров=Документы.СписаниеТоваров.СоздатьДокумент();
	 Если   УНаборкиЕстьСписание(Основание) Тогда 
		 ВызватьИсключение "У наборки уже есть актуальное списание";
	 КонецЕсли;
	 Запрос = новый Запрос;
	 Запрос.Текст=ПолучитьТекстЗапросаСписаниеЗаполненияПоНаборке();
	 Запрос.УстановитьПараметр("Ссылка",Основание);
	 СписаниеТоваров.итОснование=Основание;
	 СписаниеТоваров.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	 СписаниеТоваров.Организация=Основание.Организация;
	 СписаниеТоваров.Склад=Основание.Склад;
	 СписаниеТоваров.ОтражатьВУправленческомУчете=Истина;
	 СписаниеТоваров.ОтражатьВБухгалтерскомУчете=Истина;
     СписаниеТоваров.ОтражатьВНалоговомУчете=Истина;
	 РезультатЗапроса=Запрос.Выполнить();
	 Выборка=РезультатЗапроса.Выбрать();
	 СписаниеТоваров.Товары.Очистить();
	 Пока Выборка.Следующий() Цикл
		 НоваяСтрока=СписаниеТоваров.Товары.Добавить();
		 ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка,,"Цена,Сумма");
		 НоваяСтрока.ДокументРезерва=Основание.итОснование;
	 КонецЦикла;
	 СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары",СписаниеТоваров.Товары,СписаниеТоваров,Истина,Истина);
	 Обработки.ит_WMS_КастомизацияСозданияНаОсновании.ВызовКастомизацииСозданияНаОсновании(Основание,СписаниеТоваров);

	 Возврат СписаниеТоваров;
 КонецФункции
 
 Функция  УНаборкиЕстьСписание(Основание)	
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	СписаниеТоваров.Ссылка
	 |ИЗ
	 |	Документ.СписаниеТоваров КАК СписаниеТоваров
	 |ГДЕ
	 |	СписаниеТоваров.итОснование = &итОснование
	 |	И СписаниеТоваров.Проведен";
	 
	 Запрос.УстановитьПараметр("итОснование", Основание);
	 
	 РезультатЗапроса = Запрос.Выполнить();
	 
	 ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	 
	 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 Возврат Истина;	
	 КонецЦикла;
	 Возврат Ложь;	 
	 КонецФункции
	 
Функция ПолучитьТекстЗапросаСписаниеЗаполненияПоНаборке()
Текст="ВЫБРАТЬ
|	итWMSНаборкаТовары.Номенклатура,
|	итWMSНаборкаТовары.Номенклатура.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
|	итWMSНаборкаТовары.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент КАК МестКоэффициент,
|	итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
|	итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
|	итWMSНаборкаТовары.СерияНоменклатуры,
|	итWMSНаборкаТовары.Характеристика КАК ХарактеристикаНоменклатуры,
|	ВЫБОР
|		КОГДА итWMSНаборкаТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
|		ИНАЧЕ итWMSНаборкаТовары.Качество
|	КОНЕЦ КАК Качество,
|	ЕСТЬNULL(итWMSНаборкаТовары.КоличествоФакт, 0) / ВЫБОР
|		КОГДА ЕСТЬNULL(итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
|			ТОГДА 1
|		ИНАЧЕ итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
|	КОНЕЦ КАК Количество,
|	ЕСТЬNULL(итWMSНаборкаТовары.КоличествоФакт, 0) / ВЫБОР
|		КОГДА ЕСТЬNULL(итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
|			ТОГДА 1
|		ИНАЧЕ итWMSНаборкаТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
|	КОНЕЦ / ВЫБОР
|		КОГДА ЕСТЬNULL(итWMSНаборкаТовары.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
|			ТОГДА 1
|		ИНАЧЕ итWMSНаборкаТовары.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент
|	КОНЕЦ КАК КоличествоМест
|ПОМЕСТИТЬ ВтДанныеНаборки
|ИЗ
|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
|ГДЕ
|	итWMSНаборкаТовары.Ссылка = &Ссылка
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВтДанныеНаборки.Номенклатура,
|	ВтДанныеНаборки.ЕдиницаИзмеренияМест,
|	МАКСИМУМ(ВтДанныеНаборки.МестКоэффициент) КАК МестКоэффициент,
|	ВтДанныеНаборки.ЕдиницаИзмерения,
|	МАКСИМУМ(ВтДанныеНаборки.Коэффициент) КАК Коэффициент,
|	ВтДанныеНаборки.СерияНоменклатуры,
|	ВтДанныеНаборки.ХарактеристикаНоменклатуры,
|	ВтДанныеНаборки.Качество,
|	СУММА(ВтДанныеНаборки.Количество) КАК Количество,
|	СУММА(ВтДанныеНаборки.КоличествоМест) КАК КоличествоМест
|ПОМЕСТИТЬ ГруппированныеДанные
|ИЗ
|	ВтДанныеНаборки КАК ВтДанныеНаборки
|
|СГРУППИРОВАТЬ ПО
|	ВтДанныеНаборки.Номенклатура,
|	ВтДанныеНаборки.ЕдиницаИзмеренияМест,
|	ВтДанныеНаборки.ЕдиницаИзмерения,
|	ВтДанныеНаборки.СерияНоменклатуры,
|	ВтДанныеНаборки.ХарактеристикаНоменклатуры,
|	ВтДанныеНаборки.Качество
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ГруппированныеДанные.СерияНоменклатуры,
|	МАКСИМУМ(ПоступлениеТоваровУслугТовары.Цена) КАК Цена
|ПОМЕСТИТЬ ДанныеЦенСерии
|ИЗ
|	ГруппированныеДанные КАК ГруппированныеДанные
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
|		ПО ГруппированныеДанные.СерияНоменклатуры = ПоступлениеТоваровУслугТовары.СерияНоменклатуры
|
|СГРУППИРОВАТЬ ПО
|	ГруппированныеДанные.СерияНоменклатуры
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ГруппированныеДанные.Номенклатура,
|	ГруппированныеДанные.ЕдиницаИзмеренияМест,
|	ГруппированныеДанные.МестКоэффициент,
|	ГруппированныеДанные.ЕдиницаИзмерения,
|	ГруппированныеДанные.Коэффициент,
|	ГруппированныеДанные.СерияНоменклатуры,
|	ГруппированныеДанные.ХарактеристикаНоменклатуры,
|	ГруппированныеДанные.Качество,
|	ГруппированныеДанные.Количество,
|	ГруппированныеДанные.КоличествоМест,
|	ГруппированныеДанные.Количество * ДанныеЦенСерии.Цена КАК Сумма,
|	ДанныеЦенСерии.Цена
|ИЗ
|	ГруппированныеДанные КАК ГруппированныеДанные
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеЦенСерии КАК ДанныеЦенСерии
|		ПО ГруппированныеДанные.СерияНоменклатуры = ДанныеЦенСерии.СерияНоменклатуры";
Возврат Текст;
	КонецФункции
	 
// --ит (03.07.2019)


Функция ПолучитьПеремещениеТоваров(Основание) Экспорт
	ДокументПеремещения=Основание.ПолучитьОбъект();
	Возврат ДокументПеремещения;
КонецФункции

Функция  ПечатьШтрихКодовЯчеек(Параметры)Экспорт
	//СтандартнаяОбработка = ложь;
	//СтарыеНастройки=КомпоновщикНастроек.ПолучитьНастройки();
	
	// получаем текущие установки схемы компаноки данных
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоГруппа");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Ложь;	
	
	// задем новый тип данных для вовода результат отчета
	Результат = Новый ТаблицаЗначений;
	// создаем новый компановщик
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	// сбрасываем все группировки к выборке детальных записей
	для Каждого стр из Настройки.Структура[0].ПоляГруппировки.Элементы цикл
		Настройки.Структура[0].ПоляГруппировки.Элементы.Удалить(стр);
	КонецЦикла;
	// на всякий случай, если изменен стандартный набор полей для вывода, очищаем их и задаем свои 
	ДобавлениеПолейВыгрузки(Настройки);
	// очищаем все нижние уровни группировок если они есть
	Настройки.Структура[0].Структура.Очистить();
	// генирируется структура макета
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ПроцессорВывода.УстановитьОбъект(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	// передаем полученные данне для дальнешей обработки
	//СоздатьДокументыКПеречислению(Результат);
	
	Если Параметры.ПечатьШтрихКодаЯчеекБезЯруса и Параметры.ВертикальноеПоложение тогда
		ТабличныйДокумент=СформироватТабВертикальныйДокШтрихКодовБезЯруса(Результат);
	//ИначеЕсли не Параметры.ПечатьШтрихКодаЯчеекБезЯруса и не Параметры.ВертикальноеПоложение тогда
	//	ТабличныйДокумент=СформироватТабВертикальныйДокШтрихКодов(Результат);
	ИначеЕсли Параметры.ПечатьШтрихКодаЯчеекБезЯруса тогда
		ТабличныйДокумент=СформироватТабДокШтрихКодовБезЯруса(Результат);
	ИначеЕсли  не Параметры.ПечатьШтрихКодаЯчеекБезЯруса тогда
		ТабличныйДокумент=СформироватьТабДокПолныхШтрихКодов(Результат);
	КонецЕсли;
	Возврат ТабличныйДокумент;
КонецФункции
Функция СформироватТабВертикальныйДокШтрихКодовБезЯруса(Результат)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЯчеек.Ссылка
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТаблицаЯчеек КАК ТаблицаЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итСкладскиеЯчейки.Линия,
		|	итСкладскиеЯчейки.Стеллаж,
		|	итСкладскиеПомещения.Префикс
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.итСкладскиеЯчейки КАК итСкладскиеЯчейки
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.итСкладскиеПомещения КАК итСкладскиеПомещения
		|			ПО итСкладскиеЯчейки.СкладскоеПомещение = итСкладскиеПомещения.Ссылка
		|		ПО ВТ.Ссылка = итСкладскиеЯчейки.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	итСкладскиеЯчейки.Линия,
		|	итСкладскиеЯчейки.Стеллаж,
		|	итСкладскиеПомещения.Префикс";
		
	Запрос.УстановитьПараметр("ТаблицаЯчеек",Результат);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//МассивШтрихКода=новый Массив;
	ТабличныйДокумент=новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	//ТабличныйДокумент.АвтоМасштаб=Истина;
	Макет=ПолучитьМакет("Макет");
	КомпонентШК=Неопределено;
	ОбработкаШК=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	ОбработкаШК.ПодключитьКомпоненту(КомпонентШК);
	//ПодключитьКомпоненту(КомпонентШК);
	Если КомпонентШК=Неопределено тогда
		Сообщить("Нет компоненты штрихкода");
		Возврат ТабличныйДокумент;
	КонецЕсли;	
    СчетЧик=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	 ШтрихКод=ВыборкаДетальныеЗаписи.Префикс+"-"+ВыборкаДетальныеЗаписи.Линия+"-"+ВыборкаДетальныеЗаписи.Стеллаж;
	 ШтрихКодТекст=ВыборкаДетальныеЗаписи.Префикс+"
	 |"+ВыборкаДетальныеЗаписи.Линия+"
	 |"+ВыборкаДетальныеЗаписи.Стеллаж;

	 Область=Макет.ПолучитьОбласть("ВертекальнаяЯчейка|СтолбецСтрока");
	 //Область.ВысотаСтраницы=11;
	 //Область.ВысотаТаблицы=11;
	 Область.Область("R1C1:R45C9").ВысотаСтроки=11.85;
	 Область.Область("R1C1:R45C9").ШиринаКолонки=4.9;
	 Область.Область("R46C1:R46C9").ВысотаСтроки=250;
	 //Область.Область("R46C1:R46C9").ШиринаКолонки=5.5;

	 //Область.Области.ШтрихКод.ВысотаСтроки=11;
	 Область.Параметры.ТекстДанных=ШтрихКодТекст;
	 КомпонентШК.ТипКода=16;
	 КомпонентШК.ЗначениеКода=ШтрихКод;
	 КомпонентШК.Высота=600;
	 КомпонентШК.Ширина=600;
	 Картинка=КомпонентШК.ПолучитьШтрихкод();
	 Область.Параметры.ШтрихкодПараметр=новый Картинка(Картинка);
	 СчетЧик=СчетЧик+1;
	 Если СчетЧик=1 тогда
	 ТабличныйДокумент.Вывести(Область);
 иначе
	 ТабличныйДокумент.Присоединить(Область);
	 СчетЧик=0;
	 КонецЕсли;
	 //ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//МассивШтрихКода.Добавить(ШтрихКод);
	КонецЦикла;
	
	//ТабличныйДокумент.АвтоМасштаб=Истина;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
Возврат ТабличныйДокумент;	

КонецФункции
Функция СформироватТабВертикальныйДокШтрихКодов(Результат)
	КонецФункции
Функция СформироватТабДокШтрихКодовБезЯруса(Результат)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЯчеек.Ссылка
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТаблицаЯчеек КАК ТаблицаЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итСкладскиеЯчейки.Линия,
		|	итСкладскиеЯчейки.Стеллаж,
		|	итСкладскиеПомещения.Префикс
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.итСкладскиеЯчейки КАК итСкладскиеЯчейки
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.итСкладскиеПомещения КАК итСкладскиеПомещения
		|			ПО итСкладскиеЯчейки.СкладскоеПомещение = итСкладскиеПомещения.Ссылка
		|		ПО ВТ.Ссылка = итСкладскиеЯчейки.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	итСкладскиеЯчейки.Линия,
		|	итСкладскиеЯчейки.Стеллаж,
		|	итСкладскиеПомещения.Префикс";
		
	Запрос.УстановитьПараметр("ТаблицаЯчеек",Результат);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//МассивШтрихКода=новый Массив;
	ТабличныйДокумент=новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	//ТабличныйДокумент.АвтоМасштаб=Истина;
	Макет=ПолучитьМакет("Макет");
	КомпонентШК=Неопределено;
	ОбработкаШК=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	ОбработкаШК.ПодключитьКомпоненту(КомпонентШК);
	//ПодключитьКомпоненту(КомпонентШК);
	Если КомпонентШК=Неопределено тогда
		Сообщить("Нет компоненты штрихкода");
		Возврат ТабличныйДокумент;
	КонецЕсли;	

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ШтрихКод=ВыборкаДетальныеЗаписи.Префикс+"-"+ВыборкаДетальныеЗаписи.Линия+"-"+ВыборкаДетальныеЗаписи.Стеллаж;
	 Область=Макет.ПолучитьОбласть("Строка");
	 //Область.ВысотаСтраницы=11;
	 //Область.ВысотаТаблицы=11;
	 Область.Область("R1C1:R11C14").ВысотаСтроки=28;
	 //Область.Области.ШтрихКод.ВысотаСтроки=11;
	 Область.Параметры.ТекстДанных=ШтрихКод;
	 КомпонентШК.ТипКода=16;
	 КомпонентШК.ЗначениеКода=ШтрихКод;
	 КомпонентШК.Высота=480;
	 КомпонентШК.Ширина=480;
	 Картинка=КомпонентШК.ПолучитьШтрихкод();
	 Область.Параметры.ШтрихкодПараметр=новый Картинка(Картинка);
	 ТабличныйДокумент.Вывести(Область);
	 ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//МассивШтрихКода.Добавить(ШтрихКод);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб=Истина;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
Возврат ТабличныйДокумент;	
КонецФункции
Функция СформироватьТабДокПолныхШтрихКодов(Результат)
	ТабличныйДокумент=новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	//ТабличныйДокумент.АвтоМасштаб=Истина;
	Макет=ПолучитьМакет("Макет");
	КомпонентШК=Неопределено;
	ОбработкаШК=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	ОбработкаШК.ПодключитьКомпоненту(КомпонентШК);
	//ПодключитьКомпоненту(КомпонентШК);
	Если КомпонентШК=Неопределено тогда
		Сообщить("Нет компоненты штрихкода");
		Возврат ТабличныйДокумент;
	КонецЕсли;	
	
	для Каждого стр из Результат цикл
		ШтрихКод=стр.Ссылка.СкладскоеПомещение.Префикс+"-"+стр.Ссылка.Линия+"-"+стр.Ссылка.Стеллаж+"-"+стр.Ссылка.Ярус;
		Область=Макет.ПолучитьОбласть("СтрокаВариант2");
		//Область.ВысотаСтраницы=11;
		//Область.ВысотаТаблицы=11;
		Область.Область("R1C1:R11C14").ВысотаСтроки=28;
		//Область.Области.ШтрихКод.ВысотаСтроки=11;
		Область.Параметры.ТекстДанных=ШтрихКод;
		КомпонентШК.ТипКода=16;
		КомпонентШК.ЗначениеКода=ШтрихКод;
		КомпонентШК.Высота=480;
		КомпонентШК.Ширина=480;
		Картинка=КомпонентШК.ПолучитьШтрихкод();
		Область.Параметры.ШтрихкодПараметр=новый Картинка(Картинка);
		ТабличныйДокумент.Вывести(Область);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//МассивШтрихКода.Добавить(ШтрихКод);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб=Истина;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат ТабличныйДокумент;	

КонецФункции
Процедура ДобавлениеПолейВыгрузки(Настройки)
	
	
	
	// очищаем поля выбора
	Настройки.Выбор.Элементы.Очистить();
	
	// задаем новые поля выбора
	
	// указываем тип полей выбора и строку добавления
	СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//
	СтрокаНовгоПля.Использование=Истина;
	СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("Ссылка");
	СтрокаНовгоПля.Заголовок="Ссылка";
	//указываем тип полей выбора и строку добавления
	//СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//СтрокаНовгоПля.Использование=Истина;
	//СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("Организация");
	//СтрокаНовгоПля.Заголовок="Организация";
	////указываем тип полей выбора и строку добавления
	//СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//СтрокаНовгоПля.Использование=Истина;
	//СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("ФизЛицо");
	//СтрокаНовгоПля.Заголовок="ФизЛицо";
	////указываем тип полей выбора и строку добавления
	//СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//СтрокаНовгоПля.Использование=Истина;
	//СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("СуммаКУплате");
	//СтрокаНовгоПля.Заголовок="СуммаКУплате";
	////указываем тип полей выбора и строку добавления
	//СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//СтрокаНовгоПля.Использование=Истина;
	//СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("МесяцНалоговогоПериода");
	//СтрокаНовгоПля.Заголовок="МесяцНалоговогоПериода";
	////указываем тип полей выбора и строку добавления
	//СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//СтрокаНовгоПля.Использование=Истина;
	//СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("ОКАТО_КПП");
	//СтрокаНовгоПля.Заголовок="ОКАТО_КПП";
	////указываем тип полей выбора и строку добавления
	//СтрокаНовгоПля=Настройки.Выбор.Элементы.Добавить(тип("ВыбранноеПолеКомпоновкиДанных"));
	//СтрокаНовгоПля.Использование=Истина;
	//СтрокаНовгоПля.Поле=новый ПолеКомпоновкиДанных("ОКТМО_КПП");
	//СтрокаНовгоПля.Заголовок="ОКТМО_КПП";
	////КонецЕсли;
	
	//КонецЕсли;
КонецПроцедуры
Функция ПечатьШтрихКодаЯрусов(Количество)Экспорт 
	ТабличныйДокумент=новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	//ТабличныйДокумент.АвтоМасштаб=Истина;
	Макет=ПолучитьМакет("Макет");
	КомпонентШК=Неопределено;
	ОбработкаШК=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	ОбработкаШК.ПодключитьКомпоненту(КомпонентШК);
	//ПодключитьКомпоненту(КомпонентШК);
	Если КомпонентШК=Неопределено тогда
		Сообщить("Нет компоненты штрихкода");
		Возврат ТабличныйДокумент;
	КонецЕсли;
	Счетчик=0;
	для n=1  по Количество цикл
		
		Область=Макет.ПолучитьОбласть("СтрокаСтолбец|СтолбецСтрока");
        ШтрихКод=Строка(n);
		//Область=Макет.ПолучитьОбласть("СтрокаВариант2");
		//Область.ВысотаСтраницы=11;
		//Область.ВысотаТаблицы=11;
		Область.Область("R23C1:R23C9").ШиринаКолонки=5.5;
		Область.Область("R22C1:R34C9").ВысотаСтроки=15;
		//Область.Области.ШтрихКод.ВысотаСтроки=11;
		Область.Параметры.ТекстДанных=ШтрихКод;
		КомпонентШК.ТипКода=16;
		КомпонентШК.ЗначениеКода=ШтрихКод;
		КомпонентШК.Высота=480;
		КомпонентШК.Ширина=480;
		Картинка=КомпонентШК.ПолучитьШтрихкод();
		Область.Параметры.ШтрихкодПараметр=новый Картинка(Картинка);
		Если Счетчик<>0 и Счетчик<3 тогда
		ТабличныйДокумент.Присоединить(Область);
		Счетчик=Счетчик+1;
		//ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		иначе
		ТабличныйДокумент.Вывести(Область);
		Счетчик=0;
		Счетчик=Счетчик+1;
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		//ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//МассивШтрихКода.Добавить(ШтрихКод);

	КонецЦикла;
	Возврат ТабличныйДокумент;
	КонецФункции
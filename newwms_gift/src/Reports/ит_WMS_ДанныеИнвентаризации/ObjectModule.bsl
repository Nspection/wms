
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	для Каждого Элемент из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы  цикл
		Если Элемент.Параметр=новый ПараметрКомпоновкиДанных("ДокументНачалаИнвенторизации") тогда
			
			
			 ДатаНачалаИнвенторизации=ПолучитьМинимальнуюДатуСканированияЯчейкиДокумента(Элемент.Значение.Ссылка);
			 Если ДатаНачалаИнвенторизации=Неопределено Тогда 
				 Сообщить("Указаны не верные параметры");
				 Возврат
			 КонецЕсли;
			 КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ПериодДо",новый Граница(новый МоментВремени(ДатаНачалаИнвенторизации,Элемент.Значение.Ссылка),ВидГраницы.Исключая));	
			  КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ПериодДоДата",ДатаНачалаИнвенторизации);	

		КонецЕсли;
		Если Элемент.Параметр=новый ПараметрКомпоновкиДанных("ДокументОкончанияИнвенторизации") тогда
			 ДатаОкончанияИнвенторизации=ПолучитьМаксимальнуюДатуСканированияЯчейкиДокумента(Элемент.Значение.Ссылка);
			 Если ДатаОкончанияИнвенторизации=Неопределено Тогда 
				 Сообщить("Указаны не верные параметры");
				 Возврат
			 КонецЕсли;

		 //КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ПериодПосле",новый Граница(новый МоментВремени(ДатаОкончанияИнвенторизации,Элемент.Значение.Ссылка),ВидГраницы.Включая));
		  КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ПериодПослеДата",ДатаОкончанияИнвенторизации);
		КонецЕсли;

		КонецЦикла;
	КонецПроцедуры

	
Функция ПолучитьМинимальнуюДатуСканированияЯчейкиДокумента(Документ)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(итWMSДанныеИнвентаризацииТовары.ДатаИнвентаризации) КАК ДатаИнвентаризации,
		|	итWMSДанныеИнвентаризацииТовары.Ссылка
		|ИЗ
		|	Документ.итWMSДанныеИнвентаризации.Товары КАК итWMSДанныеИнвентаризацииТовары
		|ГДЕ
		|	итWMSДанныеИнвентаризацииТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	итWMSДанныеИнвентаризацииТовары.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ВыборкаДетальныеЗаписи.ДатаИнвентаризации=null тогда
			Возврат Неопределено;
		иначе
			Возврат ВыборкаДетальныеЗаписи.ДатаИнвентаризации;
		КонецЕсли;	
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		
КонецФункции
функция ПолучитьМаксимальнуюДатуСканированияЯчейкиДокумента(Документ)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(итWMSДанныеИнвентаризацииТовары.ДатаИнвентаризации) КАК ДатаИнвентаризации,
		|	итWMSДанныеИнвентаризацииТовары.Ссылка
		|ИЗ
		|	Документ.итWMSДанныеИнвентаризации.Товары КАК итWMSДанныеИнвентаризацииТовары
		|ГДЕ
		|	итWMSДанныеИнвентаризацииТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	итWMSДанныеИнвентаризацииТовары.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ВыборкаДетальныеЗаписи.ДатаИнвентаризации=null тогда
			Возврат Неопределено;
		иначе
			Возврат ВыборкаДетальныеЗаписи.ДатаИнвентаризации;
		КонецЕсли;	
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		
КонецФункции
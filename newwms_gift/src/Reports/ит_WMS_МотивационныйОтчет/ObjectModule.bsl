
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка    = Ложь;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала");
	ЗначениеПараметра.Значение = ДатаНачала;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаОкончания");
	ЗначениеПараметра.Значение = ДатаОкончания;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьКороба");
	ЗначениеПараметра.Значение = СтоимостьКороба;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьКоробаПМУ");
	ЗначениеПараметра.Значение = СтоимостьКоробаПМУ;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПаллетыНаборки");
	ЗначениеПараметра.Значение = СтоимостьПаллетыНаборки;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПеремещения");
	ЗначениеПараметра.Значение = СтоимостьПеремещения;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПМУПеремещения");
	ЗначениеПараметра.Значение = СтоимостьПеремещенияПМУ;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПодъема");
	ЗначениеПараметра.Значение = СтоимостьПодъема;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьСпуска");
	ЗначениеПараметра.Значение = СтоимостьСпуска;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("АгрегацияПаллеты");
	ЗначениеПараметра.Значение = АгрегацияПаллеты;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ФизическаяПроверка");
	ЗначениеПараметра.Значение = ФизическаяПроверка;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("АгрегацияКоробов");
	ЗначениеПараметра.Значение = АгрегацияКоробов;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Опалечивание");
	ЗначениеПараметра.Значение = Опалечивание;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьЗаНаборку");
	ЗначениеПараметра.Значение = СтоимостьЗаНаборку;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьОтгрузки");
	ЗначениеПараметра.Значение = СтоимостьОтгрузки;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПаллетыОтгрузки");
	ЗначениеПараметра.Значение = СтоимостьПаллетыОтгрузки;
	ЗначениеПараметра.Использование = Истина;

	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьБутылкиНаборка");
	ЗначениеПараметра.Значение = СтоимостьБутылкиНаборка;
	ЗначениеПараметра.Использование = Истина;

	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьБутылкиПМУНаборка");
	ЗначениеПараметра.Значение = СтоимостьБутылкиПМУНаборка;
	ЗначениеПараметра.Использование = Истина;

	
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьБутылкиПроверка");
	ЗначениеПараметра.Значение = СтоимостьБутылкиПроверка;
	ЗначениеПараметра.Использование = Истина;
	
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьНаборки");
	ЗначениеПараметра.Значение = СтоимостьНаборки;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьНаборкиРозница");
	ЗначениеПараметра.Значение = СтоимостьНаборкиРозница;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СуммаПаллетыПриемки");
	ЗначениеПараметра.Значение = СуммаПаллетыПриемки;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СуммаАкта");
	ЗначениеПараметра.Значение = СуммаАкта;
	ЗначениеПараметра.Использование = Истина;

    ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьЗаНаборкуРозница");
	ЗначениеПараметра.Значение = СтоимостьЗаНаборкуРозница;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьЗаПосещениеЯчейкиНаборка");
	ЗначениеПараметра.Значение = СтоимостьЗаПосещениеЯчейкиНаборка;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПроверкиРозница");
	ЗначениеПараметра.Значение = СтоимостьПроверкиРозница;
	ЗначениеПараметра.Использование = Истина;

	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПроверки");
	ЗначениеПараметра.Значение = СтоимостьПроверки;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СуммаПаллетыПриемкиПМУ");
	ЗначениеПараметра.Значение = СуммаПаллетыПриемкиПМУ;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПриемки");
	ЗначениеПараметра.Значение = СтоимостьПриемки;
	ЗначениеПараметра.Использование = Истина;


 
	 
    НаборыДанных    = Новый Структура("ТаблицаНаценокПоКА", ТаблицаНаценокПоКА.Выгрузить());
     
    Схема   = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
     
    КМ      = Новый КомпоновщикМакетаКомпоновкиДанных;
    Настройки=КомпоновщикНастроек.ПолучитьНастройки();  
    Макет   = КМ.Выполнить(Схема,Настройки,ДанныеРасшифровки);
     
   	
    ПК  = Новый ПроцессорКомпоновкиДанных;
    ПК.Инициализировать(Макет, НаборыДанных,ДанныеРасшифровки);
     
    ПВ  = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПВ.УстановитьДокумент(ДокументРезультат);
    ПВ.Вывести(ПК,Истина);

	


КонецПроцедуры


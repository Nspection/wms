
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка    = Ложь;
	GTIN=новый ПараметрКомпоновкиДанных("GTIN");
	ЗначениеGTIN=Неопределено;
	СправкаБ=новый ПараметрКомпоновкиДанных("СправкаБ");
	ЗначениеСправкаБ=Неопределено;
	SSCC=новый ПараметрКомпоновкиДанных("SSCC");
	ЗначениеSSCC=Неопределено;
	Для Каждого  элемем из  КомпоновщикНастроек.ПользовательскиеНастройки.Элементы  Цикл 
		Если ТипЗнч(элемем)=Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда 
		Если элемем.Параметр=GTIN Тогда 
			Если элемем.Использование Тогда 
			ЗначениеGTIN=элемем.Значение;
			КонецЕсли;
		КонецЕсли;
		Если элемем.Параметр=СправкаБ Тогда 
			Если элемем.Использование Тогда 
			ЗначениеСправкаБ=элемем.Значение;
			КонецЕсли;
		КонецЕсли;
		Если элемем.Параметр=SSCC Тогда 
			Если элемем.Использование Тогда 
			ЗначениеSSCC=элемем.Значение;
			КонецЕсли;
		КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТаблицаМарок=Неопределено;
	Если ЗначениеGTIN<>Неопределено Тогда
		ТаблицаМарок=ПолучениеТаблицыПоGTIN(ЗначениеСправкаБ,ЗначениеSSCC,ЗначениеGTIN);
	ИначеЕсли ЗначениеSSCC<>Неопределено Тогда 
		ТаблицаМарок=ПолучениеТаблицыПоSSCC(ЗначениеСправкаБ,ЗначениеSSCC);
	ИначеЕсли ЗначениеСправкаБ <>Неопределено Тогда 
		ТаблицаМарок=ПолучениеТаблицыПоСправкеБ(ЗначениеСправкаБ);
	КонецЕсли;
	Если ТаблицаМарок=Неопределено Тогда 
		ВызватьИсключение "Проверьте заполненость хотябы 1 го параметра";
	КонецЕсли;	
    НаборыДанных    = Новый Структура("ТаблицаМарок", ТаблицаМарок);
     
    Схема   = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
     
    КМ      = Новый КомпоновщикМакетаКомпоновкиДанных;
     
    Макет   = КМ.Выполнить(Схема, КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
     
   	
    ПК  = Новый ПроцессорКомпоновкиДанных;
    ПК.Инициализировать(Макет, НаборыДанных,ДанныеРасшифровки);
     
    ПВ  = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПВ.УстановитьДокумент(ДокументРезультат);
    ПВ.Вывести(ПК,Истина);

КонецПроцедуры

Функция ПолучениеТаблицыПоSSCC(ЗначениеСправкаБ,SSCC)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	алкХранилищеУпаковокСрезПоследних.Упаковка КАК Упаковка,
		|	алкХранилищеУпаковокСрезПоследних.ИерархияУпаковки КАК ИерархияУпаковки
		|ПОМЕСТИТЬ ВтУпаковки
		|ИЗ
		|	РегистрСведений.алкХранилищеУпаковок.СрезПоследних КАК алкХранилищеУпаковокСрезПоследних
		|ГДЕ
		|	алкХранилищеУпаковокСрезПоследних.ИерархияУпаковки = &SSCC
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтУпаковки.Упаковка КАК GTIN,
		|	ВтУпаковки.ИерархияУпаковки КАК SSCC,
		|	алкХранилищеАкцизныхМарокСрезПоследних.Марка КАК Марка,
		|	алкХранилищеАкцизныхМарокСрезПоследних.СправкаБ КАК СправкаБ,
		|	алкХранилищеАкцизныхМарокСрезПоследних.ОтметкаВыбытия КАК ОтметкаВыбытия,
		|	алкХранилищеАкцизныхМарокСрезПоследних.Организация КАК Организация,
		|	алкХранилищеАкцизныхМарокСрезПоследних.ПунктРазгрузки КАК ПунктРазгрузки
		|ИЗ
		|	ВтУпаковки КАК ВтУпаковки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.алкХранилищеАкцизныхМарок.СрезПоследних КАК алкХранилищеАкцизныхМарокСрезПоследних
		|		ПО ВтУпаковки.Упаковка = алкХранилищеАкцизныхМарокСрезПоследних.Упаковка
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &СправкаБ = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ алкХранилищеАкцизныхМарокСрезПоследних.СправкаБ = &СправкаБ
		|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("SSCC", SSCC);
	Запрос.УстановитьПараметр("СправкаБ", ЗначениеСправкаБ);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса; 
КонецФункции

Функция ПолучениеТаблицыПоСправкеБ(ЗначениеСправкаБ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	алкХранилищеАкцизныхМарокСрезПоследних.Марка КАК Марка,
		|	алкХранилищеАкцизныхМарокСрезПоследних.Упаковка КАК Упаковка,
		|	алкХранилищеАкцизныхМарокСрезПоследних.СправкаБ КАК СправкаБ,
		|	алкХранилищеАкцизныхМарокСрезПоследних.Организация КАК Организация,
		|	алкХранилищеАкцизныхМарокСрезПоследних.ОтметкаВыбытия КАК ОтметкаВыбытия,
		|	алкХранилищеАкцизныхМарокСрезПоследних.ПунктРазгрузки КАК ПунктРазгрузки
		|ПОМЕСТИТЬ ВтМарки
		|ИЗ
		|	РегистрСведений.алкХранилищеАкцизныхМарок.СрезПоследних КАК алкХранилищеАкцизныхМарокСрезПоследних
		|ГДЕ
		|	алкХранилищеАкцизныхМарокСрезПоследних.СправкаБ = &СправкаБ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	алкХранилищеУпаковокСрезПоследних.ИерархияУпаковки КАК SSCC,
		|	ВтМарки.Марка КАК Марка,
		|	ВтМарки.Упаковка КАК GTIN,
		|	ВтМарки.СправкаБ КАК СправкаБ,
		|	ВтМарки.Организация КАК Организация,
		|	ВтМарки.ОтметкаВыбытия КАК ОтметкаВыбытия,
		|	ВтМарки.ПунктРазгрузки КАК ПунктРазгрузки
		|ИЗ
		|	ВтМарки КАК ВтМарки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.алкХранилищеУпаковок.СрезПоследних КАК алкХранилищеУпаковокСрезПоследних
		|		ПО ВтМарки.Упаковка = алкХранилищеУпаковокСрезПоследних.Упаковка";
	
	Запрос.УстановитьПараметр("СправкаБ", ЗначениеСправкаБ);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
    Возврат  РезультатЗапроса;
КонецФункции
Функция ПолучениеТаблицыПоGTIN(ЗначениеСправкаБ,SSCC,GTIN)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	алкХранилищеАкцизныхМарокСрезПоследних.Марка КАК Марка,
		|	алкХранилищеАкцизныхМарокСрезПоследних.Упаковка КАК Упаковка,
		|	алкХранилищеАкцизныхМарокСрезПоследних.СправкаБ КАК СправкаБ,
		|	алкХранилищеАкцизныхМарокСрезПоследних.Организация КАК Организация,
		|	алкХранилищеАкцизныхМарокСрезПоследних.ОтметкаВыбытия КАК ОтметкаВыбытия,
		|	алкХранилищеАкцизныхМарокСрезПоследних.ПунктРазгрузки КАК ПунктРазгрузки
		|ПОМЕСТИТЬ ВтМаркиУпаковки
		|ИЗ
		|	РегистрСведений.алкХранилищеАкцизныхМарок.СрезПоследних КАК алкХранилищеАкцизныхМарокСрезПоследних
		|ГДЕ
		|	алкХранилищеАкцизныхМарокСрезПоследних.Упаковка = &Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтМаркиУпаковки.Марка КАК Марка,
		|	ВтМаркиУпаковки.Упаковка КАК GTIN,
		|	ВтМаркиУпаковки.СправкаБ КАК СправкаБ,
		|	ВтМаркиУпаковки.Организация КАК Организация,
		|	ВтМаркиУпаковки.ОтметкаВыбытия КАК ОтметкаВыбытия,
		|	ВтМаркиУпаковки.ПунктРазгрузки КАК ПунктРазгрузки,
		|	алкХранилищеУпаковокСрезПоследних.ИерархияУпаковки КАК SSCC
		|ИЗ
		|	ВтМаркиУпаковки КАК ВтМаркиУпаковки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.алкХранилищеУпаковок.СрезПоследних КАК алкХранилищеУпаковокСрезПоследних
		|		ПО ВтМаркиУпаковки.Упаковка = алкХранилищеУпаковокСрезПоследних.Упаковка
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &SSCC = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ алкХранилищеУпаковокСрезПоследних.ИерархияУпаковки = &SSCC
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &СправкаБ = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВтМаркиУпаковки.СправкаБ = &СправкаБ
		|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("SSCC", SSCC);
	Запрос.УстановитьПараметр("Упаковка", GTIN);
	Запрос.УстановитьПараметр("СправкаБ", ЗначениеСправкаБ);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса; 
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не Параметры.Свойство("Стратегия") Тогда 
		Отказ=Истина;
		Возврат
	КонецЕсли;
	Стратегия=Параметры.Стратегия;
	ОпределениеФормированиеРеквизитовПоСтратегии();
	ПолучитьДанныеПоСтратегии();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоСтратегии()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастрокиСтратегий.Настройка КАК Настройка
		|ИЗ
		|	РегистрСведений.НастрокиСтратегий КАК НастрокиСтратегий
		|ГДЕ
		|	НастрокиСтратегий.Стратегия = &Стратегия";
	
	Запрос.УстановитьПараметр("Стратегия", Стратегия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Данные=Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Данные=ВыборкаДетальныеЗаписи.Настройка.Получить();	
	КонецЦикла;
	Если Данные=Неопределено Тогда 
		Возврат
	КонецЕсли;
	Если ТипЗнч(Данные)=Тип("Структура") тогда
		СписокРеквизитов=ПолучитьРеквизиты();
		для Каждого Рекв из СписокРеквизитов цикл
				
			Если Данные.Свойство(Рекв.Имя) тогда
				Если ТипЗнч(Данные[Рекв.Имя])=тип("ТаблицаЗначений") тогда
					ЭтаФорма[Рекв.Имя].Загрузить(Данные[Рекв.Имя]);
				иначе
					ЭтаФорма[Рекв.Имя]=Данные[Рекв.Имя];
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	

	

	КонецПроцедуры
&НаСервере
Процедура ОпределениеФормированиеРеквизитовПоСтратегии()
	СтратегияПоНаименованию1=Справочники.итWMSСтратегии.НайтиПоНаименованию("Алгоритм поиска товара по зонам(Пикинг,хранение), складским помещениям и условием паллеты");
	СтратегияПоНаименованию2=Справочники.итWMSСтратегии.НайтиПоНаименованию("Алгоритм поиска товара по зонам(Пикинг,хранение) и складским помещениям");
    СтратегияПоНаименованию3=Справочники.итWMSСтратегии.НайтиПоНаименованию("Алгоритм поиска товара по зонам(Пикинг,хранение), складским помещениям в несколько обходов");
    СтратегияПоНаименованию4=Справочники.итWMSСтратегии.НайтиПоНаименованию("Алгоритм поиска товара по зонам(Пикинг,хранение), складским помещениям и условием паллеты");
	Если Стратегия=СтратегияПоНаименованию1 или Стратегия=СтратегияПоНаименованию2 или Стратегия=СтратегияПоНаименованию3 или Стратегия=СтратегияПоНаименованию4 Тогда 
		ФормированиеРеквизитовДляПриоритетаСП();
	КонецЕсли;
	КонецПроцедуры



&НаСервере
Процедура ФормированиеРеквизитовДляПриоритетаСП()
	ДобавляемыеРеквизиты	= Новый Массив;
	ТаблицаПриоритетаСП=новый РеквизитФормы("ТаблицаПриоритетаСП",новый ОписаниеТипов("ТаблицаЗначений"),"");
	ДобавляемыеРеквизиты.Добавить(ТаблицаПриоритетаСП);
	СкладскоеПомещение=новый РеквизитФормы("СкладскоеПомещение",новый ОписаниеТипов("СправочникСсылка.итСкладскиеПомещения"),"ТаблицаПриоритетаСП","Складское помещение");
	ДобавляемыеРеквизиты.Добавить(СкладскоеПомещение);
	СкладскоеПомещение=новый РеквизитФормы("Приоритет",новый ОписаниеТипов("Число",новый КвалификаторыЧисла(15,2)),"ТаблицаПриоритетаСП","Приоритет");
	ДобавляемыеРеквизиты.Добавить(СкладскоеПомещение);
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	ТаблицаПолейВыбора = Элементы.Добавить("ТаблицаПриоритетаСП", Тип("ТаблицаФормы"),Элементы.ПараметрыФормы);
	ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаПриоритетаСП";
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	
	НовыйЭлемент = Элементы.Добавить("ТаблицаПриоритетаСПСкладскоеПомещение", Тип("ПолеФормы"), ТаблицаПолейВыбора);       
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "ТаблицаПриоритетаСП.СкладскоеПомещение";
	НовыйЭлемент = Элементы.Добавить("ТаблицаПриоритетаСППриоритет", Тип("ПолеФормы"), ТаблицаПолейВыбора);       
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "ТаблицаПриоритетаСП.Приоритет";
	КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	СписокРеквизитов=ПолучитьРеквизиты();
	СтруктураХраненияДанных=новый Структура;
	для Каждого Рекв из СписокРеквизитов цикл
		Если Рекв.Имя="Объект" тогда
			Продолжить;
		КонецЕсли;	
		Если ТипЗнч(ЭтаФорма[Рекв.Имя])=Тип("ДанныеФормыКоллекция") тогда
			СтруктураХраненияДанных.Вставить(Рекв.Имя,ЭтаФорма[Рекв.Имя].Выгрузить());
		иначе
			СтруктураХраненияДанных.Вставить(Рекв.Имя,ЭтаФорма[Рекв.Имя]);
		КонецЕсли;
	КонецЦикла;
	МенеджерЗаписей=РегистрыСведений.НастрокиСтратегий.СоздатьМенеджерЗаписи();
	МенеджерЗаписей.Стратегия=Стратегия;
	МенеджерЗаписей.Прочитать();
	МенеджерЗаписей.Стратегия=Стратегия;
	МенеджерЗаписей.Настройка=новый ХранилищеЗначения(СтруктураХраненияДанных);
	МенеджерЗаписей.Записать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
		ЗаписатьНаСервере();
КонецПроцедуры

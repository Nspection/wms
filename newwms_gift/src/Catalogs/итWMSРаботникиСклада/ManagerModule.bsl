Процедура ПечатьШкРаботниковСклада(МассивРаботников,ТабличныйДокумент)Экспорт 
	ТабличныйДокумент=новый ТабличныйДокумент;
	Макет=Справочники.итWMSРаботникиСклада.ПолучитьМакет("Макет");
	Счетчик=1;
	Для Каждого Работник из МассивРаботников Цикл 
		ШтрихКод= ПолучитьШкработникаСклада(Работник);
		Если ШтрихКод=Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		ОбластьПечати=Макет.ПолучитьОбласть("ОбластьСтрока|ОбластьСтолбец");
		ПараметрыПечати = новый Структура;
		ПараметрыПечати.Вставить("Ширина",35);
		ПараметрыПечати.Вставить("Высота",35);
		ПараметрыПечати.Вставить("ТипКода",16);
		Картинка=ПолучитьКартинкуШк(ПараметрыПечати,ШтрихКод);
		ОбластьПечати.Параметры.Шк=новый Картинка(Картинка);
		ОбластьПечати.Параметры.ТекстШК=Строка(Работник);
		Если Счетчик=1 Тогда 
			ТабличныйДокумент.Вывести(ОбластьПечати);
		ИначеЕсли Счетчик >1 и Счетчик < 4 Тогда
			ТабличныйДокумент.Присоединить(ОбластьПечати);
		КонецЕсли;
		Если Счетчик=3 Тогда 
		Счетчик=1; иначе
		Счетчик=Счетчик+1;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьШкработникаСклада(РаботникСклада)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSРаботникиСклада.ФизическоеЛицо.ШтрихКод КАК ШтрихКод
		|ИЗ
		|	Справочник.итWMSРаботникиСклада КАК итWMSРаботникиСклада
		|ГДЕ
		|	итWMSРаботникиСклада.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", РаботникСклада);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ШтрихКод;
	КонецЦикла;
	    Возврат Неопределено;
	
	
	КонецФункции
	
	
Функция ПолучитьКартинкуШк(ПараметрыПечати=Неопределено,ШтрихКод) 
	
	ПараметрыПечатиПоУмолчанию(ПараметрыПечати);
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ОбработкаОбъект=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	КомпонентШК=Неопределено;
	ОбработкаОбъект.ПодключитьКомпоненту(КомпонентШК);
	Если КомпонентШК=Неопределено тогда
		Сообщить("Нет компоненты штрихкода");
		Возврат Неопределено;
	КонецЕсли;	
	//Если не РольДоступна("ПолныеПрава") Тогда 
			Если не РольДоступна("итWMSПечатьШкQr")  и ПараметрыПечати.ТипКода=16 Тогда 
				ПараметрыПечати.ТипКода=4;
			КонецЕсли;
	//КонецЕсли;
	КомпонентШК.ТипКода=ПараметрыПечати.ТипКода;
	КомпонентШК.ЗначениеКода=ШтрихКод;
	Если ПараметрыПечати.Свойство("ОтображатьТекст") Тогда 
	КомпонентШК.ОтображатьТекст=ПараметрыПечати.ОтображатьТекст;
	иначе
	КомпонентШК.ОтображатьТекст=Ложь; 
	КонецЕсли;
	Если ПараметрыПечати.Свойство("УголПоворота") Тогда 
	КомпонентШК.УголПоворота=ПараметрыПечати.УголПоворота;
	КонецЕсли;
	КомпонентШК.Ширина=ПараметрыПечати.Ширина;
	КомпонентШК.Высота=ПараметрыПечати.Высота;
	ПроверкаКартинкиПоМинимальнымПараметрам(КомпонентШК);
	ПроверкаПараметровШириныИВысоты(ПараметрыПечати,КомпонентШК);
	Картинка=КомпонентШК.ПолучитьШтрихкод();
	Возврат Картинка;
КонецФункции
Процедура ПараметрыПечатиПоУмолчанию(ПараметрыПечати)
	Если не ПараметрыПечати.Свойство("Ориентация") тогда
		ПараметрыПечати.Вставить("Ориентация","Портрет");
	КонецЕсли;
	Если не ПараметрыПечати.Свойство("ТипКода") тогда
		ПараметрыПечати.Вставить("ТипКода",16);
	КонецЕсли;
	Если  не ПараметрыПечати.Свойство("Ширина") тогда
		ПараметрыПечати.Вставить("Ширина",0);
	КонецЕсли;	
	Если  не ПараметрыПечати.Свойство("Высота") тогда
		ПараметрыПечати.Вставить("Высота",0);
	КонецЕсли;	
	Если  не ПараметрыПечати.Свойство("РазмерШрифта") тогда
		ПараметрыПечати.Вставить("РазмерШрифта",8);
	КонецЕсли;	
   Если  не ПараметрыПечати.Свойство("КоличествоВСтроке") тогда
		ПараметрыПечати.Вставить("КоличествоВСтроке",1);
	КонецЕсли;

КонецПроцедуры

Процедура ПроверкаКартинкиПоМинимальнымПараметрам(КомпонентШК) 
	Если КомпонентШК.Ширина < КомпонентШК.МинимальнаяШиринаКода Тогда
		КомпонентШК.Ширина = КомпонентШК.МинимальнаяШиринаКода;
	КонецЕсли;
	// Если установленная нами высота меньше минимально допустимой для этого штрихкода.
	Если КомпонентШК.Высота < КомпонентШК.МинимальнаяВысотаКода Тогда
		КомпонентШК.Высота = КомпонентШК.МинимальнаяВысотаКода;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаПараметровШириныИВысоты(ПараметрыПечати,КомпонентШК)
	Если ПараметрыПечати.Ширина < КомпонентШК.МинимальнаяШиринаКода/10 Тогда
		ПараметрыПечати.Ширина = КомпонентШК.МинимальнаяШиринаКода;
	КонецЕсли;
	// Если установленная нами высота меньше минимально допустимой для этого штрихкода.
	Если ПараметрыПечати.Высота < КомпонентШК.МинимальнаяВысотаКода/10 Тогда
		ПараметрыПечати.Высота = КомпонентШК.МинимальнаяВысотаКода;
	КонецЕсли;

КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.НастройкиПоУмолчанию.Количество()<>7 Тогда
		Объект.НастройкиПоУмолчанию.Очистить(); 
		ДобавитьЭлементыНастроек();
	КонецЕсли;
	ЗаполнитьДанныеРолейИБ();
	Если не Параметры.Ключ.Пустая() Тогда  
	//ОтметитьРолиТекущегоПользователяИПароль();
	ОтметитьНастройкиПользователя();
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ОтметитьНастройкиПользователя()
ПользовательИБ=ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
ОтметитьРолиТекущегоПользователяИПароль(ПользовательИБ);
Объект.ПоказыватьВСпискеВыбора=ПользовательИБ.ПоказыватьВСпискеВыбора;
Если  ПользовательИБ.Имя="" Тогда 
Объект.Наименование="DefUser"
иначе
Объект.Наименование=ПользовательИБ.Имя;
КонецЕсли;
Объект.АутентификацияОперационнойСистемы=ПользовательИБ.АутентификацияОС;
Объект.ПользовательОС=ПользовательИБ.ПользовательОС;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоУмолчаниюПриАктивизацииСтроки(Элемент)
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Организация" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("СправочникСсылка.Организации", , , , , , );
	КонецЕсли;
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Вид складской деятельности" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("ПеречислениеСсылка.ит_WMS_ВидыСкладскойДеятельности", , , , , , );
	КонецЕсли;
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Стратегия размещения" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("СправочникСсылка.итWMSСтратегии", , , , , , );
	КонецЕсли;
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Стратегия перемещения" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("СправочникСсылка.итWMSСтратегии", , , , , , );
	КонецЕсли;
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Стратегия поиска ячейки пикинга" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("СправочникСсылка.итWMSСтратегии", , , , , , );
	КонецЕсли;
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Стратегия наборки при создании на основании" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("СправочникСсылка.итWMSСтратегии", , , , , , );
	КонецЕсли;
	Если Элементы.НастройкиПоУмолчанию.ТекущиеДанные.ЭлементНастройки="Стратегия наборки при создании на основании (Розница)" Тогда
		  Элементы.НастройкиПоУмолчаниюЗначение.ОграничениеТипа=новый ОписаниеТипов("СправочникСсылка.итWMSСтратегии", , , , , , );
	КонецЕсли;
КонецПроцедуры

	
&НаСервере		
Процедура ДобавитьЭлементыНастроек()
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Организация";
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Вид складской деятельности";
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Стратегия размещения";
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Стратегия перемещения";
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Стратегия поиска ячейки пикинга";
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Стратегия наборки при создании на основании";
НоваяСтрока=Объект.НастройкиПоУмолчанию.Добавить();	
НоваяСтрока.ЭлементНастройки="Стратегия наборки при создании на основании (Розница)";
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеРолейИБ()
	Для Каждого Роль из Метаданные.Роли Цикл 
		НоваяСтрока=Роли.Добавить();
		НоваяСтрока.Роль=Роль.Имя;
		КонецЦикла;
	
	КонецПроцедуры
	
&НаСервере	
Процедура ОтметитьРолиТекущегоПользователяИПароль(ПользовательИБ)
//ПользовательИБ=ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
Если ПользовательИБ=Неопределено Тогда 
	ВызватьИсключение "Пользователь базы данных не найден";
КонецЕсли;
Пароль="&ПустойПароль&";
Для Каждого Роль из ПользовательИБ.Роли Цикл 
СтрокиРоли=Роли.НайтиСтроки(новый Структура("Роль",Роль.Имя));	
Если СтрокиРоли.Количество()=0 Тогда 
	Продолжить;
КонецЕсли;
СтрокаРоли=СтрокиРоли[0];
СтрокаРоли.Использование=Истина;	
КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПользовательИБ=ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
	Если ПользовательИБ=Неопределено Тогда 
		ВызватьИсключение "Пользователь базы данных не найден";
	КонецЕсли;
	Если ПользовательИБ.Имя="" Тогда 
		Возврат
	КонецЕсли;	
	ПользовательИБ.Роли.Очистить();
	Для Каждого  стр из Роли Цикл 
		Если стр.Использование Тогда 
			ПользовательИБ.Роли.Добавить(Метаданные.Роли[стр.Роль]);
		КонецЕсли;
	КонецЦикла;
	Если Пароль<>"&ПустойПароль&"  Тогда 
	ПользовательИБ.Пароль=Пароль;
КонецЕсли;

	ПользовательИБ.Имя=Объект.Наименование;
	ПользовательИБ.ПолноеИмя=Объект.ПолноеИмя;
	ПользовательИБ.ПоказыватьВСпискеВыбора=Объект.ПоказыватьВСпискеВыбора;
	ПользовательИБ.АутентификацияОС=Объект.АутентификацияОперационнойСистемы;
	ПользовательИБ.ПользовательОС=Объект.ПользовательОС;
	ПользовательИБ.Записать();
КонецПроцедуры

&НаСервере
Функция ПолучитьСокращенноеИмя()
МассивИмени=итWMSСлужебныеПроцедурыИФункции.Split(Объект.ПолноеИмя," ");
Инициал1="";
Инициал2="";
Если МассивИмени.Количество()= 0 Тогда 
	Возврат "";
КонецЕсли;
Если МассивИмени.Количество()>=2 Тогда 
Инициал1=Лев(МассивИмени[1],1);
КонецЕсли;
Если МассивИмени.Количество()>=3 Тогда 
	Инициал2=Лев(МассивИмени[2],1);
КонецЕсли;
СокращенноеИмя=МассивИмени[0];
Если Инициал1<>"" Тогда 
СокращенноеИмя=СокращенноеИмя+" "+Инициал1+".";
КонецЕсли;
Если Инициал2<>"" Тогда 
СокращенноеИмя=СокращенноеИмя+" "+Инициал2+".";
КонецЕсли;
Возврат СокращенноеИмя;
КонецФункции

&НаКлиенте
Процедура ПолноеИмяПриИзменении(Элемент)
Объект.Наименование=ПолучитьСокращенноеИмя();
КонецПроцедуры

&НаСервере
Процедура ДвухФакторнаяАвторизацияПриИзмененииНаСервере()
	Если Объект.ДвухФакторнаяАвторизация и Объект.Email.Пустая() Тогда 
		Сообщить("двух факторная авторизация устаналивается, только при наличаи email");
		Объект.ДвухФакторнаяАвторизация=Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДвухФакторнаяАвторизацияПриИзменении(Элемент)
	ДвухФакторнаяАвторизацияПриИзмененииНаСервере();
КонецПроцедуры

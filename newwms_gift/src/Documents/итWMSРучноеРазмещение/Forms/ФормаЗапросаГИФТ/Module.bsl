
&НаСервере
Процедура ПолучитьДанныеНаСервере(МассивПереносаДанных,Отказ)
	СтруктураЗапросаДанных=новый Структура;
	СтруктураЗапросаДанных.Вставить("НомерДокументаВходящего",НомерДокументаВходящего);
	СтруктураЗапросаДанных.Вставить("ДатаВходящегоДокумента",ДатаВходящегоДокумента);
	СтруктураЗапросаДанных.Вставить("КодСправочника","100000023");
	СтруктураЗапросаДанных=ЗапуститьОбработчикВБазеПриемнике(СтруктураЗапросаДанных);
	Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(СтруктураЗапросаДанных,"ТаблицаДанных") Тогда 
		итWMSСлужебныеПроцедурыИФункции.WMSОповещениеОТиповыхОшибках(СтруктураЗапросаДанных);
		Отказ=Истина;
		Возврат
	КонецЕсли;
	ОбработчикДанных(СтруктураЗапросаДанных,МассивПереносаДанных,Отказ);
КонецПроцедуры
&НаСервере
Функция ЗапуститьОбработчикВБазеПриемнике(СтруктураЗапросаДанных)
	ПараметрыПрокиСервера=СформироватьПараметрыПроксиСервера();
	СтрокаПодключения=СформироватьСтрокуПодключения();	
	Данные=итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(СтруктураЗапросаДанных);
	Определение=новый WSОпределения(СтрокаПодключения ,"webserv","111");
	Прокси = новый WSПрокси(Определение,ПараметрыПрокиСервера.URLПространствоИменСервиса,ПараметрыПрокиСервера.ИмяСервиса,ПараметрыПрокиСервера.ИмяТочкиПодключения);
	Прокси.Пользователь="webserv";
	Прокси.Пароль="111";
	//Док =новый ТекстовыйДокумент;
	//Док.ДобавитьСтроку(Данные);
	//файл=ПолучитьИмяВременногоФайла("txt");
	//Док.Записать(файл);
	//Сообщить(файл);
	Ответ=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(Прокси.universal(Данные));
	Возврат Ответ;	
КонецФункции

&НаСервере
Процедура ОбработчикДанных(СтруктураЗапросаДанных,МассивПереносаДанных,Отказ)
	ТаблицаДанных=ФормированиеТаблицыДляЗапроса(СтруктураЗапросаДанных,Отказ);
	Если Отказ Тогда 
		Возврат
	КонецЕсли;	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДанных.ИдентификаторУпаковки,
	|	ТаблицаДанных.Характеристика,
	|	ТаблицаДанных.Качество,
	|	ТаблицаДанных.ДатаРозлива,
	|	ТаблицаДанных.Количество,
	|	ТаблицаДанных.Ячейка,
	|	ТаблицаДанных.СправкаБКонтрагента,
	|	ТаблицаДанных.Номенклатура
	|ПОМЕСТИТЬ ВТТаблицаДанных
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаДанных.ИдентификаторУпаковки,
	|	ВТТаблицаДанных.Характеристика,
	|	ВТТаблицаДанных.Качество,
	|	ВТТаблицаДанных.ДатаРозлива КАК ДатаРозлива,
	|	ВТТаблицаДанных.Количество,
	|	ВТТаблицаДанных.Ячейка,
	|	ВТТаблицаДанных.СправкаБКонтрагента КАК СправкаБКонтрагента,
	|	ВТТаблицаДанных.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВТТаблицаДанных КАК ВТТаблицаДанных
	|ИТОГИ ПО
	|	СправкаБКонтрагента,
	|	Номенклатура,
	|	ДатаРозлива";
	
	
	Запрос.УстановитьПараметр("ТаблицаДанных",ТаблицаДанных);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоСправкамБ=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСправкамБ.Следующий() Цикл 
		ВыборкаНоменклатура=ВыборкаПоСправкамБ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() цикл
			ВыборкаДатаРозлива=ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДатаРозлива.Следующий() цикл
				ВыборкаДетальныхЗаписей=ВыборкаДатаРозлива.Выбрать();
				Если ВыборкаДатаРозлива.СправкаБКонтрагента<>"" Тогда 
					СерияНоменклатуры=НайтиНоменклатуруПоСправкеБ(ВыборкаДатаРозлива.СправкаБКонтрагента,ВыборкаДатаРозлива.Номенклатура) ;
					Если СерияНоменклатуры=Неопределено Тогда 
						СерияНоменклатуры=Справочники.СерииНоменклатуры.СоздатьЭлемент();
					КонецЕсли;
				Иначе 
					СерияНоменклатуры=Справочники.СерииНоменклатуры.СоздатьЭлемент();
				КонецЕсли;
				Если ТипЗнч(СерияНоменклатуры)=Тип("СправочникСсылка.СерииНоменклатуры") Тогда 
					СерияНоменклатуры=СерияНоменклатуры.ПолучитьОбъект();
				КонецЕсли;
				СерияНоменклатуры.Владелец=ВыборкаДатаРозлива.Номенклатура;
				СерияНоменклатуры.СерийныйНомер=Строка(Формат(ДатаВходящегоДокумента,"ДФ=dd.MM.yyyy"))+";"+Строка(НомерДокументаВходящего);
				СерияНоменклатуры.Наименование=Строка(ВыборкаДатаРозлива.ДатаРозлива)+"#"+ВыборкаДатаРозлива.СправкаБКонтрагента;
				СерияНоменклатуры.алкДатаНачалаРозлива= ВыборкаДатаРозлива.ДатаРозлива;
				СерияНоменклатуры.алкДатаКонцаРозлива=ВыборкаДатаРозлива.ДатаРозлива;
				СерияНоменклатуры.СрокГодности=?(СерияНоменклатуры.алкДатаНачалаРозлива+(СерияНоменклатуры.Владелец.итВремяХраненияВДнях*24*60)=СерияНоменклатуры.алкДатаНачалаРозлива,'00010101',СерияНоменклатуры.алкДатаНачалаРозлива+(СерияНоменклатуры.Владелец.итВремяХраненияВДнях*24*60));
				СерияНоменклатуры.алкПроизводитель=СерияНоменклатуры.Владелец.алкПроизводитель;
				СерияНоменклатуры.ДатаПроизводства = СерияНоменклатуры.алкДатаНачалаРозлива;
				СерияНоменклатуры.Записать();
				Пока ВыборкаДетальныхЗаписей.Следующий() цикл
					СтруктураДанныхМассива=новый  Структура;
					Для Каждого Колонка из РезультатЗапроса.Колонки цикл
						СтруктураДанныхМассива.Вставить(Колонка.Имя,ВыборкаДетальныхЗаписей[Колонка.Имя]);
					КонецЦикла;
					СтруктураДанныхМассива.Вставить("СерияНоменклатуры",СерияНоменклатуры.Ссылка);
					МассивПереносаДанных.Добавить(СтруктураДанныхМассива);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НайтиНоменклатуруПоСправкеБ(СправкаБКонтрагента,Номенклатура)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.Наименование ПОДОБНО ""%"" + &Наименование + ""%""
	|	И СерииНоменклатуры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	Запрос.УстановитьПараметр("Наименование", СправкаБКонтрагента);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	Возврат Неопределено;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции

&НаСервере
Функция ФормированиеТаблицыДляЗапроса(СтруктураЗапросаДанных,Отказ)
	НоваяТаблицаДанных=новый ТаблицаЗначений;
	НоваяТаблицаДанных.Колонки.Добавить("ИдентификаторУпаковки",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(172)));
	НоваяТаблицаДанных.Колонки.Добавить("Характеристика",новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	//НоваяТаблицаДанных.Колонки.Добавить("СерияНоменклатуры",новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	НоваяТаблицаДанных.Колонки.Добавить("Качество",новый ОписаниеТипов("СправочникСсылка.Качество"));
	НоваяТаблицаДанных.Колонки.Добавить("ДатаРозлива",новый ОписаниеТипов("Дата",,,,новый КвалификаторыДаты(ЧастиДаты.Дата)));
	НоваяТаблицаДанных.Колонки.Добавить("Количество",новый ОписаниеТипов("Число",,,,новый КвалификаторыЧисла(15,2)));
	НоваяТаблицаДанных.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
	НоваяТаблицаДанных.Колонки.Добавить("СправкаБКонтрагента",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(100)));
	НоваяТаблицаДанных.Колонки.Добавить("Номенклатура",новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	Для Каждого стр из СтруктураЗапросаДанных.ТаблицаДанных цикл
		
		
		Если стр.Характеристика=ПустойИдентификатор() Тогда 
			Характеристика=Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		иначе
			Характеристика=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(стр.Характеристика);
			Если Характеристика.ПолучитьОбъект() = Неопределено Тогда 
				ВызватьИсключение "нет данных в базе приемник характеристика"+Строка(стр.Характеристика);
				Отказ=Истина;
			КонецЕсли;
		КонецЕсли;	
		
		
		//Если стр.СерияНоменклатуры=ПустойИдентификатор() Тогда 
		//	СерияНоменклатуры=Справочники.СерииНоменклатуры.ПустаяСсылка();
		//иначе
		//	СерияНоменклатуры=Справочники.СерииНоменклатуры.ПолучитьСсылку(стр.СерияНоменклатуры);
		//	Если СерияНоменклатуры.ПолучитьОбъект() = Неопределено Тогда 
		//		ВызватьИсключение "нет данных в базе приемник СерияНоменклатуры"+Строка(стр.СерияНоменклатуры);
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
		Если стр.Качество=ПустойИдентификатор() Тогда 
			Качество=Справочники.Качество.ПустаяСсылка();
		иначе
			Качество=Справочники.Качество.ПолучитьСсылку(стр.Качество);
			Если Качество.ПолучитьОбъект() = Неопределено Тогда 
				ВызватьИсключение "нет данных в базе приемник Качество"+Строка(стр.Качество);
				Отказ=Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		
		
		Если стр.Ячейка=ПустойИдентификатор() Тогда 
			Ячейка=Справочники.итСкладскиеЯчейки.ПустаяСсылка();
		иначе
			Ячейка=Справочники.итСкладскиеЯчейки.ПолучитьСсылку(стр.Ячейка);
			Если Ячейка.ПолучитьОбъект() = Неопределено Тогда 
				ВызватьИсключение "нет данных в базе приемник Ячейка"+Строка(стр.Ячейка);
				Отказ=Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если стр.итИдентификаторНоменклатурнойПозиции=ПустойИдентификатор() Тогда 
			итИдентификаторНоменклатурнойПозиции=Справочники.итИндентификаторыТоварныхПозиций.ПустаяСсылка();
		иначе
			итИдентификаторНоменклатурнойПозиции=Справочники.итИндентификаторыТоварныхПозиций.ПолучитьСсылку(стр.итИдентификаторНоменклатурнойПозиции);
			Если итИдентификаторНоменклатурнойПозиции.ПолучитьОбъект() = Неопределено Тогда 
				ВызватьИсключение "нет данных в базе приемник итИдентификаторНоменклатурнойПозиции"+Строка(стр.итИдентификаторНоменклатурнойПозиции);
				Отказ=Истина;
			КонецЕсли;
		КонецЕсли;
		
		Номенклатура=ПоискНоменклатурыПоИТП(итИдентификаторНоменклатурнойПозиции);
		
		НоваяСтрока=НоваяТаблицаДанных.Добавить();
		НоваяСтрока.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		НоваяСтрока.Характеристика=Характеристика;
		НоваяСтрока.Качество=Качество;
		НоваяСтрока.ДатаРозлива=стр.ДатаРозлива;
		НоваяСтрока.Количество=стр.Количество;   
		НоваяСтрока.Ячейка=Ячейка;
		НоваяСтрока.СправкаБКонтрагента=стр.СправкаБКонтрагента;
		НоваяСтрока.Номенклатура=Номенклатура;	
	КонецЦикла;
	
	Возврат  НоваяТаблицаДанных;
	
	
КонецФункции

&НаСервере
Функция ПоискНоменклатурыПоИТП(ИТП)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Номенклатура.Ссылка) КАК Ссылка,
	|	Номенклатура.итИдентификаторНоменклатурнойПозиции
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.итИдентификаторНоменклатурнойПозиции = &итИдентификаторНоменклатурнойПозиции
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.итИдентификаторНоменклатурнойПозиции";
	
	Запрос.УстановитьПараметр("итИдентификаторНоменклатурнойПозиции", ИТП);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если  РезультатЗапроса.Пустой() Тогда 
		ВызватьИсключение "нет данных по ИТП "+Строка(ИТП) ;
	КонецЕсли;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции

&НаКлиенте
Процедура ПолучитьДанные(Команда)
	МассивПереносаДанных=новый Массив;
	Отказ=Ложь;
	ПолучитьДанныеНаСервере(МассивПереносаДанных,Отказ);
	Если Отказ Тогда 
		Возврат
	КонецЕсли;
	ОповеститьОВыборе(МассивПереносаДанных);
КонецПроцедуры
&НаСервере
Функция ПустойИдентификатор()
	Возврат Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
КонецФункции
&НаСервере
Функция СформироватьСтрокуПодключения()  
	ПараметрыПодключения=СформироватьПараметрыПодключения();
	IPАдресСервера=ПараметрыПодключения.IPАдресСервера;
	ИмяПубликацииБазы=ПараметрыПодключения.ИмяПубликацииБазы;
	URLПространствоВебСервиса=ПараметрыПодключения.URLПространствоВебСервиса;
	СтрокаWSОпределения = "http://"+СокрЛП(IPАдресСервера)+"/"+СокрЛП(ИмяПубликацииБазы)+"/ws/"+СокрЛП(URLПространствоВебСервиса)+".1cws?wsdl";
	Возврат СтрокаWSОпределения;
КонецФункции
&НаСервере
Функция СформироватьПараметрыПодключения() 
	
	IPАдресСервера=СокрЛП("10.58.3.22");
	ИмяПубликацииБазы=СокрЛП("REAL");
	URLПространствоВебСервиса=СокрЛП("universalwebserv");
	Структура=новый Структура("IPАдресСервера,ИмяПубликацииБазы,URLПространствоВебСервиса",IPАдресСервера,ИмяПубликацииБазы,URLПространствоВебСервиса);
	Возврат Структура
	
КонецФункции
&НаСервере
Функция СформироватьПараметрыПроксиСервера()  
	
	URLПространствоВебСервиса=СокрЛП("universalwebserv");;
	Структура=новый Структура;
	Структура.Вставить("URLПространствоИменСервиса",СокрЛП(URLПространствоВебСервиса));
	Структура.Вставить("ИмяСервиса",СокрЛП(URLПространствоВебСервиса));
	Структура.Вставить("ИмяТочкиПодключения",СокрЛП(URLПространствоВебСервиса)+"Soap");
	
	Возврат Структура
КонецФункции


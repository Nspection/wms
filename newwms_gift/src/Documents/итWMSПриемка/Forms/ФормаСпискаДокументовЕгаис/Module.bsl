
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Попытка
		ЗаполнитьТаблицуСписка(Параметры.Организация,Параметры.ДатаНачала,Параметры.ДатаОкончания);
	Исключение
		Сообщить(ОписаниеОшибки());
		Отказ=Истина;
	КонецПопытки;
КонецПроцедуры

Процедура ЗаполнитьТаблицуСписка(Организация,ДатаНачала,ДатаОкончания)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	WMSОбменМарками.Ссылка КАК Ссылка
		|ИЗ
		|	ПланОбмена.WMSОбменМарками КАК WMSОбменМарками
		|ГДЕ
		|	WMSОбменМарками.Организация = &Организация
		|	И НЕ WMSОбменМарками.ПометкаУдаления
		|	И НЕ WMSОбменМарками.РежимОтладки
		|
		|СГРУППИРОВАТЬ ПО
		|	WMSОбменМарками.Ссылка";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		ВызватьИсключение "Ошибка поиска узла обмена";
		КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Узел=ВыборкаДетальныеЗаписи.Ссылка;
		Определение=новый WSОпределения(итWMSСлужебныеПроцедурыИФункции.СформироватьСтрокуПодключенияПоУзлу(Узел) ,"webserv","111");
		ПараметрыПрокиСервера=итWMSСлужебныеПроцедурыИФункции.СформироватьПараметрыПроксиСервераПоУзлу(Узел);
		Прокси = новый WSПрокси(Определение,ПараметрыПрокиСервера.URLПространствоИменСервиса,ПараметрыПрокиСервера.ИмяСервиса,ПараметрыПрокиСервера.ИмяТочкиПодключения);
		Прокси.Пользователь="webserv";
		Прокси.Пароль="111";
		СтруктураЗапросаДанных=новый Структура;
		СтруктураЗапросаДанных.Вставить("КлючЗапросаДанных","СписокДокументовДанныхМарок");
		СтруктураЗапросаДанных.Вставить("ДатаНачала",ДатаНачала);
		СтруктураЗапросаДанных.Вставить("ДатаОкончания",ДатаОкончания);
		СтруктураЗапросаДанных.Вставить("Организация",итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаДругойИБ(Организация,Узел.ГлавныйУзелОбменаWMS));
		Данные=итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(СтруктураЗапросаДанных);
		Ответ=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(Прокси.ToGetData(Данные));
		СписокДокументов.Очистить();
		Для Каждого стр из Ответ.СписокДокументовМарок Цикл 
		НоваяСтрока=СписокДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
		КонецЦикла;
        
	
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВФоне(Команда)
	ЭлементОбработки=Элементы.СписокДокументов;
	Если ЭлементОбработки.ТекущиеДанные<>Неопределено Тогда 
		СтруктураДанных=Новый Структура;
		СтруктураДанных.Вставить("Ссылка",ЭлементОбработки.ТекущиеДанные.Ссылка);
		СтруктураДанных.Вставить("ТипДокумента",ЭлементОбработки.ТекущиеДанные.ТипДокумента);
		ЗаполнитьДаннымиДокументаВФоне(СтруктураДанных);
		СтруктураОповещения=новый Структура;
		СтруктураОповещения.Вставить("ТипПолучение","Фоновое");
		СтруктураОповещения.Вставить("Ключ",СтруктураДанных.КлючЗадания);
		ОповеститьОВыборе(СтруктураОповещения);

   КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьДаннымиДокументаВФоне(СтруктураДанных)
СтруктураДанных.Вставить("Узел",Узел);
КлючЗадания=новый УникальныйИдентификатор();
СтруктураДанных.Вставить("КлючЗадания",КлючЗадания);
МассивПараметров=новый Массив;
МассивПараметров.Добавить(СтруктураДанных);
ФоновыеЗадания.Выполнить("итWMSОбработчикДанныхПриемки.ПолучениеДанныхПМУДокументаВФоне",МассивПараметров,КлючЗадания,"ПолучениеДанныхМарок"); 
	КонецПроцедуры
&НаКлиенте
Процедура ВыбратьТекущийДокументЕгаис()
	ЭлементОбработки=Элементы.СписокДокументов;
	Если ЭлементОбработки.ТекущиеДанные<>Неопределено Тогда 
		СтруктураДанных=Новый Структура;
		СтруктураДанных.Вставить("Ссылка",ЭлементОбработки.ТекущиеДанные.Ссылка);
		СтруктураДанных.Вставить("ТипДокумента",ЭлементОбработки.ТекущиеДанные.ТипДокумента);
		СсылкаДокумента=ЗаполнитьДаннымиДокумента(СтруктураДанных);
		Если СсылкаДокумента=Неопределено Тогда 
			Возврат
		КонецЕсли;
		СтруктураОповещения=новый Структура;
		СтруктураОповещения.Вставить("ТипПолучение","Ссылка");
		СтруктураОповещения.Вставить("Ссылка",СсылкаДокумента);
		ОповеститьОВыборе(СтруктураОповещения);
	КонецЕсли;
КонецПроцедуры
&НаСервере
Функция  ЗаполнитьДаннымиДокумента(знач СтруктураДанных)
		Определение=новый WSОпределения(итWMSСлужебныеПроцедурыИФункции.СформироватьСтрокуПодключенияПоУзлу(Узел) ,"webserv","111");
		ПараметрыПрокиСервера=итWMSСлужебныеПроцедурыИФункции.СформироватьПараметрыПроксиСервераПоУзлу(Узел);
		Прокси = новый WSПрокси(Определение,ПараметрыПрокиСервера.URLПространствоИменСервиса,ПараметрыПрокиСервера.ИмяСервиса,ПараметрыПрокиСервера.ИмяТочкиПодключения);
		Прокси.Пользователь="webserv";
		Прокси.Пароль="111";
		СтруктураДанных.Вставить("КлючЗапросаДанных","ПолучениеДанныхДокументаМарок");
		Данные=итWMSСлужебныеПроцедурыИФункции.СериализаторДанных(СтруктураДанных);
		Ответ=итWMSСлужебныеПроцедурыИФункции.ДесериализаторДанных(Прокси.ToGetData(Данные));
		Если Ответ.Свойство("Статус") Тогда 
			Если Ответ.Статус=404 Тогда 
				Сообщить(Ответ.ОписаниеОшибки);
				Возврат Неопределено;
			КонецЕсли;
			КонецЕсли;
        Ссылка=ЗаписатьДокументДанныхМарок(Ответ);
		Возврат Ссылка;
	КонецФункции
&НаСервере	
Функция ЗаписатьДокументДанныхМарок(СтруктураДанных)
	Организация=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(СтруктураДанных.Организация,Узел.ГлавныйУзелОбменаWMS);
	НомерИсточника=СтруктураДанных.НомерИсточника;
	Если Организация=Неопределено Тогда 
		Сообщить("Организация не найдена");
		Возврат Неопределено;
	КонецЕсли;	

	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	СсылкаНаОбъект=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбменаСБлокировкой(СтруктураДанных.Ссылка,Узел,"ДокументСсылка.ДанныеМарокЕГАИС");
	НовыйОбъект=Истина;
	Если СсылкаНаОбъект=Неопределено Тогда 
		ОбъектИзменения=Документы.ДанныеМарокЕГАИС.СоздатьДокумент();
	иначе
		ОбъектИзменения=СсылкаНаОбъект.ПолучитьОбъект();
		НовыйОбъект=Ложь;
	КонецЕсли;	
	ОбъектИзменения.Дата=СтруктураДанных.Дата;
	ОбъектИзменения.НомерИсточника=НомерИсточника;
	ОбъектИзменения.Организация=Организация;
	ОбъектИзменения.Марки.Очистить();
	Для Каждого стр из СтруктураДанных.Марки Цикл 
		АлкогольнаяПродукция=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.АлкогольнаяПродукция,Узел.ГлавныйУзелОбменаWMS);
		СправкаБ=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.СправкаБ,Узел.ГлавныйУзелОбменаWMS);
		СправкаА=итWMSСлужебныеПроцедурыИФункции.ПоискЭлементаСоответствияОбмена(стр.СправкаА,Узел.ГлавныйУзелОбменаWMS);
		Если АлкогольнаяПродукция=Неопределено Тогда 
			Сообщить("АлкогольнаяПродукция не найдена");
			ОтменитьТранзакцию();
			Возврат Неопределено;
		КонецЕсли;	
		Если СправкаБ=Неопределено Тогда 
			Сообщить("СправкаБ не найдена");
			ОтменитьТранзакцию();
			Возврат Неопределено;
		КонецЕсли;	
		Если СправкаА=Неопределено Тогда 
			Сообщить("СправкаА не найдена");
			ОтменитьТранзакцию();
			Возврат Неопределено;
		КонецЕсли;	
		Марка=итWMSСлужебныеПроцедурыИФункции.НайтиСоздатьМаркуСБлокировкой(стр.Марка);
		Если Марка=Неопределено Тогда 
			ВызватьИсключение "Ошибка создания марки";		
		КонецЕсли;
		НоваяСтрока=ОбъектИзменения.Марки.Добавить();
		НоваяСтрока.АлкогольнаяПродукция=АлкогольнаяПродукция;
		НоваяСтрока.СправкаБ=СправкаБ;
		НоваяСтрока.СправкаА=СправкаА;
		НоваяСтрока.Марка=Марка;
		НоваяСтрока.ДатаРозлива=стр.ДатаРозлива;
		НоваяСтрока.Упаковка=стр.Упаковка;
		НоваяСтрока.ИерархияУпаковки=стр.ИерархияУпаковки;
		
	КонецЦикла;
	Попытка
		ОбъектИзменения.Записать();
		Если НовыйОбъект Тогда 
		итWMSСлужебныеПроцедурыИФункции.ЗаписьСоотвОбмена(ОбъектИзменения.Ссылка,СтруктураДанных.Ссылка,СтруктураДанных.ИмяТипаПриемника,Узел);
		КонецЕсли;
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	ЗафиксироватьТранзакцию();
	Возврат ОбъектИзменения.Ссылка;
	КонецФункции

&НаКлиенте
Процедура СписокДокументовВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ВыбратьТекущийДокументЕгаис();
КонецПроцедуры

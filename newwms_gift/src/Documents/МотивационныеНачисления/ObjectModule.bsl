
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НаличиеДокументовНаТекущуДатуНачисленияИСмену() Тогда 
		Отказ=Истина;
	КонецЕсли;	
	Если  не ПроверитьЗаполнение() Тогда 
		Отказ=Истина;
	КонецЕсли;	
КонецПроцедуры


Функция НаличиеДокументовНаТекущуДатуНачисленияИСмену()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МотивационныеНачисления.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.МотивационныеНачисления КАК МотивационныеНачисления
		|ГДЕ
		|	МотивационныеНачисления.Ссылка <> &Ссылка
		|	И МотивационныеНачисления.ДатаНачисления = &ДатаНачисления
		|	И МотивационныеНачисления.Смена = &Смена
		|	И МотивационныеНачисления.Проведен";
	
	Запрос.УстановитьПараметр("ДатаНачисления", ДатаНачисления);
	Запрос.УстановитьПараметр("Смена", Смена);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("на текущую дату начисления уже имеется регистратор "+Строка(ВыборкаДетальныеЗаписи.Ссылка));
		Возврат Истина;
	КонецЦикла;
	
	Возврат Ложь;	
КонецФункции


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
МотивационныеНачисленияРаботниковСклада=Движения.МотивационныеНачисленияРаботниковСклада;
Движения.МотивационныеНачисленияРаботниковСклада.Записывать=Истина;
Для Каждого  стр из Начисления Цикл 
	НоваяСтрока=МотивационныеНачисленияРаботниковСклада.Добавить();
	НоваяСтрока.Регистратор=Ссылка;
	НоваяСтрока.ДатаНачисления=ДатаНачисления;
	НоваяСтрока.Организация=Организация;
	НоваяСтрока.РаботникСклада=стр.РаботникСклада;
	НоваяСтрока.ТипЗадачи=стр.ТипЗадачи;
	НоваяСтрока.Смена=Смена;
	НоваяСтрока.Начислено=стр.Начислено;
КонецЦикла;
Движения.Записать();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	РаботникиСклада.Очистить();
	Начисления.Очистить();
КонецПроцедуры

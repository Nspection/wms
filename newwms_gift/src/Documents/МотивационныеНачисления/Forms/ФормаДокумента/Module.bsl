
&НаСервере
Процедура ЗаполнитьНаСервере()
КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных(); 
СхемаКомпоновкиДанных = Отчеты.ит_WMS_МотивационныйОтчет.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
СтруктураВариантов=новый Структура;
КомпоновщикНастроек=новый КомпоновщикНастроекКомпоновкиДанных;
КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
Для Каждого стр из СхемаКомпоновкиДанных.ВариантыНастроек Цикл 
	  СтруктураВариантов.Вставить(стр.Имя,стр.Настройки);
  КонецЦикла;
КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураВариантов.Дополнительный);
Значение=итWMSПривилегированныйМодуль.ЗагрузитьНастройкиИзХранилищаОбщихНастроек("итWMSМотивационныйОтчет","итWMSМотивационныйОтчет","итWMSМотивационныйОтчет");
УстановкаНастроек(КомпоновщикНастроек,Значение);
МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
НаборыДанных    = Новый Структура("ТаблицаНаценокПоКА", Значение.ТаблицаНаценокПоКАВыгрузка);
ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,НаборыДанных);

ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
Таблица=ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных,Истина);
Объект.Начисления.Очистить();
Для Каждого стр из Таблица Цикл 
	НоваяСтрока=Объект.Начисления.Добавить();
	НоваяСтрока.РаботникСклада=стр.РаботникСклада;
	НоваяСтрока.ТипЗадачи=стр.ТипЗадачи;
	НоваяСтрока.Начислено=стр.Всего;
КонецЦикла;
Таблица.Свернуть("РаботникСклада","Всего");
Объект.РаботникиСклада.Очистить();
ВсегоПоДокументу=0;
Для Каждого стр из Таблица Цикл 
	НоваяСтрока=Объект.РаботникиСклада.Добавить();
	НоваяСтрока.РаботникСклада=стр.РаботникСклада;
	НоваяСтрока.Начислено=стр.Всего;
	ВсегоПоДокументу=ВсегоПоДокументу+стр.Всего;
КонецЦикла;
Элементы.ВсегоПоДокументу.Заголовок="Всего по документу: "+Строка(ВсегоПоДокументу);
КонецПроцедуры

&НаСервере
Процедура УстановкаНастроек(КомпоновщикНастроек,Значение)
ДатаНачисления=Объект.ДатаНачисления;
ЧасНачала=Час(Объект.Смена.ВремяНачало);
МинутаНачала=Минута(Объект.Смена.ВремяНачало);
СекундаНачало=Секунда(Объект.Смена.ВремяНачало);
ЧасОкончания=Час(Объект.Смена.ВремяКонец);
МинутаОкончания=Минута(Объект.Смена.ВремяКонец);
СекундаОкончания=Секунда(Объект.Смена.ВремяКонец);

ДатаНачала=ДатаНачисления+(ЧасНачала*60*60)+(МинутаНачала*60)+СекундаНачало;
ДатаОкончания= ДатаНачисления+ (ЧасОкончания*60*60)+(МинутаОкончания*60)+СекундаОкончания+?(Объект.Смена.НочнаяСмена,24*60*60,0);


	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала");
	ЗначениеПараметра.Значение = ДатаНачала;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаОкончания");
	ЗначениеПараметра.Значение = ДатаОкончания;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьКороба");
	ЗначениеПараметра.Значение = Значение.СтоимостьКороба;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьКоробаПМУ");
	ЗначениеПараметра.Значение = Значение.СтоимостьКоробаПМУ;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПаллетыНаборки");
	ЗначениеПараметра.Значение = Значение.СтоимостьПаллетыНаборки;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПеремещения");
	ЗначениеПараметра.Значение = Значение.СтоимостьПеремещения;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПМУПеремещения");
	ЗначениеПараметра.Значение = Значение.СтоимостьПеремещенияПМУ;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПодъема");
	ЗначениеПараметра.Значение = Значение.СтоимостьПодъема;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьСпуска");
	ЗначениеПараметра.Значение = Значение.СтоимостьСпуска;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("АгрегацияПаллеты");
	ЗначениеПараметра.Значение = Значение.АгрегацияПаллеты;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ФизическаяПроверка");
	ЗначениеПараметра.Значение = Значение.ФизическаяПроверка;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("АгрегацияКоробов");
	ЗначениеПараметра.Значение = Значение.АгрегацияКоробов;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Опалечивание");
	ЗначениеПараметра.Значение = Значение.Опалечивание;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьЗаНаборку");
	ЗначениеПараметра.Значение = Значение.СтоимостьЗаНаборку;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьОтгрузки");
	ЗначениеПараметра.Значение = Значение.СтоимостьОтгрузки;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПаллетыОтгрузки");
	ЗначениеПараметра.Значение = Значение.СтоимостьПаллетыОтгрузки;
	ЗначениеПараметра.Использование = Истина;

	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьБутылкиНаборка");
	ЗначениеПараметра.Значение = Значение.СтоимостьБутылкиНаборка;
	ЗначениеПараметра.Использование = Истина;

	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьБутылкиПМУНаборка");
	ЗначениеПараметра.Значение = Значение.СтоимостьБутылкиПМУНаборка;
	ЗначениеПараметра.Использование = Истина;

	
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьБутылкиПроверка");
	ЗначениеПараметра.Значение = Значение.СтоимостьБутылкиПроверка;
	ЗначениеПараметра.Использование = Истина;
	
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьНаборки");
	ЗначениеПараметра.Значение = Значение.СтоимостьНаборки;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьНаборкиРозница");
	ЗначениеПараметра.Значение = Значение.СтоимостьНаборкиРозница;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СуммаПаллетыПриемки");
	ЗначениеПараметра.Значение = Значение.СуммаПаллетыПриемки;
	ЗначениеПараметра.Использование = Истина;

	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СуммаАкта");
	ЗначениеПараметра.Значение = Значение.СуммаАкта;
	ЗначениеПараметра.Использование = Истина;

    ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьЗаНаборкуРозница");
	ЗначениеПараметра.Значение = Значение.СтоимостьЗаНаборкуРозница;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьЗаПосещениеЯчейкиНаборка");
	ЗначениеПараметра.Значение = Значение.СтоимостьЗаПосещениеЯчейкиНаборка;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПроверкиРозница");
	ЗначениеПараметра.Значение = Значение.СтоимостьПроверкиРозница;
	ЗначениеПараметра.Использование = Истина;

	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПроверки");
	ЗначениеПараметра.Значение = Значение.СтоимостьПроверки;
	ЗначениеПараметра.Использование = Истина;

    ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СуммаПаллетыПриемкиПМУ");
	ЗначениеПараметра.Значение = Значение.СуммаПаллетыПриемкиПМУ;
	ЗначениеПараметра.Использование = Истина;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтоимостьПриемки");
	ЗначениеПараметра.Значение = Значение.СтоимостьПриемки;
	ЗначениеПараметра.Использование = Истина;
	КонецПроцедуры
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РассчетВсегоПоДокументу()
	Всего=0;
	Для Каждого стр из Объект.РаботникиСклада Цикл 
		Всего=Всего+стр.Начислено;
	КонецЦикла;
	Элементы.ВсегоПоДокументу.Заголовок="Всего по документу: "+Строка(Всего);
	КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда 
	Объект.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	ОбщегоНазначения.УстановитьОрганизациюВДокументе(Объект);
КонецЕсли;
РассчетВсегоПоДокументу();
	КонецПроцедуры

&НаСервере
Процедура СменаПриИзмененииНаСервере()
		Объект.Начисления.Очистить();
		Объект.РаботникиСклада.Очистить();
		РассчетВсегоПоДокументу();
КонецПроцедуры

&НаКлиенте
Процедура СменаПриИзменении(Элемент)
		СменаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаНачисленияПриИзмененииНаСервере()
		Объект.Начисления.Очистить();
		Объект.РаботникиСклада.Очистить();
		РассчетВсегоПоДокументу();
КонецПроцедуры

&НаКлиенте
	Процедура ДатаНачисленияПриИзменении(Элемент)
		ДатаНачисленияПриИзмененииНаСервере();
	КонецПроцедуры

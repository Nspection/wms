Перем ИгнорироватьОтказПриПроверках Экспорт ;

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Проведен и РежимЗаписи=РежимЗаписиДокумента.Запись Тогда 
		Если ОбменДанными.Загрузка Тогда 
			РежимЗаписи=РежимЗаписиДокумента.Проведение;
		КонецЕсли;
	КонецЕсли;
	
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение тогда
		ПередЗаписьюПроведение(Отказ, РежимЗаписи, РежимПроведения);
	КонецЕсли;
	Если РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения тогда
		ПередЗаписьюОтменаПроведения(Отказ, РежимЗаписи, РежимПроведения);
	КонецЕсли;
	Если ОбменДанными.Загрузка Тогда 
		Отказ=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗаписьюПроведение(Отказ, РежимЗаписи, РежимПроведения)
	СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен;
	ПроверитьОснованиеНаНесколькоПодчиненныхДокументов(Отказ);
	Ответ=ПроверитьНаСоответствиеОснованиеИДокумент();
	Если Ответ<>Неопределено тогда
		Если Ответ.ВСкладскомДокументеТовараБольшеЧемВУпр Тогда 
			Сообщить("Товара больше чем в основании, проведение не возможно");
			Отказ=Истина;
			Возврат
		КонецЕсли;
		Если Ответ.НеХватаетТовараНаСкладеНеВбитыхЯчейках Тогда 
			Сообщить("Товара меньше чем в основании, проведение вне документа не возможно");
			Отказ=Истина;
			Возврат
		КонецЕсли;	
	КонецЕсли;
	ПроверкаНаДвижениеНеКратноУпаковки(Отказ, РежимЗаписи, РежимПроведения)
КонецПроцедуры

Процедура ПроверкаНаДвижениеНеКратноУпаковки(Отказ, РежимЗаписи, РежимПроведения)
	
	Если  не Константы.ВыдаватьПредупреждениеПриДвиженииНеКратноЕдМест.Получить() Тогда
		Возврат
	КонецЕсли;
	
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итWMSПеремещениеТовары.Номенклатура КАК Номенклатура,
	|	итWMSПеремещениеТовары.Характеристика КАК Характеристика,
	|	итWMSПеремещениеТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итWMSПеремещениеТовары.Качество КАК Качество,
	|	итWMSПеремещениеТовары.ДатаРозлива КАК ДатаРозлива,
	|	ЕСТЬNULL(итWMSПеремещениеТовары.КоличествоИзменения, 0) КАК Количество,
	|	итWMSПеремещениеТовары.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВтДанныеДокумента
	|ИЗ
	|	&Товары КАК итWMSПеремещениеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеДокумента.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	НоменклатураДанные.Ссылка КАК Номенклатура,
	|	ВтДанныеДокумента.Характеристика КАК Характеристика,
	|	ВтДанныеДокумента.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВтДанныеДокумента.Качество КАК Качество,
	|	ВтДанныеДокумента.ДатаРозлива КАК ДатаРозлива,
	|	СУММА(ВтДанныеДокумента.Количество) КАК Количество,
	|	ВтДанныеДокумента.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВтДанныеДокументаГруппировка
	|ИЗ
	|	ВтДанныеДокумента КАК ВтДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураДанные
	|		ПО ВтДанныеДокумента.Номенклатура = НоменклатураДанные.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДанныеДокумента.ИдентификаторУпаковки,
	|	ВтДанныеДокумента.Характеристика,
	|	ВтДанныеДокумента.СерияНоменклатуры,
	|	ВтДанныеДокумента.Качество,
	|	ВтДанныеДокумента.ДатаРозлива,
	|	НоменклатураДанные.Ссылка,
	|	ВтДанныеДокумента.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеДокументаГруппировка.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВтДанныеДокументаГруппировка.Номенклатура КАК Номенклатура,
	|	ВтДанныеДокументаГруппировка.Характеристика КАК Характеристика,
	|	ВтДанныеДокументаГруппировка.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВтДанныеДокументаГруппировка.Качество КАК Качество,
	|	ВтДанныеДокументаГруппировка.ДатаРозлива КАК ДатаРозлива,
	|	ВтДанныеДокументаГруппировка.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВтДанныеДокументаГруппировка.Количество, 0) / ВЫБОР
	|					КОГДА ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|						ТОГДА 1
	|					ИНАЧЕ ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0)
	|				КОНЕЦ КАК ЧИСЛО(15, 2))) <> ЕСТЬNULL(ВтДанныеДокументаГруппировка.Количество, 0) / ВЫБОР
	|				КОГДА ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0)
	|			КОНЕЦ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеКратноУпаковке,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаданыДанныеЕдМест,
	|	ВтДанныеДокументаГруппировка.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ИтоговыеДанные
	|ИЗ
	|	ВтДанныеДокументаГруппировка КАК ВтДанныеДокументаГруппировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеДанные.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	ИтоговыеДанные.Характеристика КАК Характеристика,
	|	ИтоговыеДанные.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ИтоговыеДанные.Качество КАК Качество,
	|	ИтоговыеДанные.ДатаРозлива КАК ДатаРозлива,
	|	ИтоговыеДанные.Количество КАК Количество,
	|	ИтоговыеДанные.НеКратноУпаковке КАК НеКратноУпаковке,
	|	ИтоговыеДанные.НеЗаданыДанныеЕдМест КАК НеЗаданыДанныеЕдМест,
	|	ИтоговыеДанные.Ячейка КАК Ячейка
	|ИЗ
	|	ИтоговыеДанные КАК ИтоговыеДанные
	|ГДЕ
	|	(ИтоговыеДанные.НеКратноУпаковке
	|			ИЛИ ИтоговыеДанные.НеЗаданыДанныеЕдМест)";
	
	Запрос.УстановитьПараметр("Товары",Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.НеКратноУпаковке Тогда 
			Сообщить("в индентификаторе "+ВыборкаДетальныеЗаписи.ИдентификаторУпаковки +" из ячейки " + ВыборкаДетальныеЗаписи.Ячейка +" забирается количество номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура+" не кратное упаковке ");
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.НеЗаданыДанныеЕдМест Тогда 
			Сообщить("в индентификаторе "+ВыборкаДетальныеЗаписи.ИдентификаторУпаковки +" из ячейки " + ВыборкаДетальныеЗаписи.Ячейка +" для номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура+" не заданы параметры ед. мест ");
		КонецЕсли;
		
		Если Константы.БлокироватьПриДвиженииНеКратноЕдМест.Получить() Тогда 
			Отказ=Истина;
		КонецЕсли;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ПередЗаписьюОтменаПроведения(Отказ, РежимЗаписи, РежимПроведения)
	СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Создан;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	УстановитьБлокировкиДанныхИОчиститьРегистры();
	ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения);
	ПроверкаНаСоответсвиеДанныхЯчеек(Отказ, РежимПроведения);
	Если Отказ Тогда 
		ОтменитьТранзакцию();
	КонецЕсли;	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура  ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения)
	ПроведениеПоТоварамВЯчейках(Отказ, РежимПроведения);
КонецПроцедуры

Процедура ПроведениеПоТоварамВЯчейках(Отказ, РежимПроведения)
	итТоварыВЯчейках=Движения.итТоварыВЯчейках;
	итТоварыВЯчейках.Записывать=Истина;
	итТоварыВЯчейках.Очистить();
	
	Для Каждого стр из Товары цикл
		////////////Расход
		НоваяЗапись=итТоварыВЯчейках.Добавить();
		НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
		НоваяЗапись.Регистратор=Ссылка;
		НоваяЗапись.Период=Дата;
		НоваяЗапись.Организация=ОрганизацияОтправитель;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.Склад=СкладОтправитель;
		НоваяЗапись.Ячейка=стр.Ячейка;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
		НоваяЗапись.Качество=стр.Качество;
		НоваяЗапись.Характеристика=стр.Характеристика;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозлива;
		НоваяЗапись.Количество=стр.Количество;	
		///////////Приход
		НоваяЗапись=итТоварыВЯчейках.Добавить();
		НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
		НоваяЗапись.Регистратор=Ссылка;
		НоваяЗапись.Период=Дата;
		НоваяЗапись.Организация=ОрганизацияПолучатель;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковкиИзменения;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.Склад=СкладПолучатель;
		НоваяЗапись.Ячейка=стр.Ячейка;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатурыИзменения;
		НоваяЗапись.Качество=стр.КачествоИзменения;
		НоваяЗапись.Характеристика=стр.ХарактеристикаИзменения;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозливаИзменения;
		НоваяЗапись.Количество=стр.КоличествоИзменения;	
	КонецЦикла;
	итТоварыВЯчейках.Записать();
КонецПроцедуры

Процедура ПроверкаНаСоответсвиеДанныхЯчеек(Отказ, РежимПроведения)

	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Номенклатура КАК Номенклатура,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА итWMSИзменениеПараметровТовараВЯчейкахТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	|		ИНАЧЕ итWMSИзменениеПараметровТовараВЯчейкахТовары.Качество
	|	КОНЕЦ КАК Качество,
	|	СУММА(итWMSИзменениеПараметровТовараВЯчейкахТовары.КоличествоИзменения) КАК Количество,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ссылка.СкладОтправитель КАК СкладОтправитель,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ячейка КАК Ячейка,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ссылка.ОрганизацияОтправитель КАК ОрганизацияОтправитель
	|ПОМЕСТИТЬ СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки
	|ИЗ
	|	Документ.итWMSИзменениеПараметровТовараВЯчейках.Товары КАК итWMSИзменениеПараметровТовараВЯчейкахТовары
	|ГДЕ
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ИдентификаторУпаковки,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Номенклатура,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.СерияНоменклатуры,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ссылка.СкладОтправитель,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ячейка,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Ссылка.ОрганизацияОтправитель,
	|	ВЫБОР
	|		КОГДА итWMSИзменениеПараметровТовараВЯчейкахТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	|		ИНАЧЕ итWMSИзменениеПараметровТовараВЯчейкахТовары.Качество
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Организация КАК Организация,
	|	итТоварыВЯчейкахОстатки.Склад КАК Склад,
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	итТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|	итТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|	итТоварыВЯчейкахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итТоварыВЯчейкахОстатки.ДатаРозлива КАК ДатаРозлива,
	|	итТоварыВЯчейкахОстатки.Качество КАК Качество,
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоОстаток
	|ИЗ
	|	СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки КАК СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки(&Период, ) КАК итТоварыВЯчейкахОстатки
	|		ПО СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
	|			И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
	|			И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
	|			И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Качество = итТоварыВЯчейкахОстатки.Качество
	|			И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.СкладОтправитель = итТоварыВЯчейкахОстатки.Склад
	|			И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Ячейка = итТоварыВЯчейкахОстатки.Ячейка
	|			И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.ОрганизацияОтправитель = итТоварыВЯчейкахОстатки.Организация
	|ГДЕ
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток < 0";
	
	Запрос.УстановитьПараметр("Период", новый Граница(новый МоментВремени(Дата,Ссылка),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);	
	
	РезультатЗапроса = Запрос.Выполнить();
	РезультатПроверкиПриЗабореТовараИзЯчейки=РезультатЗапроса.Выбрать();
	
	
	Пока  РезультатПроверкиПриЗабореТовараИзЯчейки.Следующий() цикл
			Отказ=Истина;
			Сообщить("для Идентификатора упаковки "+РезультатПроверкиПриЗабореТовараИзЯчейки.ИдентификаторУпаковки+" первышенно возможное количетсво перемещаемой номеклатуры 
			|"+РезультатПроверкиПриЗабореТовараИзЯчейки.Номенклатура+" серия-" +РезультатПроверкиПриЗабореТовараИзЯчейки.СерияНоменклатуры +" качеством-"+РезультатПроверкиПриЗабореТовараИзЯчейки.Качество+ 
			" на "+(-РезультатПроверкиПриЗабореТовараИзЯчейки.КоличествоОстаток) +" базовых едениц ");		
	КонецЦикла;

	
КонецПроцедуры

Процедура УстановитьБлокировкиДанныхИОчиститьРегистры()
	
БлокировкаДанных = новый БлокировкаДанных;
	
#Область БлокировкаитТоварыВЯчейках	
	СтруктураПараметров=итWMSСлужебныеПроцедурыИФункции.СоздатьСтруктуруПараметровБлокировкиДанных(Товары,БлокировкаДанных);
	СтруктураПараметров.ПолеПространствоБлокировок="Номенклатура,Ячейка,ИдентификаторУпаковки";
	СтруктураПараметров.ПолеИсточника="Номенклатура,Ячейка,ИдентификаторУпаковки";
	СтруктураПараметров.ПространствоБлокировки="РегистрНакопления.итТоварыВЯчейках";
	итWMSСлужебныеПроцедурыИФункции.УстановкаЭлементаБлокировокДанныхWMS(СтруктураПараметров);
	
	СтруктураПараметров=итWMSСлужебныеПроцедурыИФункции.СоздатьСтруктуруПараметровБлокировкиДанных(Товары,БлокировкаДанных);
	СтруктураПараметров.ПолеПространствоБлокировок="Ячейка,Номенклатура,ИдентификаторУпаковки";
	СтруктураПараметров.ПолеИсточника="Ячейка,Номенклатура,ИдентификаторУпаковкиИзменения";
	СтруктураПараметров.ПространствоБлокировки="РегистрНакопления.итТоварыВЯчейках";
	итWMSСлужебныеПроцедурыИФункции.УстановкаЭлементаБлокировокДанныхWMS(СтруктураПараметров);
#КонецОбласти

БлокировкаДанных.Заблокировать();
	
	
	НаборЗаписей=РегистрыНакопления.итТоварыВЯчейках.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		ЗаполнитьНаОснованииПеремещения(ДанныеЗаполнения)
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНаОснованииПеремещения(ДанныеЗаполнения)

	СкладОтправитель=ДанныеЗаполнения.СкладОтправитель;
	СкладПолучатель=ДанныеЗаполнения.СкладПолучатель;
	итОснование=ДанныеЗаполнения;
	СозданНаОснованиСерверногоВызова=Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ПеремещениеТоваровТовары.Качество КАК Качество,
	|	СУММА(ЕСТЬNULL(ПеремещениеТоваровТовары.Количество, 0)) КАК Количество,
	|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПеремещениеТоваровТовары.Ссылка.СкладОтправитель КАК СкладОтправитель,
	|	ПеремещениеТоваровТовары.Ссылка.СкладПолучатель КАК СкладПолучатель
	|ПОМЕСТИТЬ ДанныеПеремещения
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.СерияНоменклатуры,
	|	ПеремещениеТоваровТовары.Качество,
	|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры,
	|	ПеремещениеТоваровТовары.Ссылка.СкладОтправитель,
	|	ПеремещениеТоваровТовары.Ссылка.СкладПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ итТоварыВЯчейкахОстатки.ИдентификаторУпаковки) КАК ИдентификаторУпаковки,
	|	МАКСИМУМ(итТоварыВЯчейкахОстатки.Склад) КАК Склад,
	|	МАКСИМУМ(итТоварыВЯчейкахОстатки.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(итТоварыВЯчейкахОстатки.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(итТоварыВЯчейкахОстатки.СерияНоменклатуры) КАК СерияНоменклатуры,
	|	МАКСИМУМ(итТоварыВЯчейкахОстатки.ДатаРозлива) КАК ДатаРозлива,
	|	МАКСИМУМ(итТоварыВЯчейкахОстатки.Качество) КАК Качество
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	итТоварыВЯчейкахОстатки.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Ячейка КАК Ячейка,
	|	ВТ.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ПОМЕСТИТЬ ВТ2
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.ИдентификаторУпаковки > 1
	|	И ВТ.Ячейка.КоличествоПалет = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ2.Ячейка КАК Ячейка,
	|	1 КАК Приоритет
	|ПОМЕСТИТЬ ВТ3
	|ИЗ
	|	ВТ2 КАК ВТ2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Ячейка,
	|	2
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|ГДЕ
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки = """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.Ячейка КАК Ячейка,
	|	ВложенныйЗапрос.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВложенныйЗапрос.ДатаРозлива КАК ДатаРозлива,
	|	ВложенныйЗапрос.Качество КАК Качество,
	|	СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ СвободныйОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Склад КАК Склад,
	|		ВложенныйЗапрос.Ячейка КАК Ячейка,
	|		ВложенныйЗапрос.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.Характеристика КАК Характеристика,
	|		ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ВложенныйЗапрос.ДатаРозлива КАК ДатаРозлива,
	|		ВложенныйЗапрос.Качество КАК Качество,
	|		СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК КоличествоОстаток
	|	ИЗ
	|		(ВЫБРАТЬ
	|			итТоварыВЯчейкахОстатки.Склад КАК Склад,
	|			итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|			итТоварыВЯчейкахОстатки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|			итТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|			итТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|			итТоварыВЯчейкахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|			итТоварыВЯчейкахОстатки.ДатаРозлива КАК ДатаРозлива,
	|			итТоварыВЯчейкахОстатки.Качество КАК Качество,
	|			итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоОстаток
	|		ИЗ
	|			ДанныеПеремещения КАК ДанныеПеремещения
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|				ПО ДанныеПеремещения.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
	|					И ДанныеПеремещения.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
	|					И ДанныеПеремещения.Качество = итТоварыВЯчейкахОстатки.Качество
	|					И ДанныеПеремещения.ХарактеристикаНоменклатуры = итТоварыВЯчейкахОстатки.Характеристика
	|					И ДанныеПеремещения.СкладОтправитель = итТоварыВЯчейкахОстатки.Склад) КАК ВложенныйЗапрос
	|	ГДЕ
	|		НЕ ВложенныйЗапрос.Ячейка В
	|					(ВЫБРАТЬ
	|						ВТ3.Ячейка
	|					ИЗ
	|						ВТ3 КАК ВТ3)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Склад,
	|		ВложенныйЗапрос.Ячейка,
	|		ВложенныйЗапрос.ИдентификаторУпаковки,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.Характеристика,
	|		ВложенныйЗапрос.СерияНоменклатуры,
	|		ВложенныйЗапрос.ДатаРозлива,
	|		ВложенныйЗапрос.Качество) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.КоличествоОстаток > 0
	|	И НЕ ВложенныйЗапрос.Ячейка.Заблокирована
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Ячейка,
	|	ВложенныйЗапрос.ИдентификаторУпаковки,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.СерияНоменклатуры,
	|	ВложенныйЗапрос.ДатаРозлива,
	|	ВложенныйЗапрос.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПеремещения.СкладОтправитель КАК Склад,
	|	СвободныйОстаток.Ячейка КАК Ячейка,
	|	СвободныйОстаток.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ДанныеПеремещения.Номенклатура КАК Номенклатура,
	|	ДанныеПеремещения.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ДанныеПеремещения.СерияНоменклатуры КАК СерияНоменклатуры,
	|	СвободныйОстаток.ДатаРозлива КАК ДатаРозлива,
	|	ДанныеПеремещения.Качество КАК Качество,
	|	ЕСТЬNULL(СвободныйОстаток.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ДанныеПеремещения.Количество, 0) КАК Количество
	|ИЗ
	|	ДанныеПеремещения КАК ДанныеПеремещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныйОстаток КАК СвободныйОстаток
	|		ПО (СвободныйОстаток.Склад = ДанныеПеремещения.СкладОтправитель)
	|			И (СвободныйОстаток.Номенклатура = ДанныеПеремещения.Номенклатура)
	|			И (СвободныйОстаток.СерияНоменклатуры = ДанныеПеремещения.СерияНоменклатуры)
	|			И (СвободныйОстаток.Качество = ДанныеПеремещения.Качество)
	|			И (СвободныйОстаток.Характеристика = ДанныеПеремещения.ХарактеристикаНоменклатуры)
	|ИТОГИ
	|	МАКСИМУМ(Склад),
	|	СУММА(КоличествоОстаток),
	|	МАКСИМУМ(Количество)
	|ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Качество,
	|	Характеристика";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		Сообщить("нет остатокв на складе");
	КонецЕсли;	
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		// Вставить обработку выборки ВыборкаНоменклатура
		
		ВыборкаСерияНоменклатуры = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСерияНоменклатуры.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСерияНоменклатуры
			
			ВыборкаКачество = ВыборкаСерияНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКачество.Следующий() Цикл
				// Вставить обработку выборки ВыборкаКачество
				
				ВыборкаХарактеристика = ВыборкаКачество.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаХарактеристика.Следующий() Цикл
					
					
					ВыборкаДетальныеЗаписи = ВыборкаХарактеристика.Выбрать();
					
					Если ВыборкаХарактеристика.КоличествоОстаток<ВыборкаХарактеристика.Количество Тогда 
						Сообщить("для номенклатуры "+Строка(ВыборкаХарактеристика.Номенклатура)+" с серией "+Строка(ВыборкаХарактеристика.СерияНоменклатуры) +" код "+ Строка(ВыборкаХарактеристика.СерияНоменклатуры.Код) +
						" с качеством "+ ВыборкаХарактеристика.Качество+" не хватает остатков "+Строка(ВыборкаХарактеристика.Количество-ВыборкаХарактеристика.КоличествоОстаток)+" поиск товара будет осуществлен по максимальному значению");
					КонецЕсли;	
					КоличествоВсего=ВыборкаХарактеристика.Количество;
					Остаток= ВыборкаХарактеристика.КоличествоОстаток;
					Если Остаток<=0 тогда
						Продолжить;
					КонецЕсли;	
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						НоваяСтрока=Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
						Если  КоличествоВсего<=ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда 
							НоваяСтрока.Количество= КоличествоВсего;
						иначе
							НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток;
						КонецЕсли;
						ПриравнятьДанныеИзмененияКИзначальным(НоваяСтрока);
						КоличествоВсего=КоличествоВсего-НоваяСтрока.Количество;
						Если КоличествоВсего=0 Тогда 
							Прервать;
						КонецЕсли;	
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	
КонецПроцедуры

Процедура ПриравнятьДанныеИзмененияКИзначальным(Данные)
	Данные.ИдентификаторУпаковкиИзменения=Данные.ИдентификаторУпаковки;
	Данные.ХарактеристикаИзменения=Данные.Характеристика;
	Данные.СерияНоменклатурыИзменения=Данные.СерияНоменклатуры;
	Данные.ДатаРозливаИзменения=Данные.ДатаРозлива;
	Данные.КачествоИзменения=Данные.Качество;	
	Данные.КоличествоИзменения=Данные.Количество;
КонецПроцедуры
Процедура ПроверитьОснованиеНаНесколькоПодчиненныхДокументов(Отказ) Экспорт 
	Если итОснование=Неопределено Тогда 
		Возврат
	КонецЕсли;	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSИзменениеПараметровТовараВЯчейках.Ссылка
	|ИЗ
	|	Документ.итWMSИзменениеПараметровТовараВЯчейках КАК итWMSИзменениеПараметровТовараВЯчейках
	|ГДЕ
	|	итWMSИзменениеПараметровТовараВЯчейках.итОснование = &итОснование
	|	И итWMSИзменениеПараметровТовараВЯчейках.Проведен = ИСТИНА
	|	И итWMSИзменениеПараметровТовараВЯчейках.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("итОснование", итОснование);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Отказ=Истина;
		Сообщить("У документа "+Строка(итОснование)+" уже есть складской документ "+ Строка(ВыборкаДетальныеЗаписи.Ссылка));
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ЗапросДанныхПоРазличиюОснованияИДокумента(МенеджерВременныхТаблиц) Экспорт 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.Номенклатура,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.СерияНоменклатурыИзменения КАК СерияНоменклатуры,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.ХарактеристикаИзменения КАК Характеристика,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.КоличествоИзменения КАК Количество,
	|	итWMSИзменениеПараметровТовараВЯчейкахТовары.КачествоИзменения КАК Качество
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК итWMSИзменениеПараметровТовараВЯчейкахТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура,
	|	ВтТовары.СерияНоменклатуры,
	|	ВтТовары.Характеристика,
	|	СУММА(ВтТовары.Количество) КАК Количество,
	|	ВтТовары.Качество
	|ПОМЕСТИТЬ ГруппировкаТовары
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТовары.Номенклатура,
	|	ВтТовары.СерияНоменклатуры,
	|	ВтТовары.Характеристика,
	|	ВтТовары.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	СУММА(ЕСТЬNULL(ПеремещениеТоваровТовары.Количество, 0) * ЕСТЬNULL(ПеремещениеТоваровТовары.Коэффициент, 0)) КАК Количество,
	|	ПеремещениеТоваровТовары.СерияНоменклатуры,
	|	ПеремещениеТоваровТовары.Качество,
	|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ДанныеУпрПеремещения
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.СерияНоменклатуры,
	|	ПеремещениеТоваровТовары.Качество,
	|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппировкаТовары.Номенклатура,
	|	ГруппировкаТовары.СерияНоменклатуры,
	|	ГруппировкаТовары.Характеристика,
	|	ГруппировкаТовары.Количество КАК КоличествоСоСклада,
	|	ГруппировкаТовары.Качество,
	|	0 КАК КоличествоУпрПеремещения
	|ПОМЕСТИТЬ СравнениеОбъединениеДанных
	|ИЗ
	|	ГруппировкаТовары КАК ГруппировкаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеУпрПеремещения.Номенклатура,
	|	ДанныеУпрПеремещения.СерияНоменклатуры,
	|	ДанныеУпрПеремещения.ХарактеристикаНоменклатуры,
	|	0,
	|	ДанныеУпрПеремещения.Качество,
	|	ДанныеУпрПеремещения.Количество
	|ИЗ
	|	ДанныеУпрПеремещения КАК ДанныеУпрПеремещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СравнениеОбъединениеДанных.Номенклатура,
	|	СравнениеОбъединениеДанных.СерияНоменклатуры,
	|	СравнениеОбъединениеДанных.Характеристика,
	|	СУММА(СравнениеОбъединениеДанных.КоличествоСоСклада) КАК КоличествоСоСклада,
	|	СравнениеОбъединениеДанных.Качество,
	|	СУММА(СравнениеОбъединениеДанных.КоличествоУпрПеремещения) КАК КоличествоУпрПеремещения
	|ПОМЕСТИТЬ ГруппированныеДанные
	|ИЗ
	|	СравнениеОбъединениеДанных КАК СравнениеОбъединениеДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	СравнениеОбъединениеДанных.Номенклатура,
	|	СравнениеОбъединениеДанных.СерияНоменклатуры,
	|	СравнениеОбъединениеДанных.Характеристика,
	|	СравнениеОбъединениеДанных.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ГруппировкаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеУпрПеремещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СравнениеОбъединениеДанных";
	
	Запрос.УстановитьПараметр("Товары",Товары.Выгрузить());
	Запрос.УстановитьПараметр("Ссылка",итОснование);
	
    Запрос.Выполнить();
	
КонецПроцедуры
Функция ПроверитьНаСоответствиеОснованиеИДокумент()
	Если ТипЗнч(итОснование)<>Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Возврат Неопределено	
	КонецЕсли;
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;	
	ЗапросДанныхПоРазличиюОснованияИДокумента(МенеджерВременныхТаблиц);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ГруппированныеДанные.КоличествоСоСклада <> ГруппированныеДанные.КоличествоУпрПеремещения
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеХватаетТовараНаСкладеНеВбитыхЯчейках,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ГруппированныеДанные.КоличествоСоСклада > ГруппированныеДанные.КоличествоУпрПеремещения
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВСкладскомДокументеТовараБольшеЧемВУпр
	|ИЗ
	|	ГруппированныеДанные КАК ГруппированныеДанные";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныхЗаписей=РезультатЗапроса.Выбрать();
	НеХватаетТовараНаСкладеНеВбитыхЯчейках=0;
	ВСкладскомДокументеТовараБольшеЧемВУпр=0;
	Пока  ВыборкаДетальныхЗаписей.Следующий() цикл
		НеХватаетТовараНаСкладеНеВбитыхЯчейках=ВыборкаДетальныхЗаписей.НеХватаетТовараНаСкладеНеВбитыхЯчейках;
		ВСкладскомДокументеТовараБольшеЧемВУпр=ВыборкаДетальныхЗаписей.ВСкладскомДокументеТовараБольшеЧемВУпр;
	КонецЦикла;
	Возврат новый Структура("НеХватаетТовараНаСкладеНеВбитыхЯчейках,ВСкладскомДокументеТовараБольшеЧемВУпр",НеХватаетТовараНаСкладеНеВбитыхЯчейках,ВСкладскомДокументеТовараБольшеЧемВУпр);
КонецФункции


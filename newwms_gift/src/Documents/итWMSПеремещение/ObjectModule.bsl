Перем МассивЗадач Экспорт ;
Перем МассивНовыхСтрок Экспорт ;
Перем ПривилигированноеПроведение Экспорт ;


#Область ПередЗаписью

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда 
	Если  не ПроверитьЗаполнение() Тогда 
		Отказ=Истина;
		Возврат
	КонецЕсли;	
	КонецЕсли;
	ПередЗаписьюУстановкаЗначенийПоУмолчанию();
	итWMSСлужебныеПроцедурыИФункции.УстановитьРежимПроведенияЗавершенногоДокумента(СтатусДокумента,РежимПроведения);
	ПроверкаНаДублиПриНаборке(Отказ, РежимЗаписи, РежимПроведения);	
	Если Отказ Тогда 
		Возврат
	КонецЕсли;
	ПроверитьЧтоДатаПеремещенияВсегдаМеньшеНаборки(РежимПроведения);
	Если ЭтотОбъект.Проведен и РежимЗаписи=РежимЗаписиДокумента.Запись тогда
		Если не ОбменДанными.Загрузка Тогда 
			РежимЗаписи=РежимЗаписиДокумента.Проведение;
		КонецЕсли;
	КонецЕсли;	
	Если РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения тогда
		ПередЗаписьюОтменаПроведения(Отказ, РежимЗаписи, РежимПроведения);
	ИначеЕсли  РежимЗаписи= РежимЗаписиДокумента.Проведение тогда
		ПередЗаписьюПроведение(Отказ, РежимЗаписи, РежимПроведения);
	КонецЕсли;
	ЗаписьПараметровСтратегии();
	Если  РежимЗаписи=РежимЗаписиДокумента.Проведение  Тогда 
	//ОтложенноеПроведение=Ложь;   
	Если не Ссылка.Пустая() Тогда 
		итWMSСлужебныеПроцедурыИФункции.УдалитьЗаписьДопОбработкиОтложенногоПроведения(Ссылка);
	КонецЕсли;	
КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписьюОтменаПроведения(Отказ, РежимЗаписи, РежимПроведения)
	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется или  СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Зарезервирован  тогда
		ОбработчикОснованияПередЗаписьюПриОтменеПроведения(Отказ, РежимЗаписи, РежимПроведения);
		Если Отказ Тогда 
			Возврат
		КонецЕсли;	
		СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Создан;
		ОчиститьСписокЗадач(Отказ,РежимЗаписи,РежимПроведения)
	ИначеЕсли СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределен тогда
		Отказ = Истина;
	
			Сообщить("Документ распределен на тсд и не может быть распроведен ");

		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработчикОснованияПередЗаписьюПриОтменеПроведения(Отказ, РежимЗаписи, РежимПроведения)
	Если ТипЗнч(итОснование)=тип("ДокументСсылка.итWMSНаборка") тогда
		Если итОснование.Проведен и ПеремещениеВПикинг и (итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется
			или итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Зарезервирован или 
			итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределен) 
			тогда
			Отказ=Истина;
				Сообщить("Документ может быть распроведен только после наборки");
			Возврат
		КонецЕсли;
		Если итОснование.Проведен и не ПеремещениеВПикинг и не ИзъятиеТовараИзНаборки и (итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен) тогда
			ОбъектОснования=итОснование.ПолучитьОбъект();
			ОбъектОснования.ДействияПриФиксацииЗадачДокумента();
			Попытка
				ОбъектОснования.Записать();
			Исключение
				ВызватьИсключение ОписаниеОшибки();
			КонецПопытки;
			Возврат
		КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗаписьюПроведение(Отказ, РежимЗаписи, РежимПроведения)
	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Создан и НеРаспределятьНаТСД тогда
		СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Зарезервирован;
		ПроверкаНаДвижениеНеКратноУпаковки(Отказ, РежимЗаписи, РежимПроведения);
	ИначеЕсли СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Создан и не НеРаспределятьНаТСД  тогда
		СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется;
		ПроверкаНаФиксациюЗадачДокументаДоРаспределения();
		для Каждого стр из Товары цикл
			Если не стр.ФиксацияСтроки Тогда 
				стр.СостояниеЗадачи=Перечисления.итWMSСостоянияЗадачТСД.КВыполнению;
			КонецЕсли;
		КонецЦикла;
		ПроверкаНаДвижениеНеКратноУпаковки(Отказ, РежимЗаписи, РежимПроведения);
		Хранилище=новый ХранилищеЗначения(Товары.Выгрузить(),новый СжатиеДанных(9));
		СнимокТабличнойЧастиДоРаспределения=Хранилище;	
	ИначеЕсли СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Зарезервирован и не НеРаспределятьНаТСД  тогда
		СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется;
		ПроверкаНаФиксациюЗадачДокументаДоРаспределения();
		для Каждого стр из Товары цикл
			Если не стр.ФиксацияСтроки Тогда 
				стр.СостояниеЗадачи=Перечисления.итWMSСостоянияЗадачТСД.КВыполнению;
			КонецЕсли;
		КонецЦикла;
		ПроверкаНаДвижениеНеКратноУпаковки(Отказ, РежимЗаписи, РежимПроведения);
		Хранилище=новый ХранилищеЗначения(Товары.Выгрузить(),новый СжатиеДанных(9));
		СнимокТабличнойЧастиДоРаспределения=Хранилище;
	КонецЕсли;	
	//Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен и Ссылка.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.ВыполненСОшибкой тогда
	//	ОбработчикРучнойСменыСтатуса(Отказ);	
	//КонецЕсли;

	ОбработчикОснованияПередЗаписьюПроведения(Отказ, РежимЗаписи, РежимПроведения);		 
	
КонецПроцедуры

Процедура ОбработчикОснованияПередЗаписьюПроведения(Отказ, РежимЗаписи, РежимПроведения)
	Если ТипЗнч(итОснование)=Тип("ДокументСсылка.итWMSНаборка") и ПеремещениеВПикинг Тогда 
		ПередЗаписьюПроведениеПеремещениеВПикинг(Отказ, РежимЗаписи, РежимПроведения);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработчикРучнойСменыСтатуса(Отказ)
	////////////// Получение данных настроек wms
	//НастройкиWMS=итWMSПривилегированныйМодуль.ПолучитьНастройкиИзХранилища();
	//Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(НастройкиWMS) Тогда
	//	итWMSСлужебныеПроцедурыИФункции.WMSОповещениеОТиповыхОшибках(НастройкиWMS);
	//	Отказ=Истина;
	//	Возврат;
	//КонецЕсли;
	////////////////////////////////////
	//
	//Если НастройкиWMS.ОповещатьПриРучномИзмененииСтатусаДокументаПеремещения Тогда 
	//	СтруктураСообщения = новый Структура;
	//	СтруктураСообщения.Вставить("Дата",Дата);
	//	СтруктураСообщения.Вставить("Номер",Номер);
	//	СтруктураСообщения.Вставить("ПредыдущийСтатусДокумента",Строка(Ссылка.СтатусДокумента));
	//	СтруктураСообщения.Вставить("ТекущийСтатусДокумента",Строка(СтатусДокумента));
	//	СтруктураСообщения.Вставить("Ответственный",Строка(ПараметрыСеанса.ТекущийПользователь));
	//	МассивПараметров=новый Массив;
	//	МассивПараметров.Добавить(СтруктураСообщения);
	//	ФоновыеЗадания.Выполнить("итWMSОбработчикДанныхПеремещения.ФоновоеОповещениеИзмененияСтатусаДокумента",МассивПараметров,Строка(новый УникальныйИдентификатор),"WMSФоновоеОповещениеИзмененияСтатусаДокументаПеремещения");
	//КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписьюПроведениеПеремещениеВПикинг(Отказ, РежимЗаписи, РежимПроведения)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.ИдентификаторУпаковки,
	|	итWMSПеремещениеТовары.ЯчейкаОтправитель,
	|	итWMSПеремещениеТовары.СостояниеЗадачи,
	|	итWMSПеремещениеТовары.ФиксацияСтроки
	|ПОМЕСТИТЬ ВТИдентификаторыПеремещения
	|ИЗ
	|	&Товары КАК итWMSПеремещениеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИдентификаторыПеремещения.ИдентификаторУпаковки,
	|	ВТИдентификаторыПеремещения.ЯчейкаОтправитель
	|ПОМЕСТИТЬ ВтИдентификаторыПеремещенияОтбор
	|ИЗ
	|	ВТИдентификаторыПеремещения КАК ВТИдентификаторыПеремещения
	|ГДЕ
	|	ВТИдентификаторыПеремещения.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итWMSСостоянияЗадачТСД.отменена)
	|	И НЕ ВТИдентификаторыПеремещения.ФиксацияСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТИдентификаторыПеремещения.ИдентификаторУпаковки,
	|	ВТИдентификаторыПеремещения.ЯчейкаОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итWMSНаборкаТовары.ИдентификаторУпаковки,
	|	итWMSНаборкаТовары.ЯчейкаОтправитель
	|ПОМЕСТИТЬ ВТИдентификаторыНаборки
	|ИЗ
	|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
	|ГДЕ
	|	итWMSНаборкаТовары.Ссылка = &Ссылка
	|	И НЕ итWMSНаборкаТовары.ФиксацияСтроки
	|	И итWMSНаборкаТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.ИтWMSСостоянияЗадачТсд.Отменена)
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSНаборкаТовары.ИдентификаторУпаковки,
	|	итWMSНаборкаТовары.ЯчейкаОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИдентификаторыНаборки.ИдентификаторУпаковки,
	|	ВТИдентификаторыНаборки.ЯчейкаОтправитель,
	|	1 КАК НаличиеВНаборке,
	|	0 КАК НаличеВПеремещении
	|ПОМЕСТИТЬ ВтОбъединение
	|ИЗ
	|	ВТИдентификаторыНаборки КАК ВТИдентификаторыНаборки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтИдентификаторыПеремещенияОтбор.ИдентификаторУпаковки,
	|	ВтИдентификаторыПеремещенияОтбор.ЯчейкаОтправитель,
	|	0,
	|	1
	|ИЗ
	|	ВтИдентификаторыПеремещенияОтбор КАК ВтИдентификаторыПеремещенияОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОбъединение.ИдентификаторУпаковки,
	|	ВтОбъединение.ЯчейкаОтправитель,
	|	СУММА(ВтОбъединение.НаличиеВНаборке) КАК НаличиеВНаборке,
	|	СУММА(ВтОбъединение.НаличеВПеремещении) КАК НаличеВПеремещении
	|ПОМЕСТИТЬ ВтГруппировкаОбъединения
	|ИЗ
	|	ВтОбъединение КАК ВтОбъединение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОбъединение.ИдентификаторУпаковки,
	|	ВтОбъединение.ЯчейкаОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтГруппировкаОбъединения.ИдентификаторУпаковки,
	|	ВтГруппировкаОбъединения.ЯчейкаОтправитель,
	|	ВтГруппировкаОбъединения.НаличиеВНаборке,
	|	ВтГруппировкаОбъединения.НаличеВПеремещении
	|ИЗ
	|	ВтГруппировкаОбъединения КАК ВтГруппировкаОбъединения
	|ГДЕ
	|	ВтГруппировкаОбъединения.НаличиеВНаборке <> ВтГруппировкаОбъединения.НаличеВПеремещении";
	
	Запрос.УстановитьПараметр("Ссылка", итОснование);
	Запрос.УстановитьПараметр("Товары",Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивСтрок=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки,ЯчейкаОтправитель",ВыборкаДетальныеЗаписи.ИдентификаторУпаковки,
		ВыборкаДетальныеЗаписи.ЯчейкаОтправитель));
		Для Каждого  стр из МассивСтрок цикл
			Если стр.ФиксацияСтроки Тогда 
				Продолжить;
			КонецЕсли;	
			Товары.Удалить(стр);
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ПроверкаНаДвижениеНеКратноУпаковки(Отказ, РежимЗаписи, РежимПроведения)
	Если ПривилигированноеПроведение Тогда 
		Возврат
	КонецЕсли;	
	
	ВыдаватьПредупреждениеПриДвиженииНеКратноЕдМест=Константы.ВыдаватьПредупреждениеПриДвиженииНеКратноЕдМест.Получить();
	БлокироватьПриДвиженииНеКратноУпаковкиПеремещение=Константы.БлокироватьПриДвиженииНеКратноЕдМест.Получить();
	Если  не ВыдаватьПредупреждениеПриДвиженииНеКратноЕдМест Тогда
		Возврат
	КонецЕсли;
	
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.ИдентификаторУпаковки,
	|	итWMSПеремещениеТовары.Номенклатура,
	|	итWMSПеремещениеТовары.Характеристика,
	|	итWMSПеремещениеТовары.СерияНоменклатуры,
	|	итWMSПеремещениеТовары.Качество,
	|	итWMSПеремещениеТовары.ДатаРозлива,
	|	итWMSПеремещениеТовары.Количество КАК Количество,
	|	итWMSПеремещениеТовары.ЯчейкаОтправитель,
	|	итWMSПеремещениеТовары.ЯчейкаПолучатель
	|ПОМЕСТИТЬ ВтДанныеДокумента
	|ИЗ
	|	&Товары КАК итWMSПеремещениеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеДокумента.ИдентификаторУпаковки,
	|	НоменклатураДанные.Ссылка КАК Номенклатура,
	|	ВтДанныеДокумента.Характеристика,
	|	ВтДанныеДокумента.СерияНоменклатуры,
	|	ВтДанныеДокумента.Качество,
	|	ВтДанныеДокумента.ДатаРозлива,
	|	СУММА(ВтДанныеДокумента.Количество) КАК Количество,
	|	ВтДанныеДокумента.ЯчейкаОтправитель,
	|	ВтДанныеДокумента.ЯчейкаПолучатель
	|ПОМЕСТИТЬ ВтДанныеДокументаГруппировка
	|ИЗ
	|	ВтДанныеДокумента КАК ВтДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураДанные
	|		ПО ВтДанныеДокумента.Номенклатура = НоменклатураДанные.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДанныеДокумента.ИдентификаторУпаковки,
	|	ВтДанныеДокумента.Характеристика,
	|	ВтДанныеДокумента.СерияНоменклатуры,
	|	ВтДанныеДокумента.Качество,
	|	ВтДанныеДокумента.ДатаРозлива,
	|	ВтДанныеДокумента.ЯчейкаОтправитель,
	|	ВтДанныеДокумента.ЯчейкаПолучатель,
	|	НоменклатураДанные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеДокументаГруппировка.ИдентификаторУпаковки,
	|	ВтДанныеДокументаГруппировка.Номенклатура,
	|	ВтДанныеДокументаГруппировка.Характеристика,
	|	ВтДанныеДокументаГруппировка.СерияНоменклатуры,
	|	ВтДанныеДокументаГруппировка.Качество,
	|	ВтДанныеДокументаГруппировка.ДатаРозлива,
	|	ВтДанныеДокументаГруппировка.Количество,
	|	ВтДанныеДокументаГруппировка.ЯчейкаОтправитель,
	|	ВтДанныеДокументаГруппировка.ЯчейкаПолучатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВтДанныеДокументаГруппировка.Количество, 0) / ВЫБОР
	|					КОГДА ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|						ТОГДА 1
	|					ИНАЧЕ ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0)
	|				КОНЕЦ КАК ЧИСЛО(15, 2))) <> ЕСТЬNULL(ВтДанныеДокументаГруппировка.Количество, 0) / ВЫБОР
	|				КОГДА ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0)
	|			КОНЕЦ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеКратноУпаковке,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВтДанныеДокументаГруппировка.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаданыДанныеЕдМест
	|ПОМЕСТИТЬ ИтоговыеДанные
	|ИЗ
	|	ВтДанныеДокументаГруппировка КАК ВтДанныеДокументаГруппировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеДанные.ИдентификаторУпаковки,
	|	ИтоговыеДанные.Номенклатура,
	|	ИтоговыеДанные.Характеристика,
	|	ИтоговыеДанные.СерияНоменклатуры,
	|	ИтоговыеДанные.Качество,
	|	ИтоговыеДанные.ДатаРозлива,
	|	ИтоговыеДанные.Количество,
	|	ИтоговыеДанные.ЯчейкаОтправитель,
	|	ИтоговыеДанные.ЯчейкаПолучатель,
	|	ИтоговыеДанные.НеКратноУпаковке,
	|	ИтоговыеДанные.НеЗаданыДанныеЕдМест
	|ИЗ
	|	ИтоговыеДанные КАК ИтоговыеДанные
	|ГДЕ
	|	(ИтоговыеДанные.НеКратноУпаковке
	|			ИЛИ ИтоговыеДанные.НеЗаданыДанныеЕдМест)";
	
	Запрос.УстановитьПараметр("Товары",Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.НеКратноУпаковке Тогда 		
				Сообщить("в индентификаторе "+ВыборкаДетальныеЗаписи.ИдентификаторУпаковки +" из ячейки " + ВыборкаДетальныеЗаписи.ЯчейкаОтправитель +" в ячейку "+ВыборкаДетальныеЗаписи.ЯчейкаПолучатель +" забирается количество номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура+" не кратное упаковке ");
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.НеЗаданыДанныеЕдМест Тогда

				Сообщить("в индентификаторе "+ВыборкаДетальныеЗаписи.ИдентификаторУпаковки +" из ячейки " + ВыборкаДетальныеЗаписи.ЯчейкаОтправитель +" в ячейку "+ВыборкаДетальныеЗаписи.ЯчейкаПолучатель +" для номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура+" не заданы параметры ед. мест ");
		КонецЕсли;
		
		Если БлокироватьПриДвиженииНеКратноУпаковкиПеремещение Тогда 
			Отказ=Истина;
		КонецЕсли;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ПроверкаНаФиксациюЗадачДокументаДоРаспределения()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.ФиксацияСтроки КАК КоличествоФиксированныхСтрок,
	|	итWMSПеремещениеТовары.ФиксацияСтроки КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&Товары КАК итWMSПеремещениеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВТ.КоличествоФиксированныхСтрок
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоФиксированныхСтрок,
	|	КОЛИЧЕСТВО(ВТ.КоличествоСтрок) КАК КоличествоСтрок
	|ИЗ
	|	ВТ КАК ВТ";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока   ВыборкаДетальныеЗаписи.Следующий() цикл 
		Если ВыборкаДетальныеЗаписи.КоличествоФиксированныхСтрок=ВыборкаДетальныеЗаписи.КоличествоСтрок Тогда 
			ДействияПриФиксацииЗадачДокумента();
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ПроверкаНаДублиПриНаборке(Отказ, РежимЗаписи, РежимПроведения)
	Если ПривилигированноеПроведение или ОбменДанными.Загрузка Тогда 
		Возврат
	КонецЕсли;	
	Если ТипЗнч(итОснование)=тип("ДокументСсылка.итWMSНаборка") тогда
		Если Ссылка.Пустая() тогда
			Если  не ПометкаУдаления  тогда
				Если  ЕстьНесолькоПеремещенийВПикингПодНаборкуНеПомеченныхНаУдаление(итОснование) Тогда 
					Отказ=Истина;
						Сообщить("у наборки этого документа уже имеется актуальное пополнение пикинга");
					Возврат
				КонецЕсли;
				Если  ЕстьНесолькоПеремещениИзъятияНеПомеченныхНаУдаление(итОснование) Тогда 
					Отказ=Истина;
					
						Сообщить("у наборки этого документа уже имеется актуальное перемещение изъятия");
					Возврат
				КонецЕсли;
				
			КонецЕсли;	
		Иначе
			Если Ссылка.ПолучитьОбъект().ПометкаУдаления и не ПометкаУдаления  тогда
				Если ЕстьНесолькоПеремещенийВПикингПодНаборкуНеПомеченныхНаУдаление(итОснование) Тогда 
					Отказ=Истина;
						Сообщить("у наборки этого документа уже имеется актуальное пополнение пикинга");
					Возврат
				КонецЕсли;
				Если  ЕстьНесолькоПеремещениИзъятияНеПомеченныхНаУдаление(итОснование) Тогда 
					Отказ=Истина;
						Сообщить("у наборки этого документа уже имеется актуальное перемещение изъятия");
					Возврат
				КонецЕсли
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Функция ЕстьНесолькоПеремещенийВПикингПодНаборкуНеПомеченныхНаУдаление(Наборка)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещение.Ссылка
	|ИЗ
	|	Документ.итWMSПеремещение КАК итWMSПеремещение
	|ГДЕ
	|	итWMSПеремещение.ПометкаУдаления = ЛОЖЬ
	|	И итWMSПеремещение.Ссылка <> &Ссылка
	|	И итWMSПеремещение.итОснование = &Наборка
	|	И итWMSПеремещение.ПеремещениеВПикинг = ИСТИНА";
	
	Запрос.УстановитьПараметр("Наборка", Наборка);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ПеремещениеВПикинг Тогда 
			Возврат Истина;
		иначе
			Возврат Ложь
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции

Функция ЕстьНесолькоПеремещениИзъятияНеПомеченныхНаУдаление(Наборка)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещение.Ссылка
	|ИЗ
	|	Документ.итWMSПеремещение КАК итWMSПеремещение
	|ГДЕ
	|	итWMSПеремещение.ПометкаУдаления = ЛОЖЬ
	|	И итWMSПеремещение.Ссылка <> &Ссылка
	|	И итWMSПеремещение.итОснование = &Наборка
	|	И итWMSПеремещение.ИзъятиеТовараИзНаборки";
	
	Запрос.УстановитьПараметр("Наборка", Наборка);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ИзъятиеТовараИзНаборки Тогда 
			Возврат Истина;
		иначе
			Возврат Ложь
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции


Процедура ПередЗаписьюУстановкаЗначенийПоУмолчанию()
	
	Если ТипЗнч(ПривилигированноеПроведение)<>Тип("Булево") Тогда 
		ПривилигированноеПроведение=Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЧтоДатаПеремещенияВсегдаМеньшеНаборки(РежимПроведения)
	Если ТипЗнч(итОснование)=тип("ДокументСсылка.итWMSНаборка") и ПеремещениеВПикинг тогда
		Дата=итОснование.Дата-1;
		РежимПроведения=РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаписьПараметровСтратегии()
	Если АдресХраненияПараметров="" Тогда 
		Возврат
	КонецЕсли;	
	ДанныеХранилища=ПолучитьИзВременногоХранилища(АдресХраненияПараметров);
	Если ДанныеХранилища=Неопределено тогда
		АдресХраненияПараметров="";
		Возврат
	КонецЕсли;	
	ПараметрыСтратегии=новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресХраненияПараметров));
	АдресХраненияПараметров="";
КонецПроцедуры

#КонецОбласти


#Область ОбработкаПроведения

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		
	УстановитьБлокировкиДанныхИОчиститьРегистры();

	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется тогда	
		ОчиститьДанныеПомарочногоУчета();
		РаспределениеДокументаНаЗадачиТСД(Отказ, РежимПроведения);
	КонецЕсли;
	
	///////вызов распределения по задачам, с целью исправления 1 строки   или добавления строк
	Если ЭтоИзменениеРаспределенногоДокумента() Тогда 
		РаспределениеДокументаНаЗадачиТСД(Отказ, РежимПроведения);
		Если Отказ Тогда 
			Возврат
		КонецЕсли;	
	КонецЕсли;
	
	Если ТипЗнч(итОснование)=Тип("ДокументСсылка.итWMSНаборка") Тогда 
	Если итОснование.РежимТестирования Тогда
			УдалитьДвиженияНаборкиПоРезервированию();
	КонецЕсли; 
	КонецЕсли;
	
	//Если СтатусДокумента<>Перечисления.итWMSСтатусыСкладскихДокументов.Завершен тогда
	ПроведениеПоРезервированиюЯчеек(Отказ, РежимПроведения,);
	//КонецЕсли;
	ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения);
//	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен 
//		Или СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Выполнен
//		Или  СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.ВыполненСОшибкой	тогда
		//ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения);
	ОбработчикОснованияПриПроведенииДокумента(Отказ, РежимПроведения);
//	КонецЕсли;
	ПроверкаНаСоответсвиеДанныхЯчеек(Отказ, РежимПроведения);
	Если Отказ тогда
		ОтменитьТранзакцию();
	иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;


КонецПроцедуры

Процедура УстановитьБлокировкиДанныхИОчиститьРегистры()
	
	БлокировкаДанных = новый БлокировкаДанных;
	
	#Область БлокировкаитТоварыВЯчейках	
	
	СтруктураПараметров=итWMSСлужебныеПроцедурыИФункции.СоздатьСтруктуруПараметровБлокировкиДанных(Товары,БлокировкаДанных);
	СтруктураПараметров.ПолеПространствоБлокировок="Ячейка";
	СтруктураПараметров.ПолеИсточника="ЯчейкаПолучатель";
	СтруктураПараметров.ПространствоБлокировки="РегистрНакопления.итТоварыВЯчейках";
	итWMSСлужебныеПроцедурыИФункции.УстановкаЭлементаБлокировокДанныхWMS(СтруктураПараметров);
	
	СтруктураПараметров=итWMSСлужебныеПроцедурыИФункции.СоздатьСтруктуруПараметровБлокировкиДанных(Товары,БлокировкаДанных);
	СтруктураПараметров.ПолеПространствоБлокировок="Ячейка,Номенклатура,ИдентификаторУпаковки";
	СтруктураПараметров.ПолеИсточника="ЯчейкаОтправитель,Номенклатура,ИдентификаторУпаковки";
	СтруктураПараметров.ПространствоБлокировки="РегистрНакопления.итТоварыВЯчейках";
	итWMSСлужебныеПроцедурыИФункции.УстановкаЭлементаБлокировокДанныхWMS(СтруктураПараметров);
	
	#КонецОбласти
	

	БлокировкаДанных.Заблокировать();
	
	
	НаборЗаписей=РегистрыНакопления.итТоварыВЯчейках.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	
	

	
КонецПроцедуры



#Область РаботаСЗадачамиТСД

Процедура РаспределениеДокументаНаЗадачиТСД(Отказ, РежимПроведения)
	ЭтоИзменениеВПроцессеИсполненияДокумента=Ложь;
	МассивСтрокКОбработке=новый Массив;
	Если ТипЗнч(МассивЗадач)=Тип("Массив")   Тогда 
		Если  ТипЗнч(МассивНовыхСтрок)=Тип("Массив") Тогда 
			МассивСтрокКОбработке=МассивНовыхСтрок;
		иначе	
			МассивСтрокКОбработке=ПолучитьСписокИзменяемыхСтрокПоМассивуЗадач(МассивЗадач);
		КонецЕсли;
		ЭтоИзменениеВПроцессеИсполненияДокумента=Истина;
	КонецЕсли;
	ОчиститьСписокЗадач(Отказ,,РежимПроведения);
	Если Отказ Тогда 
		Возврат
	КонецЕсли;	
	НаборЗаписей= РегистрыСведений.итWMSЗадачиТСД.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.НомерСтроки,
	|	итWMSПеремещениеТовары.ИдентификаторСтрокиПредставление КАК ИдентификаторСтроки,
	|	итWMSПеремещениеТовары.ИдентификаторУпаковки,
	|	итWMSПеремещениеТовары.Номенклатура,
	|	итWMSПеремещениеТовары.Характеристика,
	|	итWMSПеремещениеТовары.СерияНоменклатуры,
	|	итWMSПеремещениеТовары.Качество,
	|	итWMSПеремещениеТовары.ДатаРозлива,
	|	итWMSПеремещениеТовары.Количество,
	|	итWMSПеремещениеТовары.КоличествоФакт,
	|	итWMSПеремещениеТовары.ЯчейкаОтправитель,
	|	итWMSПеремещениеТовары.ЯчейкаПолучатель,
	|	итWMSПеремещениеТовары.СостояниеЗадачи,
	|	итWMSПеремещениеТовары.ИдентификаторУпаковкиПолучатель,
	|	итWMSПеремещениеТовары.ПричинаОтменыЗадачи,
	|	итWMSПеремещениеТовары.ФиксацияСтроки
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК итWMSПеремещениеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки,
	|	ВтТовары.ИдентификаторСтроки,
	|	ВтТовары.ИдентификаторУпаковки,
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Характеристика,
	|	ВтТовары.СерияНоменклатуры,
	|	ВтТовары.Качество,
	|	ВтТовары.ДатаРозлива,
	|	ВтТовары.Количество,
	|	ВтТовары.КоличествоФакт,
	|	ВтТовары.ЯчейкаОтправитель,
	|	ВтТовары.ЯчейкаПолучатель,
	|	ВтТовары.СостояниеЗадачи,
	|	ВтТовары.ИдентификаторУпаковкиПолучатель,
	|	ВтТовары.ПричинаОтменыЗадачи,
	|	ВтТовары.ФиксацияСтроки
	|ПОМЕСТИТЬ ВтТоварыОтобранный
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|ГДЕ
	|	НЕ ВтТовары.ФиксацияСтроки
	|	И ВЫБОР
	|			КОГДА &ЭтоИзменениеВПроцессеИсполненияДокумента
	|				ТОГДА ВтТовары.ИдентификаторСтроки В (&МассивСтрокКОбработке)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыОтобранный.ИдентификаторУпаковки,
	|	ВтТоварыОтобранный.Номенклатура,
	|	ВтТоварыОтобранный.Характеристика,
	|	ВтТоварыОтобранный.СерияНоменклатуры,
	|	ВтТоварыОтобранный.Качество,
	|	ВтТоварыОтобранный.ДатаРозлива,
	|	СУММА(ВтТоварыОтобранный.Количество) КАК Количество,
	|	ВтТоварыОтобранный.ЯчейкаПолучатель,
	|	ВтТоварыОтобранный.ЯчейкаОтправитель КАК ЯчейкаОтправитель
	|ПОМЕСТИТЬ ТаблицаАнализаДвиженияТовара
	|ИЗ
	|	ВтТоварыОтобранный КАК ВтТоварыОтобранный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТоварыОтобранный.ИдентификаторУпаковки,
	|	ВтТоварыОтобранный.ЯчейкаПолучатель,
	|	ВтТоварыОтобранный.Номенклатура,
	|	ВтТоварыОтобранный.Характеристика,
	|	ВтТоварыОтобранный.СерияНоменклатуры,
	|	ВтТоварыОтобранный.Качество,
	|	ВтТоварыОтобранный.ДатаРозлива,
	|	ВтТоварыОтобранный.ЯчейкаОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(ТаблицаАнализаДвиженияТовара.ИдентификаторУпаковки, 0)) КАК КоличествоДвиженийПоЯчейкеВДокументе
	|ПОМЕСТИТЬ АнализДвиженийПоЯчейкеПолучателю
	|ИЗ
	|	ТаблицаАнализаДвиженияТовара КАК ТаблицаАнализаДвиженияТовара
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(итТоварыВЯчейкахОстатки.ИдентификаторУпаковки, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьSSCC
	|ПОМЕСТИТЬ АнализНаличияSSCCВЯчейкеПолучатель
	|ИЗ
	|	ТаблицаАнализаДвиженияТовара КАК ТаблицаАнализаДвиженияТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки(, ) КАК итТоварыВЯчейкахОстатки
	|		ПО ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель = итТоварыВЯчейкахОстатки.Ячейка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ИдентификаторУпаковки,
	|	СУММА(ЕСТЬNULL(итТоварыВЯчейкахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.Количество, 0)) КАК ПолеАнализаОстатков,
	|	ВложенныйЗапрос.ЯчейкаПолучатель,
	|	ВложенныйЗапрос.ЯчейкаОтправитель
	|ПОМЕСТИТЬ ТаблицаОтбораПередвиженияНеПолнойПаллеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаАнализаДвиженияТовара.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|		ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель КАК ЯчейкаПолучатель,
	|		ТаблицаАнализаДвиженияТовара.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
	|		СУММА(ТаблицаАнализаДвиженияТовара.Количество) КАК Количество
	|	ИЗ
	|		ТаблицаАнализаДвиженияТовара КАК ТаблицаАнализаДвиженияТовара
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаАнализаДвиженияТовара.ИдентификаторУпаковки,
	|		ТаблицаАнализаДвиженияТовара.ЯчейкаПолучатель,
	|		ТаблицаАнализаДвиженияТовара.ЯчейкаОтправитель) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки(, ) КАК итТоварыВЯчейкахОстатки
	|		ПО ВложенныйЗапрос.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
	|			И ВложенныйЗапрос.ЯчейкаОтправитель = итТоварыВЯчейкахОстатки.Ячейка
	|ГДЕ
	|	ЕСТЬNULL(итТоварыВЯчейкахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ЯчейкаПолучатель,
	|	ВложенныйЗапрос.ЯчейкаОтправитель,
	|	ВложенныйЗапрос.ИдентификаторУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыОтобранный.НомерСтроки,
	|	ВтТоварыОтобранный.ИдентификаторСтроки,
	|	ВтТоварыОтобранный.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВтТоварыОтобранный.Номенклатура,
	|	ВтТоварыОтобранный.Характеристика,
	|	ВтТоварыОтобранный.Качество,
	|	ВтТоварыОтобранный.ДатаРозлива,
	|	ВтТоварыОтобранный.ЯчейкаПолучатель КАК ЯчейкаПолучатель,
	|	ВтТоварыОтобранный.СостояниеЗадачи,
	|	ВтТоварыОтобранный.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
	|	ВтТоварыОтобранный.Количество,
	|	ВтТоварыОтобранный.СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаОтбораПередвиженияНеПолнойПаллеты.ИдентификаторУпаковки ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НеПолнаяПаллета,
	|	ТаблицаОтбораПередвиженияНеПолнойПаллеты.ПолеАнализаОстатков КАК ПолеАнализаОстатков,
	|	ВЫБОР
	|		КОГДА АнализДвиженийПоЯчейкеПолучателю.КоличествоДвиженийПоЯчейкеВДокументе > 1
	|				ИЛИ АнализНаличияSSCCВЯчейкеПолучатель.ЕстьSSCC = 1
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВЯчейкеПолучательМожетБытьSSCCПолучатель
	|ИЗ
	|	ВтТоварыОтобранный КАК ВтТоварыОтобранный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтбораПередвиженияНеПолнойПаллеты КАК ТаблицаОтбораПередвиженияНеПолнойПаллеты
	|		ПО ВтТоварыОтобранный.ИдентификаторУпаковки = ТаблицаОтбораПередвиженияНеПолнойПаллеты.ИдентификаторУпаковки
	|			И ВтТоварыОтобранный.ЯчейкаПолучатель = ТаблицаОтбораПередвиженияНеПолнойПаллеты.ЯчейкаПолучатель
	|			И ВтТоварыОтобранный.ЯчейкаОтправитель = ТаблицаОтбораПередвиженияНеПолнойПаллеты.ЯчейкаОтправитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ АнализДвиженийПоЯчейкеПолучателю КАК АнализДвиженийПоЯчейкеПолучателю
	|		ПО ВтТоварыОтобранный.ЯчейкаПолучатель = АнализДвиженийПоЯчейкеПолучателю.ЯчейкаПолучатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ АнализНаличияSSCCВЯчейкеПолучатель КАК АнализНаличияSSCCВЯчейкеПолучатель
	|		ПО ВтТоварыОтобранный.ЯчейкаПолучатель = АнализНаличияSSCCВЯчейкеПолучатель.ЯчейкаПолучатель
	|ИТОГИ
	|	МАКСИМУМ(НеПолнаяПаллета),
	|	МАКСИМУМ(ПолеАнализаОстатков),
	|	МАКСИМУМ(ВЯчейкеПолучательМожетБытьSSCCПолучатель)
	|ПО
	|	ИдентификаторУпаковки,
	|	ЯчейкаОтправитель,
	|	ЯчейкаПолучатель";
	ТоварыКПреобразованию=Товары.Выгрузить();
	итWMSСлужебныеПроцедурыИФункции.ПреобразоватьТаблицуСИдентификаторамиДляЧтенияЗапроса(ТоварыКПреобразованию);
	Запрос.УстановитьПараметр("Товары",ТоварыКПреобразованию);
	Запрос.УстановитьПараметр("ЭтоИзменениеВПроцессеИсполненияДокумента",ЭтоИзменениеВПроцессеИсполненияДокумента);
	Запрос.УстановитьПараметр("МассивСтрокКОбработке",МассивСтрокКОбработке);
	//Запрос.УстановитьПараметр("Период",Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИдентификаторУпаковки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаИдентификаторУпаковки.Следующий() Цикл
		ВыборкаПоЯчейкаОтправителю = ВыборкаИдентификаторУпаковки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока  ВыборкаПоЯчейкаОтправителю.Следующий() цикл
			ВыборкаПоЯчейкамНазначения=ВыборкаПоЯчейкаОтправителю.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоЯчейкамНазначения.Следующий() Цикл 
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.ДокументОснование=Ссылка;
				НоваяЗапись.ИдЗадачи=новый УникальныйИдентификатор;
				НоваяЗапись.ИдентификаторУпаковки=ВыборкаИдентификаторУпаковки.ИдентификаторУпаковки;
				НоваяЗапись.ЯчейкаПолучатель=ВыборкаПоЯчейкамНазначения.ЯчейкаПолучатель;
				НоваяЗапись.ЯчейкаОтправитель=ВыборкаПоЯчейкаОтправителю.ЯчейкаОтправитель;
				НоваяЗапись.ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.Перемещение;
				НоваяЗапись.Состояние=Перечисления.итWMSСостоянияЗадачТСД.КВыполнению;
				СтруктураДополнительныхДанных=новый Структура;
				СтруктураДополнительныхДанных.Вставить("ДвижениеНеЦелойПаллеты",ВыборкаПоЯчейкамНазначения.НеПолнаяПаллета);
				СтруктураДополнительныхДанных.Вставить("ВЯчейкеПолучательМожетБытьSSCCПолучатель",ВыборкаПоЯчейкамНазначения.ВЯчейкеПолучательМожетБытьSSCCПолучатель);
				НоваяЗапись.ДополнительныеДанные = новый ХранилищеЗначения(СтруктураДополнительныхДанных);
				ВыборкаДетальныеЗаписи = ВыборкаПоЯчейкамНазначения.Выбрать();
				ЗаполнитьСтрокиЗадачиТСД(Отказ, РежимПроведения,НоваяЗапись.ИдЗадачи,ВыборкаДетальныеЗаписи);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьСтрокиЗадачиТСД(Отказ, РежимПроведения,ИдЗадачи,ВыборкаДетальныеЗаписи)
	БлокировкаДанных = новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.итWMSСтрокиЗадачТСД");
	ЭлементБлокировки.Режим=РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("ИдЗадачи",ИдЗадачи);
	БлокировкаДанных.Заблокировать();
	НаборЗаписей= РегистрыСведений.итWMSСтрокиЗадачТСД.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдЗадачи.Установить(ИдЗадачи);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		НоваяЗапись=НаборЗаписей.Добавить();
		НоваяЗапись.ИдЗадачи=ИдЗадачи;
		НоваяЗапись.идСтроки=новый УникальныйИдентификатор(ВыборкаДетальныеЗаписи.ИдентификаторСтроки);
		НоваяЗапись.ДатаРозлива= ВыборкаДетальныеЗаписи.ДатаРозлива;
		НоваяЗапись.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяЗапись.СерияНоменклатуры=ВыборкаДетальныеЗаписи.СерияНоменклатуры;
		НоваяЗапись.Количество=ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры


#КонецОбласти

Функция ЭтоИзменениеРаспределенногоДокумента()
	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределен и ТипЗнч(МассивЗадач)=Тип("Массив") Тогда 
		Возврат Истина;
	КонецЕсли;
	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределен и ТипЗнч(МассивНовыхСтрок)=Тип("Массив") Тогда 
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

Процедура ПроведениеПоРезервированиюЯчеек(Отказ, РежимПроведения,СнятиеСРезерва=Ложь)
	ТоварывЯчейкахРезерв=Движения.итТоварыВЯчейках;
	Если Отказ Тогда 
		Возврат
	КонецЕсли;
	РезервированиеТоваровВЯчейкахЯчейкаОтправитель(Отказ, РежимПроведения,СнятиеСРезерва);
	РезервированиеТоваровВЯчейкахЯчейкаПолучатель(Отказ, РежимПроведения,СнятиеСРезерва);
	ТоварывЯчейкахРезерв.Записать();
КонецПроцедуры

Процедура РезервированиеТоваровВЯчейкахЯчейкаОтправитель(Отказ, РежимПроведения,СнятиеСРезерва)
	/////+++++Явное определение параметров в процедуре	
	ТоварывЯчейкахРезерв=Движения.итТоварыВЯчейках;
	КачествоПустаяСсылка=Справочники.Качество.ПустаяСсылка();
	КачествоНовый=Справочники.Качество.Новый;
	ЯчейкаПустаяСсылка=Справочники.итСкладскиеЯчейки.ПустаяСсылка();
	/////----------------------
	для Каждого стр из Товары цикл
		Если СнятиеСРезерва и не стр.ФиксацияСтроки Тогда 
			Продолжить;
		КонецЕсли;	
		Если стр.ЯчейкаПолучатель=ЯчейкаПустаяСсылка тогда
			Продолжить;
		КонецЕсли;	
		НоваяЗапись=ТоварывЯчейкахРезерв.Добавить();
		НоваяЗапись.Период=?(стр.ДатаИсполнения='00010101',Дата,стр.ДатаИсполнения);
		НоваяЗапись.Ячейка=стр.ЯчейкаОтправитель;
		НоваяЗапись.Организация=Организация;
		Если СнятиеСРезерва тогда
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
		иначе
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
		КонецЕсли;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозлива;
		НоваяЗапись.Характеристика=стр.Характеристика;
		НоваяЗапись.Качество=?(стр.Качество=КачествоПустаяСсылка,КачествоНовый,стр.Качество);
		НоваяЗапись.КОтбору=стр.Количество;
		НоваяЗапись.Склад=СкладОтправитель;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
	КонецЦикла;
КонецПроцедуры

Процедура РезервированиеТоваровВЯчейкахЯчейкаПолучатель(Отказ, РежимПроведения,СнятиеСРезерва)
	/////+++++Явное определение параметров в процедуре	
	ТоварывЯчейкахРезерв=Движения.итТоварыВЯчейках;
	КачествоПустаяСсылка=Справочники.Качество.ПустаяСсылка();
	КачествоНовый=Справочники.Качество.Новый;
	ЯчейкаПустаяСсылка=Справочники.итСкладскиеЯчейки.ПустаяСсылка();
	/////----------------------
	
	для Каждого стр из Товары цикл
		Если СнятиеСРезерва и не стр.ФиксацияСтроки Тогда 
			Продолжить;
		КонецЕсли;	
		Если стр.ЯчейкаПолучатель=ЯчейкаПустаяСсылка тогда
			Продолжить;
		КонецЕсли;	
		НоваяЗапись=ТоварывЯчейкахРезерв.Добавить();
		НоваяЗапись.Период=?(стр.ДатаИсполнения='00010101',Дата,стр.ДатаИсполнения);
		НоваяЗапись.Ячейка=стр.ЯчейкаПолучатель;
		НоваяЗапись.Организация=Организация;
		Если СнятиеСРезерва тогда
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
		иначе
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
		КонецЕсли;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.Характеристика=стр.Характеристика;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозлива;
		НоваяЗапись.Качество=?(стр.Качество=КачествоПустаяСсылка,КачествоНовый,стр.Качество);
		НоваяЗапись.КРазмещению=стр.Количество;
		НоваяЗапись.Склад=СкладПолучатель;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения)
	ПроведениеПоРезервированиюЯчеек(Отказ, РежимПроведения,Истина);
	ПроведениеПоТоварамВЯчейках(Отказ, РежимПроведения);
КонецПроцедуры

Процедура ПроведениеПоТоварамВЯчейках(Отказ, РежимПроведения)
	
	итТоварыВЯчейках=Движения.итТоварыВЯчейках;
	//итТоварыВЯчейках.Очистить();
	ЗадачаВыполнена=Перечисления.итWMSСостоянияЗадачТСД.Выполнена;
	КачествоПустаяСсылка=Справочники.Качество.ПустаяСсылка();
	КачествоНовый=Справочники.Качество.Новый;
	
	
	для Каждого стр из Товары цикл
		Если стр.СостояниеЗадачи<>ЗадачаВыполнена или не стр.ФиксацияСтроки тогда
			Продолжить;
		КонецЕсли;	
		///движение Приход
		НоваяЗапись=итТоварыВЯчейках.Добавить();
		НоваяЗапись.Организация=Организация;
		НоваяЗапись.Характеристика=стр.Характеристика;
		НоваяЗапись.Период=?(стр.ДатаИсполнения='00010101',Дата,стр.ДатаИсполнения);
		НоваяЗапись.Ячейка=стр.ЯчейкаПолучатель;
		НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковкиПолучатель;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозлива;
		НоваяЗапись.Качество=?(стр.Качество=КачествоПустаяСсылка,КачествоНовый,стр.Качество);
		НоваяЗапись.Количество=стр.КоличествоФакт;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
		НоваяЗапись.Склад=СкладПолучатель;
		/// движение Расход
		НоваяЗапись=итТоварыВЯчейках.Добавить();
		НоваяЗапись.Период=?(стр.ДатаИсполнения='00010101',Дата,стр.ДатаИсполнения);
		НоваяЗапись.Характеристика=стр.Характеристика;
		НоваяЗапись.Ячейка=стр.ЯчейкаОтправитель;
		НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозлива;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
		НоваяЗапись.Качество=?(стр.Качество=КачествоПустаяСсылка,КачествоНовый,стр.Качество);
		НоваяЗапись.Количество=стр.КоличествоФакт;
		НоваяЗапись.Организация=Организация;
		НоваяЗапись.Склад=СкладОтправитель;
	КонецЦикла;
	итТоварыВЯчейках.Записать();
КонецПроцедуры




Процедура ОбработчикОснованияПриПроведенииДокумента(Отказ, РежимПроведения)
	Если ТипЗнч(итОснование)=тип("ДокументСсылка.итWMSНаборка") тогда
		Если (итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется
			или итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Зарезервирован) и ПеремещениеВПикинг Тогда 
			ИзмененияОбъекта=Ложь;
			ОбъектДляИзменения=итОснование.ПолучитьОбъект();
			ОбъектДляИзменения.ПроведениеПеремещением=Истина;
			ОбъектДляИзменения.Дата=ТекущаяДата();
			ОбъектДляИзменения.ПривилигированноеПроведение=ПривилигированноеПроведение;
			для Каждого Строка из Товары цикл
				
				Если Строка.СостояниеЗадачи=Перечисления.итWMSСостоянияЗадачТСД.Выполнена  Тогда 					
					МассивСтрокНаборки=ОбъектДляИзменения.Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки,ЯчейкаОтправитель",Строка.ИдентификаторУпаковки,Строка.ЯчейкаОтправитель));
					для Каждого стр из МассивСтрокНаборки цикл
						Если не стр.ФиксацияСтроки Тогда 
							Если стр.ЯчейкаПикинга<>Строка.ЯчейкаПолучатель Тогда
							стр.ЯчейкаПикинга=Строка.ЯчейкаПолучатель;
							ИзмененияОбъекта=Истина;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;		
			КонецЦикла;
			Если ИзмененияОбъекта Тогда
				ОбъектДляИзменения.Записать();
			КонецЕсли;
		КонецЕсли;
		Если (итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Выполнен
			или итОснование.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.ВыполненСОшибкой) и не ПеремещениеВПикинг и не ИзъятиеТовараИзНаборки
			Тогда 
			ИзмененияОбъекта=Ложь;
			ОбъектДляИзменения=итОснование.ПолучитьОбъект();
			ОбъектДляИзменения.ПроведениеПеремещением=Истина;
			Если ОбъектДляИзменения.СтатусДокумента<>Перечисления.итWMSСтатусыСкладскихДокументов.Завершен Тогда
			ОбъектДляИзменения.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен;
			ИзмененияОбъекта=Истина;
			КонецЕсли;
			ОбъектДляИзменения.ПривилигированноеПроведение=ПривилигированноеПроведение;
			Если ИзмененияОбъекта Тогда
				ОбъектДляИзменения.Записать();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры


Процедура ПроверкаНаСоответсвиеДанныхЯчеек(Отказ, РежимПроведения)
	Если ПривилигированноеПроведение Тогда 
		Возврат
	КонецЕсли;	

	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	итWMSПеремещениеТовары.ИдентификаторУпаковки,
		|	итWMSПеремещениеТовары.Номенклатура,
		|	итWMSПеремещениеТовары.СерияНоменклатуры,
		|	итWMSПеремещениеТовары.ЯчейкаОтправитель,
		|	итWMSПеремещениеТовары.ЯчейкаПолучатель,
		|	итWMSПеремещениеТовары.ФиксацияСтроки,
		|	итWMSПеремещениеТовары.Количество,
		|	итWMSПеремещениеТовары.Ссылка.Организация,
		|	итWMSПеремещениеТовары.Ссылка.СкладОтправитель,
		|	итWMSПеремещениеТовары.Ссылка.СкладПолучатель,
		|	итWMSПеремещениеТовары.Характеристика,
		|	ВЫБОР
		|		КОГДА итWMSПеремещениеТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|		ИНАЧЕ итWMSПеремещениеТовары.Качество
		|	КОНЕЦ КАК Качество
		|ПОМЕСТИТЬ ВтПеремещение
		|ИЗ
		|	Документ.итWMSПеремещение.Товары КАК итWMSПеремещениеТовары
		|ГДЕ
		|	итWMSПеремещениеТовары.Ссылка = &Ссылка
		|	И итWMSПеремещениеТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итWMSСостоянияЗадачТСД.Отменена)
		|;
		|
		|
		|
		|
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итТоварыВЯчейкахОстатки.Организация,
		|	итТоварыВЯчейкахОстатки.Склад,
		|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки,
		|	итТоварыВЯчейкахОстатки.Ячейка,
		|	итТоварыВЯчейкахОстатки.Номенклатура,
		|	итТоварыВЯчейкахОстатки.Характеристика,
		|	итТоварыВЯчейкахОстатки.СерияНоменклатуры,
		|	итТоварыВЯчейкахОстатки.ДатаРозлива,
		|	итТоварыВЯчейкахОстатки.Качество,
		|	ЕСТЬNULL(итТоварыВЯчейкахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(итТоварыВЯчейкахОстатки.КОтборуОстаток, 0) КАК КОтборуОстаток,
		|	ЕСТЬNULL(итТоварыВЯчейкахОстатки.КРазмещениюОстаток, 0) КАК КРазмещениюОстаток,
		|	ЕСТЬNULL(итТоварыВЯчейкахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(итТоварыВЯчейкахОстатки.КОтборуОстаток, 0) КАК
		|		ОстатокВЯчейкеОтправителе
		|ИЗ
		|	ВтПеремещение КАК ВтПеремещение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки(&ПериодПосле,) КАК итТоварыВЯчейкахОстатки
		|		ПО ВтПеремещение.Организация = итТоварыВЯчейкахОстатки.Организация
		|		И ВтПеремещение.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
		|		И ВтПеремещение.СкладОтправитель = итТоварыВЯчейкахОстатки.Склад
		|		И ВтПеремещение.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
		|		И ВтПеремещение.ЯчейкаОтправитель = итТоварыВЯчейкахОстатки.Ячейка
		|		И ВтПеремещение.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
		|		И ВтПеремещение.Характеристика = итТоварыВЯчейкахОстатки.Характеристика
		|		И ВЫБОР
		|			КОГДА ВтПеремещение.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|			ИНАЧЕ ВтПеремещение.Качество
		|		КОНЕЦ = итТоварыВЯчейкахОстатки.Качество
		|ГДЕ
		|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток < 0
		|;
		|
		|
		|
		|
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.ЯчейкаПолучатель,
		|	СУММА((ЕСТЬNULL(итТоварыВЯчейкахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(итТоварыВЯчейкахОстатки.КРазмещениюОстаток,
		|		0)) / ВЫБОР
		|		КОГДА итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
		|			ТОГДА 1
		|		ИНАЧЕ итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
		|	КОНЕЦ) КАК ПаллетыОстаток,
		|	МАКСИМУМ(ВложенныйЗапрос.ЯчейкаПолучатель.КоличествоПалет) КАК КоличествоПалет
		|ПОМЕСТИТЬ РассчетЗанятыхПаллетомест
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВтПеремещение.ЯчейкаПолучатель
		|	ИЗ
		|		ВтПеремещение КАК ВтПеремещение
		|	СГРУППИРОВАТЬ ПО
		|		ВтПеремещение.ЯчейкаПолучатель) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
		|		ПО ВложенныйЗапрос.ЯчейкаПолучатель = итТоварыВЯчейкахОстатки.Ячейка
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ЯчейкаПолучатель
		|;
		|
		|
		|
		|
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РассчетЗанятыхПаллетомест.ЯчейкаПолучатель,
		|	РассчетЗанятыхПаллетомест.КоличествоПалет,
		|	РассчетЗанятыхПаллетомест.ПаллетыОстаток,
		|	РассчетЗанятыхПаллетомест.ПаллетыОстаток - РассчетЗанятыхПаллетомест.КоличествоПалет КАК НедостающиеПаллетоМеста
		|ИЗ
		|	РассчетЗанятыхПаллетомест КАК РассчетЗанятыхПаллетомест
		|ГДЕ
		|	РассчетЗанятыхПаллетомест.ПаллетыОстаток > РассчетЗанятыхПаллетомест.КоличествоПалет";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодПосле", новый Граница(новый МоментВремени(Дата,Ссылка),ВидГраницы.Включая));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаЯчеекОтправителей=МассивРезультатов[1].Выбрать();
	ВыборкаЯчеекПолучателей=МассивРезультатов[3].Выбрать();
	
	Пока ВыборкаЯчеекОтправителей.Следующий() Цикл
		Сообщить("В идентификаторе "+ВыборкаЯчеекОтправителей.ИдентификаторУпаковки+" не хватает номенклатуры "+ВыборкаЯчеекОтправителей.Номенклатура+
		" серии "+ВыборкаЯчеекОтправителей.СерияНоменклатуры+" с кодом "+ВыборкаЯчеекОтправителей.СерияНоменклатуры.Код+" в количестве "+(-ВыборкаЯчеекОтправителей.ОстатокВЯчейкеОтправителе));
		Отказ=Истина;
	КонецЦикла;
	
	Пока ВыборкаЯчеекПолучателей.Следующий() Цикл
	Сообщить("В ячейке "+ВыборкаЯчеекПолучателей.ЯчейкаПолучатель+" превышено количество паллетомест на "+ВыборкаЯчеекПолучателей.НедостающиеПаллетоМеста);	
	Отказ=Истина;
	КонецЦикла;
	
	КонецПроцедуры

Процедура УдалитьДвиженияНаборкиПоРезервированию() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSПеремещениеТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		|	итWMSПеремещениеТовары.ЯчейкаОтправитель КАК ЯчейкаОтправитель
		|ПОМЕСТИТЬ ВтДанныеПеремещения
		|ИЗ
		|	Документ.итWMSПеремещение.Товары КАК итWMSПеремещениеТовары
		|ГДЕ
		|	итWMSПеремещениеТовары.Ссылка = &Ссылка
		|	И итWMSПеремещениеТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итwmsСостоянияЗадачТСД.Отменена)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итТоварыВЯчейках.Организация КАК Организация,
		|	итТоварыВЯчейках.Склад КАК Склад,
		|	итТоварыВЯчейках.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		|	итТоварыВЯчейках.Ячейка КАК Ячейка,
		|	итТоварыВЯчейках.Номенклатура КАК Номенклатура,
		|	итТоварыВЯчейках.Характеристика КАК Характеристика,
		|	итТоварыВЯчейках.СерияНоменклатуры КАК СерияНоменклатуры,
		|	итТоварыВЯчейках.ДатаРозлива КАК ДатаРозлива,
		|	итТоварыВЯчейках.Качество КАК Качество,
		|	итТоварыВЯчейках.Количество КАК Количество,
		|	итТоварыВЯчейках.КОтбору КАК КОтбору,
		|	итТоварыВЯчейках.КРазмещению КАК КРазмещению,
		|	итТоварыВЯчейках.Регистратор КАК Регистратор,
		|	итТоварыВЯчейках.ВидДвижения КАК ВидДвижения,
		|	итТоварыВЯчейках.Период КАК Период
		|ПОМЕСТИТЬ ДвиженияНаборки
		|ИЗ
		|	РегистрНакопления.итТоварыВЯчейках КАК итТоварыВЯчейках
		|ГДЕ
		|	итТоварыВЯчейках.Регистратор = &Наборка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияНаборки.Организация КАК Организация,
		|	ДвиженияНаборки.Склад КАК Склад,
		|	ДвиженияНаборки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		|	ДвиженияНаборки.Ячейка КАК Ячейка,
		|	ДвиженияНаборки.Номенклатура КАК Номенклатура,
		|	ДвиженияНаборки.Характеристика КАК Характеристика,
		|	ДвиженияНаборки.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ДвиженияНаборки.ДатаРозлива КАК ДатаРозлива,
		|	ДвиженияНаборки.Качество КАК Качество,
		|	ДвиженияНаборки.Количество КАК Количество,
		|	ДвиженияНаборки.КОтбору КАК КОтбору,
		|	ДвиженияНаборки.КРазмещению КАК КРазмещению,
		|	ДвиженияНаборки.Регистратор КАК Регистратор,
		|	ДвиженияНаборки.ВидДвижения КАК ВидДвижения,
		|	ДвиженияНаборки.Период КАК Период
		|ИЗ
		|	ДвиженияНаборки КАК ДвиженияНаборки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеПеремещения КАК ВтДанныеПеремещения
		|		ПО ДвиженияНаборки.ИдентификаторУпаковки = ВтДанныеПеремещения.ИдентификаторУпаковки
		|			И ДвиженияНаборки.Ячейка = ВтДанныеПеремещения.ЯчейкаОтправитель
		|ГДЕ
		|	ВтДанныеПеремещения.ИдентификаторУпаковки ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДвиженияНаборки.Организация КАК Организация,
		|	ДвиженияНаборки.Склад КАК Склад,
		|	ДвиженияНаборки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		|	ДвиженияНаборки.Ячейка КАК Ячейка,
		|	ДвиженияНаборки.Номенклатура КАК Номенклатура,
		|	ДвиженияНаборки.Характеристика КАК Характеристика,
		|	ДвиженияНаборки.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ДвиженияНаборки.ДатаРозлива КАК ДатаРозлива,
		|	ДвиженияНаборки.Качество КАК Качество,
		|	ДвиженияНаборки.Количество КАК Количество,
		|	ДвиженияНаборки.КОтбору КАК КОтбору,
		|	ДвиженияНаборки.КРазмещению КАК КРазмещению,
		|	ДвиженияНаборки.Регистратор КАК Регистратор,
		|	ДвиженияНаборки.ВидДвижения КАК ВидДвижения,
		|	ДвиженияНаборки.Период КАК Период
		|ИЗ
		|	ДвиженияНаборки КАК ДвиженияНаборки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеПеремещения КАК ВтДанныеПеремещения
		|		ПО ДвиженияНаборки.ИдентификаторУпаковки = ВтДанныеПеремещения.ИдентификаторУпаковки
		|			И ДвиженияНаборки.Ячейка = ВтДанныеПеремещения.ЯчейкаОтправитель
		|ГДЕ
		|	НЕ ВтДанныеПеремещения.ИдентификаторУпаковки ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Наборка", итОснование);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Если не МассивРезультатов[3].Пустой() Тогда 
	
	
	
	ВыборкаДетальныеЗаписи = МассивРезультатов[2].Выбрать();
	НаборЗаписей=РегистрыНакопления.итТоварыВЯчейках.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(итОснование);  
	НаборЗаписей.Прочитать(); 
	НаборЗаписей.Очистить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяЗапись=НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,ВыборкаДетальныеЗаписи);	
	КонецЦикла; 
	НаборЗаписей.Записать();
		
	КонецЕсли;	
	КонецПроцедуры


#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

Процедура ОчиститьСписокЗадач(Отказ,РежимЗаписи=Неопределено,РежимПроведения)
	
	БлокировкаДанных = новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.итWMSЗадачиТСД");
	ЭлементБлокировки.Режим=РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("ДокументОснование",Ссылка);
	БлокировкаДанных.Заблокировать();
	СтатусДокументаРаспределен=Ложь;
	Если СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределен тогда
		СтатусДокументаРаспределен=Истина;
		ДанныеОбхода=МассивЗадач;
	иначе
		НаборЗаписей= РегистрыСведений.итWMSЗадачиТСД.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументОснование.Установить(Ссылка);
		НаборЗаписей.Прочитать();
		ДанныеОбхода=НаборЗаписей;
	КонецЕсли;
	МассивЗафиксированныхЗадач=ПолучитьЗафиксированныйМассивЗадач();
	для Каждого стр из ДанныеОбхода цикл
		Если МассивЗафиксированныхЗадач.Найти(стр.ИдЗадачи)<> Неопределено Тогда 
			Продолжить;
		КонецЕсли;	
		///////////////////////Очистка Задач построчно
		НаборЗаписей_1=РегистрыСведений.итWMSЗадачиТСД.СоздатьНаборЗаписей();
		НаборЗаписей_1.Отбор.ДокументОснование.Установить(Ссылка);
		НаборЗаписей_1.Отбор.ИдЗадачи.Установить(стр.ИдЗадачи);
		НаборЗаписей_1.Прочитать();
		Если СтатусДокументаРаспределен Тогда 
			для Каждого стр из НаборЗаписей_1 цикл
				Если  не стр.ТСД=Справочники.итWMSСправочникТСД.ПустаяСсылка()  Тогда
					Сообщить("Задача распределена и исправлена быть не может");
					Отказ =Истина;
					Возврат
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		НаборЗаписей_1.Очистить();
		НаборЗаписей_1.Записать();
		
		////////////////////Очистка Строк Задач
		НаборЗаписей_2=РегистрыСведений.итWMSСтрокиЗадачТСД.СоздатьНаборЗаписей();
		НаборЗаписей_2.Отбор.ИдЗадачи.Установить(стр.ИдЗадачи);
		НаборЗаписей_2.Прочитать();
		НаборЗаписей_2.Очистить();
		НаборЗаписей_2.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьДанныеПомарочногоУчета()
	НаборЗаписей=РегистрыСведений.итWMS_АгрегацияМарок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	НаборЗаписей2=РегистрыСведений.итWMS_МаркиВОбработке.СоздатьНаборЗаписей();
	НаборЗаписей2.Отбор.ДокументОснование.Установить(Ссылка);
	НаборЗаписей2.Прочитать();
	НаборЗаписей2.Очистить();
	НаборЗаписей2.Записать();
КонецПроцедуры

Функция ПолучитьСписокИзменяемыхСтрокПоМассивуЗадач(МассивЗадачПоиска)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSСтрокиЗадачТСД.идСтроки
	|ИЗ
	|	РегистрСведений.итWMSСтрокиЗадачТСД КАК итWMSСтрокиЗадачТСД
	|ГДЕ
	|	итWMSСтрокиЗадачТСД.ИдЗадачи В(&МассивЗадач)";
	
	Запрос.УстановитьПараметр("МассивЗадач", МассивЗадачПоиска);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивСтрокКОбработке=новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивСтрокКОбработке.Добавить(Строка(ВыборкаДетальныеЗаписи.идСтроки));
	КонецЦикла;
	Возврат МассивСтрокКОбработке;	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции



Функция ПолучитьЗафиксированныйМассивЗадач()

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТстроки
	|ИЗ
	|	Документ.итWMSПеремещение.Товары КАК итWMSПеремещениеТовары
	|ГДЕ
	|	итWMSПеремещениеТовары.ФиксацияСтроки
	|	И итWMSПеремещениеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSПеремещениеТовары.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итWMSЗадачиТСД.ИдЗадачи
	|ПОМЕСТИТЬ ВТзадачи
	|ИЗ
	|	РегистрСведений.итWMSЗадачиТСД КАК итWMSЗадачиТСД
	|ГДЕ
	|	итWMSЗадачиТСД.ДокументОснование = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSЗадачиТСД.ИдЗадачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итWMSСтрокиЗадачТСД.ИдЗадачи
	|ПОМЕСТИТЬ ИзЗдачаСтроки
	|ИЗ
	|	ВТстроки КАК ВТстроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.итWMSСтрокиЗадачТСД КАК итWMSСтрокиЗадачТСД
	|		ПО ВТстроки.ИдентификаторСтроки = итWMSСтрокиЗадачТСД.идСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSСтрокиЗадачТСД.ИдЗадачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТзадачи.ИдЗадачи
	|ИЗ
	|	ВТзадачи КАК ВТзадачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзЗдачаСтроки КАК ИзЗдачаСтроки
	|		ПО ВТзадачи.ИдЗадачи = ИзЗдачаСтроки.ИдЗадачи";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("ИдЗадачи");	
КонецФункции




#КонецОбласти





#Область ПоискЯчейкиПикинга
Процедура ЗаполнитьПеремещениеВПикинг()Экспорт
	СтратегияПоискаЯчейкиПикинга=СтрагеияПоискаЯчейкиПикингда();
	//@skip-warning
	НастройкиWMS=итWMSПривилегированныйМодуль.ПолучитьНастройкиИзХранилищаПоСвойствам("ЯчейкиИсключенияАвтоматическогоРазмещения");
	Выполнить(СтратегияПоискаЯчейкиПикинга.ИмяМетода);	
КонецПроцедуры

//@skip-warning
Процедура НайтиЯчейкуПикингаВРазрезеТерриторииСклада(НастройкиWMS)
	ЭтоДобавлениеНовыхСтрокВПроцессе=Ложь;
	Если ТипЗнч(МассивНовыхСтрок)=Тип("Массив") Тогда
		ЭтоДобавлениеНовыхСтрокВПроцессе=Истина;
	КонецЕсли;	
	ЯчейкиИсключенияАвтоматическогоРазмещения=НастройкиWMS.ЯчейкиИсключенияАвтоматическогоРазмещения.ВыгрузитьКолонку("Ячейка");
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст=ТекстЗапросаПоискаСвободныхЯчеекПикингаДляЯчеекОтправителей();	
	ТоварыКПреобразованию=Товары.Выгрузить();
	итWMSСлужебныеПроцедурыИФункции.ПреобразоватьТаблицуСИдентификаторамиДляЧтенияЗапроса(ТоварыКПреобразованию);
	Запрос.УстановитьПараметр("Товары",ТоварыКПреобразованию); 
	Запрос.УстановитьПараметр("ЭтоДобавлениеНовыхСтрокВПроцессе",ЭтоДобавлениеНовыхСтрокВПроцессе);
	Запрос.УстановитьПараметр("МассивНовыхСтрок",?(ЭтоДобавлениеНовыхСтрокВПроцессе,МассивНовыхСтрок,новый Массив));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ЯчейкиИсключенияАвтоматическогоРазмещения",ЯчейкиИсключенияАвтоматическогоРазмещения);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивЗарезервированныхЯчеек=новый Массив;	
	МассивСтрокКУдалению=новый Массив; ////////---дописание позволяющее пополнить сток, на сколько возможно
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ячейка=НайтиБлижайшуюЯчейкуПикингаПоТерриторииСклада(МассивЗарезервированныхЯчеек,ВыборкаДетальныеЗаписи.ЯчейкаОтправитель,МенеджерВременныхТаблиц);
		Если Ячейка.Пустая() тогда
			Сообщить("для ячейки "+ВыборкаДетальныеЗаписи.ЯчейкаОтправитель+" не найдена ячейка пикинга");
			Если ПополнениеСтока Тогда ////////---дописание позволяющее пополнить сток, на сколько возможно
				МассивСтрок=Товары.НайтиСтроки(новый Структура("ЯчейкаОтправитель",ВыборкаДетальныеЗаписи.ЯчейкаОтправитель));
				Для  Каждого стр из МассивСтрок цикл
					МассивСтрокКУдалению.Добавить(стр);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		МассивСтрокКИзменения=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаДетальныеЗаписи.ИдентификаторУпаковки));
		для Каждого стр из МассивСтрокКИзменения цикл
			стр.ЯчейкаПолучатель=Ячейка;
		КонецЦикла;
		МассивЗарезервированныхЯчеек.Добавить(Ячейка);
	КонецЦикла;
	////////---дописание позволяющее пополнить сток, на сколько возможно
	Для Каждого стр из МассивСтрокКУдалению цикл
		Товары.Удалить(стр);
	КонецЦикла;	
КонецПроцедуры

//@skip-warning
Процедура НайтиЯчейкуПикингаТиповая(НастройкиWMS)
	ЭтоДобавлениеНовыхСтрокВПроцессе=Ложь;
	Если ТипЗнч(МассивНовыхСтрок)=Тип("Массив") Тогда
		ЭтоДобавлениеНовыхСтрокВПроцессе=Истина;
	КонецЕсли;	
	ЯчейкиИсключенияАвтоматическогоРазмещения=НастройкиWMS.ЯчейкиИсключенияАвтоматическогоРазмещения.ВыгрузитьКолонку("Ячейка");
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст=ТекстЗапросаПоискаСвободныхЯчеекПикингаДляЯчеекОтправителей();	
	ТоварыКПреобразованию=Товары.Выгрузить();
	итWMSСлужебныеПроцедурыИФункции.ПреобразоватьТаблицуСИдентификаторамиДляЧтенияЗапроса(ТоварыКПреобразованию);
	Запрос.УстановитьПараметр("Товары",ТоварыКПреобразованию); 
	Запрос.УстановитьПараметр("ЭтоДобавлениеНовыхСтрокВПроцессе",ЭтоДобавлениеНовыхСтрокВПроцессе);
	Запрос.УстановитьПараметр("МассивНовыхСтрок",?(ЭтоДобавлениеНовыхСтрокВПроцессе,МассивНовыхСтрок,новый Массив));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ЯчейкиИсключенияАвтоматическогоРазмещения",ЯчейкиИсключенияАвтоматическогоРазмещения);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивЗарезервированныхЯчеек=новый Массив;	
	МассивСтрокКУдалению=новый Массив; ////////---дописание позволяющее пополнить сток, на сколько возможно
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ячейка=НайтиБлижайшуюЯчейкуПикинга(МассивЗарезервированныхЯчеек,ВыборкаДетальныеЗаписи.ЯчейкаОтправитель,МенеджерВременныхТаблиц);
		Если Ячейка.Пустая() тогда
			Сообщить("для ячейки "+ВыборкаДетальныеЗаписи.ЯчейкаОтправитель+" не найдена ячейка пикинга");
			Если ПополнениеСтока Тогда ////////---дописание позволяющее пополнить сток, на сколько возможно
				МассивСтрок=Товары.НайтиСтроки(новый Структура("ЯчейкаОтправитель",ВыборкаДетальныеЗаписи.ЯчейкаОтправитель));
				Для  Каждого стр из МассивСтрок цикл
					МассивСтрокКУдалению.Добавить(стр);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		МассивСтрокКИзменения=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаДетальныеЗаписи.ИдентификаторУпаковки));
		для Каждого стр из МассивСтрокКИзменения цикл
			стр.ЯчейкаПолучатель=Ячейка;
		КонецЦикла;
		МассивЗарезервированныхЯчеек.Добавить(Ячейка);
	КонецЦикла;
	////////---дописание позволяющее пополнить сток, на сколько возможно
	Для Каждого стр из МассивСтрокКУдалению цикл
		Товары.Удалить(стр);
	КонецЦикла;
	
	
	
КонецПроцедуры

//@skip-warning
Процедура НайтиЯчейкуПикингаВРазрезеАссортиметногоУчастка(НастройкиWMS)
	ЭтоДобавлениеНовыхСтрокВПроцессе=Ложь;
	Если ТипЗнч(МассивНовыхСтрок)=Тип("Массив") Тогда
		ЭтоДобавлениеНовыхСтрокВПроцессе=Истина;
	КонецЕсли;
	ВидСкладскойДеятельности=итWMSСлужебныеПроцедурыИФункции.ВидСкладскойДеятельностиПоУмолчанию(Организация);
	Если ТипЗнч(итОснование)=Тип("ДокументСсылка.итWMSНаборка") Тогда 
		Если итОснование.Контрагент.ит_WMS_ВидСкладскойДеятельности=Перечисления.ит_WMS_ВидыСкладскойДеятельности.Розничная Тогда 
			 ВидСкладскойДеятельности= Перечисления.ит_WMS_ВидыСкладскойДеятельности.Розничная;
		КонецЕсли;	 
	КонецЕсли;
	
	ЯчейкиИсключенияАвтоматическогоРазмещения=НастройкиWMS.ЯчейкиИсключенияАвтоматическогоРазмещения.ВыгрузитьКолонку("Ячейка");
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст=ТекстЗапросаПоискаСвободныхЯчеекПикингаДляЯчеекОтправителей();	
	ТоварыКПреобразованию=Товары.Выгрузить();
	итWMSСлужебныеПроцедурыИФункции.ПреобразоватьТаблицуСИдентификаторамиДляЧтенияЗапроса(ТоварыКПреобразованию);
	Запрос.УстановитьПараметр("Товары",ТоварыКПреобразованию); 
	Запрос.УстановитьПараметр("ЭтоДобавлениеНовыхСтрокВПроцессе",ЭтоДобавлениеНовыхСтрокВПроцессе);
	Запрос.УстановитьПараметр("МассивНовыхСтрок",?(ЭтоДобавлениеНовыхСтрокВПроцессе,МассивНовыхСтрок,новый Массив));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ЯчейкиИсключенияАвтоматическогоРазмещения",ЯчейкиИсключенияАвтоматическогоРазмещения);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивЗарезервированныхЯчеек=новый Массив;	
	МассивСтрокКУдалению=новый Массив; ////////---дописание позволяющее пополнить сток, на сколько возможно
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ячейка=НайтиБлижайшуюЯчейкуПикингаВРазрезеУчастка(МассивЗарезервированныхЯчеек,ВыборкаДетальныеЗаписи.ЯчейкаОтправитель,МенеджерВременныхТаблиц,ВыборкаДетальныеЗаписи.Номенклатура,
		ВидСкладскойДеятельности);
		Если Ячейка.Пустая() тогда
			Сообщить("для ячейки "+ВыборкаДетальныеЗаписи.ЯчейкаОтправитель+" не найдена ячейка пикинга");
			Если ПополнениеСтока Тогда ////////---дописание позволяющее пополнить сток, на сколько возможно
				МассивСтрок=Товары.НайтиСтроки(новый Структура("ЯчейкаОтправитель",ВыборкаДетальныеЗаписи.ЯчейкаОтправитель));
				Для  Каждого стр из МассивСтрок цикл
					МассивСтрокКУдалению.Добавить(стр);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		МассивСтрокКИзменения=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаДетальныеЗаписи.ИдентификаторУпаковки));
		для Каждого стр из МассивСтрокКИзменения цикл
			стр.ЯчейкаПолучатель=Ячейка;
		КонецЦикла;
		МассивЗарезервированныхЯчеек.Добавить(Ячейка);
	КонецЦикла;
	////////---дописание позволяющее пополнить сток, на сколько возможно
	Для Каждого стр из МассивСтрокКУдалению цикл
		Товары.Удалить(стр);
	КонецЦикла;	
	
КонецПроцедуры
Функция НайтиБлижайшуюЯчейкуПикинга(МассивЗарезервированныхЯчеек=Неопределено,ЯчейкаПоиска,МенеджерВременныхТаблиц)
	Если ТипЗнч(МассивЗарезервированныхЯчеек)<>Тип("Массив") тогда
		МассивЗарезервированныхЯчеек=новый Массив;
	КонецЕсли;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0) < 0
	|			ТОГДА -(ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0))
	|		ИНАЧЕ ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0)
	|	КОНЕЦ КАК Порядок,
	|	СвободныеЯчейки.Ссылка
	|ИЗ
	|	СвободныеЯчейки КАК СвободныеЯчейки
	|ГДЕ
	|	НЕ СвободныеЯчейки.Ссылка В (&МассивЗарезервированныхЯчеек)
	|	И СвободныеЯчейки.Ссылка.СкладскоеПомещение = &СкладскоеПомещение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Запрос.УстановитьПараметр("МассивЗарезервированныхЯчеек", МассивЗарезервированныхЯчеек);
	Запрос.УстановитьПараметр("ПорядокОбхода",ЯчейкаПоиска.ПорядокОбхода);
	Запрос.УстановитьПараметр("СкладскоеПомещение",ЯчейкаПоиска.СкладскоеПомещение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	Возврат Справочники.итСкладскиеЯчейки.ПустаяСсылка();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции
Функция НайтиБлижайшуюЯчейкуПикингаПоТерриторииСклада(МассивЗарезервированныхЯчеек=Неопределено,ЯчейкаПоиска,МенеджерВременныхТаблиц)
	Если ТипЗнч(МассивЗарезервированныхЯчеек)<>Тип("Массив") тогда
		МассивЗарезервированныхЯчеек=новый Массив;
	КонецЕсли;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0) < 0
	|			ТОГДА -(ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0))
	|		ИНАЧЕ ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0)
	|	КОНЕЦ КАК Порядок,
	|	СвободныеЯчейки.Ссылка
	|ИЗ
	|	СвободныеЯчейки КАК СвободныеЯчейки
	|ГДЕ
	|	НЕ СвободныеЯчейки.Ссылка В (&МассивЗарезервированныхЯчеек)
	|	И СвободныеЯчейки.Ссылка.СкладскоеПомещение.ТерриторияСклада = &ТерриторияСклада
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Запрос.УстановитьПараметр("МассивЗарезервированныхЯчеек", МассивЗарезервированныхЯчеек);
	Запрос.УстановитьПараметр("ПорядокОбхода",ЯчейкаПоиска.ПорядокОбхода);
	Запрос.УстановитьПараметр("ТерриторияСклада",ЯчейкаПоиска.СкладскоеПомещение.ТерриторияСклада);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	Возврат Справочники.итСкладскиеЯчейки.ПустаяСсылка();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции
Функция НайтиБлижайшуюЯчейкуПикингаВРазрезеУчастка(МассивЗарезервированныхЯчеек=Неопределено,ЯчейкаПоиска,МенеджерВременныхТаблиц,Номенклатура,ВидСкладскойДеятельности)
	Если ТипЗнч(МассивЗарезервированныхЯчеек)<>Тип("Массив") тогда
		МассивЗарезервированныхЯчеек=новый Массив;
	КонецЕсли;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних.АссортиментныйУчастокСклада
	|ПОМЕСТИТЬ ВтАссортиментныйУчастокНМ
	|ИЗ
	|	РегистрСведений.ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчастка.СрезПоследних(, Организация = &Организация) КАК
	|		ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних
	|ГДЕ
	|	ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних.Номенклатура = &Номенклатура
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка
	|ПОМЕСТИТЬ ВтЯчейкиУчастка
	|ИЗ
	|	ВтАссортиментныйУчастокНМ КАК ВтАссортиментныйУчастокНМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ит_WMS_АссортиментныеУчасткиСклада.СоставЯчеек КАК
	|			ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек
	|		ПО ВтАссортиментныйУчастокНМ.АссортиментныйУчастокСклада = ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ссылка
	|		И (ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка.ВидСкладскойДеятельности = &ВидСкладскойДеятельности)
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0) < 0
	|			ТОГДА -(ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0))
	|		ИНАЧЕ ЕСТЬNULL(&ПорядокОбхода, 0) - ЕСТЬNULL(СвободныеЯчейки.Ссылка.ПорядокОбхода, 0)
	|	КОНЕЦ КАК Порядок,
	|	СвободныеЯчейки.Ссылка
	|ПОМЕСТИТЬ ВтДанныеСвободныхЯчеек
	|ИЗ
	|	ВтЯчейкиУчастка КАК ВтЯчейкиУчастка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СвободныеЯчейки КАК СвободныеЯчейки
	|		ПО ВтЯчейкиУчастка.Ячейка = СвободныеЯчейки.Ссылка
	|		И (НЕ СвободныеЯчейки.Ссылка В (&МассивЗарезервированныхЯчеек))
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтАссортиментныйУчастокНМ
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтЯчейкиУчастка
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеСвободныхЯчеек.Порядок КАК Порядок,
	|	ВтДанныеСвободныхЯчеек.Ссылка
	|ИЗ
	|	ВтДанныеСвободныхЯчеек КАК ВтДанныеСвободныхЯчеек
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтДанныеСвободныхЯчеек";
	
	Запрос.УстановитьПараметр("МассивЗарезервированныхЯчеек", МассивЗарезервированныхЯчеек);
	Запрос.УстановитьПараметр("ПорядокОбхода",ЯчейкаПоиска.ПорядокОбхода);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВидСкладскойДеятельности",ВидСкладскойДеятельности);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	Возврат Справочники.итСкладскиеЯчейки.ПустаяСсылка();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции

Функция ТекстЗапросаПоискаСвободныхЯчеекПикингаДляЯчеекОтправителей()
	Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.ЯчейкаПолучатель КАК Ячейка
	|ПОМЕСТИТЬ ЯчейкиВыполненногоПеремещения
	|ИЗ
	|	Документ.итWMSПеремещение.Товары КАК итWMSПеремещениеТовары
	|ГДЕ
	|	итWMSПеремещениеТовары.Ссылка = &Ссылка
	|	И итWMSПеремещениеТовары.ФиксацияСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSПеремещениеТовары.ЯчейкаПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейках.Ячейка КАК Ячейка,
	|	СУММА(ВЫБОР
	|			КОГДА итТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА итТоварыВЯчейках.Количество
	|			ИНАЧЕ -итТоварыВЯчейках.Количество
	|		КОНЕЦ / ВЫБОР
	|			КОГДА итТоварыВЯчейках.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
	|				ТОГДА 1
	|			ИНАЧЕ итТоварыВЯчейках.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА итТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА итТоварыВЯчейках.КРазмещению
	|			ИНАЧЕ -итТоварыВЯчейках.КРазмещению
	|		КОНЕЦ / ВЫБОР
	|			КОГДА итТоварыВЯчейках.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
	|				ТОГДА 1
	|			ИНАЧЕ итТоварыВЯчейках.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
	|		КОНЕЦ) КАК КРазмещению,
	|	СУММА(ВЫБОР
	|			КОГДА итТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА итТоварыВЯчейках.КОтбору
	|			ИНАЧЕ -итТоварыВЯчейках.КОтбору
	|		КОНЕЦ / ВЫБОР
	|			КОГДА итТоварыВЯчейках.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
	|				ТОГДА 1
	|			ИНАЧЕ итТоварыВЯчейках.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
	|		КОНЕЦ) КАК КОтбору
	|ПОМЕСТИТЬ ТоварыОстатки
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках КАК итТоварыВЯчейках
	|ГДЕ
	|	итТоварыВЯчейках.Регистратор = &Ссылка
	|	И итТоварыВЯчейках.Активность = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	итТоварыВЯчейках.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	СУММА(итТоварыВЯчейкахОстатки.КоличествоОстаток / ВЫБОР
	|			КОГДА итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
	|				ТОГДА 1
	|			ИНАЧЕ итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
	|		КОНЕЦ) КАК КоличествоОстаток,
	|	СУММА(итТоварыВЯчейкахОстатки.КОтборуОстаток / ВЫБОР
	|			КОГДА итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
	|				ТОГДА 1
	|			ИНАЧЕ итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
	|		КОНЕЦ) КАК КОтборуОстаток,
	|	СУММА(итТоварыВЯчейкахОстатки.КРазмещениюОстаток / ВЫБОР
	|			КОГДА итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете = 0
	|				ТОГДА 1
	|			ИНАЧЕ итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете
	|		КОНЕЦ) КАК КРазмещениюОстаток
	|ПОМЕСТИТЬ ВтОстаткиВЯчейках
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	итТоварыВЯчейкахОстатки.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итСкладскиеЯчейки.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ВтОстаткиВЯчейках.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыОстатки.Количество, 0) + ВтОстаткиВЯчейках.КРазмещениюОстаток - ЕСТЬNULL(ТоварыОстатки.КРазмещению, 0) КАК ОстатокТовараВЯчейке
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	Справочник.итСкладскиеЯчейки КАК итСкладскиеЯчейки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыОстатки КАК ТоварыОстатки
	|		ПО (ТоварыОстатки.Ячейка = итСкладскиеЯчейки.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиВЯчейках КАК ВтОстаткиВЯчейках
	|		ПО (ВтОстаткиВЯчейках.Ячейка = итСкладскиеЯчейки.Ссылка)
	|ГДЕ
	|	итСкладскиеЯчейки.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Пикинга)
	|	И итСкладскиеЯчейки.Заблокирована = ЛОЖЬ
	|	И итСкладскиеЯчейки.КоличествоПалет - (ЕСТЬNULL(ВтОстаткиВЯчейках.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыОстатки.Количество, 0) + ЕСТЬNULL(ВтОстаткиВЯчейках.КРазмещениюОстаток, 0) - ЕСТЬNULL(ТоварыОстатки.КРазмещению, 0)) >= 1
	|	И итСкладскиеЯчейки.ПометкаУдаления = ЛОЖЬ
	|	И НЕ итСкладскиеЯчейки.Ссылка В (&ЯчейкиИсключенияАвтоматическогоРазмещения)
	|	И НЕ итСкладскиеЯчейки.Ссылка В
	|				(ВЫБРАТЬ
	|					ЯчейкиВыполненногоПеремещения.Ячейка
	|				ИЗ
	|					ЯчейкиВыполненногоПеремещения КАК ЯчейкиВыполненногоПеремещения)
	|	И ВЫБОР
	|			КОГДА &ЭтоДобавлениеНовыхСтрокВПроцессе
	|				ТОГДА НЕ итСкладскиеЯчейки.Ссылка В
	|							(ВЫБРАТЬ
	|								ТоварыОстатки.Ячейка
	|							ИЗ
	|								ТоварыОстатки КАК ТоварыОстатки
	|							ГДЕ
	|								ТоварыОстатки.КРазмещению > 0)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
	|	Товары.ФиксацияСтроки КАК ФиксацияСтроки,
	|	Товары.ИдентификаторСтрокиПредставление КАК ИдентификаторСтроки,
	|	Товары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВТ.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
	|	МАКСИМУМ(ВТ.Номенклатура) КАК Номенклатура
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	НЕ ВТ.ФиксацияСтроки
	|	И ВЫБОР
	|			КОГДА &ЭтоДобавлениеНовыхСтрокВПроцессе
	|				ТОГДА ВТ.ИдентификаторСтроки В (&МассивНовыхСтрок)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.ИдентификаторУпаковки,
	|	ВТ.ЯчейкаОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЯчейкиВыполненногоПеремещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОстаткиВЯчейках";
	Возврат Текст;
КонецФункции

Функция СтрагеияПоискаЯчейкиПикингда() 
	ТекущийПользователь=ПараметрыСеанса.ТекущийПользователь;
	СтратегияПоискаЯчейки=Неопределено;
	
	СтрокаНастроек=ТекущийПользователь.НастройкиПоУмолчанию.Найти("Стратегия поиска ячейки пикинга");
	Если СтрокаНастроек <> Неопределено Тогда

		СтратегияПоискаЯчейки=СтрокаНастроек.Значение;
	КонецЕсли;
	Если СтратегияПоискаЯчейки = Неопределено И не Организация.Пустая() Тогда
		СтрокаНастроек=Организация.НастройкиПоУмолчанию.Найти("Стратегия поиска ячейки пикинга");
		Если СтрокаНастроек <> Неопределено Тогда
			СтратегияПоискаЯчейки=СтрокаНастроек.Значение;
		КонецЕсли;
	КонецЕсли;
	Если СтратегияПоискаЯчейки = Неопределено Тогда
		СтратегияПоискаЯчейки=Константы.СтратегияПоискаЯчейкиПикинга.Получить();
	КонецЕсли;
	Возврат СтратегияПоискаЯчейки;
КонецФункции

#КонецОбласти	

#Область ОбработчикиЗаполненияНаОсновании
Процедура ЗаполнитьНаОсновании(Основание,ДополнительныеПараметры=Неопределено) Экспорт 
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.итWMSНаборка") тогда
		ЗаполнитьНаОснованииНаборки(Основание,ДополнительныеПараметры)
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНаОснованииНаборки(Основание,ДополнительныеПараметры)
	Если ДополнительныеПараметры=Неопределено Тогда 
		ЗаполнениеПеремещенияНаВсюНаборку(Основание);
	КонецЕсли;
	Если ТипЗнч(ДополнительныеПараметры)=Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИзъятиеТовара") Тогда 
			ЗаполнениеПеремещенияНаИзъятиеНаборки(Основание);
		иначе
			ЗаполнениеПеремещенияНаВсюНаборку(Основание);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнениеПеремещенияНаИзъятиеНаборки(Основание)
	Если не Основание.Проведен Тогда 	
		Сообщить("Наборка не проведена, данные заполнены не будут");
		Возврат
	КонецЕсли;
	Дата=ТекущаяДата();
	Если Ссылка.Пустая() Тогда 
		ДатаПодстановки='21000101';
	КонецЕсли;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSНаборкаТовары.Номенклатура КАК Номенклатура,
	|	итWMSНаборкаТовары.Характеристика КАК Характеристика,
	|	итWMSНаборкаТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итWMSНаборкаТовары.Качество КАК Качество,
	|	итWMSНаборкаТовары.ДатаРозлива КАК ДатаРозлива,
	|	СУММА(итWMSНаборкаТовары.КоличествоФакт) КАК Количество,
	|	итWMSНаборкаТовары.ЯчейкаПолучатель КАК ЯчейкаОтправитель,
	|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковки,
	|	СУММА(итWMSНаборкаТовары.КоличествоИзъятия) КАК КоличествоИзъятия
	|ПОМЕСТИТЬ ТоварыНаборки
	|ИЗ
	|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
	|ГДЕ
	|	итWMSНаборкаТовары.Ссылка = &Ссылка
	|	И итWMSНаборкаТовары.ФиксацияСтроки
	|	И итWMSНаборкаТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итwmsСостоянияЗадачТСД.Отменена)
	|	И итWMSНаборкаТовары.ИзъятиеТовара
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSНаборкаТовары.Номенклатура,
	|	итWMSНаборкаТовары.Характеристика,
	|	итWMSНаборкаТовары.СерияНоменклатуры,
	|	итWMSНаборкаТовары.Качество,
	|	итWMSНаборкаТовары.ДатаРозлива,
	|	итWMSНаборкаТовары.ЯчейкаПолучатель,
	|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Склад КАК Склад,
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|	итТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|	итТоварыВЯчейкахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итТоварыВЯчейкахОстатки.ДатаРозлива КАК ДатаРозлива,
	|	итТоварыВЯчейкахОстатки.Качество КАК Качество,
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоНаборке
	|ИЗ
	|	ТоварыНаборки КАК ТоварыНаборки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки(&Период, ) КАК итТоварыВЯчейкахОстатки
	|		ПО ТоварыНаборки.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
	|			И ТоварыНаборки.Характеристика = итТоварыВЯчейкахОстатки.Характеристика
	|			И ТоварыНаборки.Качество = итТоварыВЯчейкахОстатки.Качество
	|			И ТоварыНаборки.ЯчейкаОтправитель = итТоварыВЯчейкахОстатки.Ячейка
	|			И ТоварыНаборки.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
	|			И (итТоварыВЯчейкахОстатки.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|			И ТоварыНаборки.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоНаборке.Склад КАК Склад,
	|	ОстаткиПоНаборке.Ячейка КАК Ячейка,
	|	ОстаткиПоНаборке.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ОстаткиПоНаборке.Номенклатура КАК Номенклатура,
	|	ОстаткиПоНаборке.Характеристика КАК Характеристика,
	|	ОстаткиПоНаборке.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ОстаткиПоНаборке.ДатаРозлива КАК ДатаРозлива,
	|	ОстаткиПоНаборке.Качество КАК Качество,
	|	СУММА(ОстаткиПоНаборке.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ГруппировкаДанных
	|ИЗ
	|	ОстаткиПоНаборке КАК ОстаткиПоНаборке
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоНаборке.Склад,
	|	ОстаткиПоНаборке.Ячейка,
	|	ОстаткиПоНаборке.ИдентификаторУпаковки,
	|	ОстаткиПоНаборке.Номенклатура,
	|	ОстаткиПоНаборке.Характеристика,
	|	ОстаткиПоНаборке.СерияНоменклатуры,
	|	ОстаткиПоНаборке.ДатаРозлива,
	|	ОстаткиПоНаборке.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппировкаДанных.Склад КАК Склад,
	|	ГруппировкаДанных.Ячейка КАК ЯчейкаОтправитель,
	|	ГруппировкаДанных.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ГруппировкаДанных.Номенклатура КАК Номенклатура,
	|	ГруппировкаДанных.Характеристика КАК Характеристика,
	|	ГруппировкаДанных.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ГруппировкаДанных.ДатаРозлива КАК ДатаРозлива,
	|	ГруппировкаДанных.Качество КАК Качество,
	|	ВЫБОР
	|		КОГДА ГруппировкаДанных.КоличествоОстаток > ЕСТЬNULL(ТоварыНаборки.КоличествоИзъятия, 0)
	|			ТОГДА ЕСТЬNULL(ТоварыНаборки.КоличествоИзъятия, 0)
	|		ИНАЧЕ ГруппировкаДанных.КоличествоОстаток
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ГруппировкаДанных КАК ГруппировкаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаборки КАК ТоварыНаборки
	|		ПО ГруппировкаДанных.Номенклатура = ТоварыНаборки.Номенклатура
	|			И ГруппировкаДанных.ИдентификаторУпаковки = ТоварыНаборки.ИдентификаторУпаковки
	|			И ГруппировкаДанных.Ячейка = ТоварыНаборки.ЯчейкаОтправитель
	|			И ГруппировкаДанных.СерияНоменклатуры = ТоварыНаборки.СерияНоменклатуры
	|			И ГруппировкаДанных.Качество = ТоварыНаборки.Качество
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ГруппировкаДанных.КоличествоОстаток > ЕСТЬNULL(ТоварыНаборки.КоличествоИзъятия, 0)
	|				ТОГДА ЕСТЬNULL(ТоварыНаборки.КоличествоИзъятия, 0)
	|			ИНАЧЕ ГруппировкаДанных.КоличествоОстаток
	|		КОНЕЦ > 0";
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.УстановитьПараметр("Период",новый Граница(новый МоментВремени(ДатаПодстановки,Ссылка),ВидГраницы.Исключая));
	РезультатЗапроса = Запрос.Выполнить();
	итОснование=Основание;
	ИзъятиеТовараИзНаборки=Истина;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Товары.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
		НоваяСтрока.ИдентификаторСтроки=новый УникальныйИдентификатор;
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	ВыборСтратегииРазмещения();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ЗаполнениеПеремещенияНаВсюНаборку(Основание)
	Если не Основание.Проведен Тогда 
		Сообщить("Наборка не проведена, данные заполнены не будут");
		Возврат
	КонецЕсли;	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSНаборкаТовары.Номенклатура КАК Номенклатура,
	|	итWMSНаборкаТовары.Характеристика КАК Характеристика,
	|	итWMSНаборкаТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итWMSНаборкаТовары.Качество КАК Качество,
	|	итWMSНаборкаТовары.ДатаРозлива КАК ДатаРозлива,
	|	СУММА(итWMSНаборкаТовары.КоличествоФакт) КАК Количество,
	|	итWMSНаборкаТовары.ЯчейкаПолучатель КАК ЯчейкаОтправитель,
	|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковки
	|ПОМЕСТИТЬ ТоварыНаборки
	|ИЗ
	|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
	|ГДЕ
	|	итWMSНаборкаТовары.Ссылка = &Ссылка
	|	И итWMSНаборкаТовары.ФиксацияСтроки
	|	И итWMSНаборкаТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итwmsСостоянияЗадачТСД.Отменена)
	|	И НЕ итWMSНаборкаТовары.ИзъятиеТовара
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSНаборкаТовары.Номенклатура,
	|	итWMSНаборкаТовары.Характеристика,
	|	итWMSНаборкаТовары.СерияНоменклатуры,
	|	итWMSНаборкаТовары.Качество,
	|	итWMSНаборкаТовары.ДатаРозлива,
	|	итWMSНаборкаТовары.ЯчейкаПолучатель,
	|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Склад КАК Склад,
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|	итТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|	итТоварыВЯчейкахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итТоварыВЯчейкахОстатки.ДатаРозлива КАК ДатаРозлива,
	|	итТоварыВЯчейкахОстатки.Качество КАК Качество,
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоНаборке
	|ИЗ
	|	ТоварыНаборки КАК ТоварыНаборки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|		ПО ТоварыНаборки.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
	|			И ТоварыНаборки.Характеристика = итТоварыВЯчейкахОстатки.Характеристика
	|			И ТоварыНаборки.Качество = итТоварыВЯчейкахОстатки.Качество
	|			И ТоварыНаборки.ЯчейкаОтправитель = итТоварыВЯчейкахОстатки.Ячейка
	|			И ТоварыНаборки.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
	|			И (итТоварыВЯчейкахОстатки.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|			И ТоварыНаборки.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоНаборке.Склад КАК Склад,
	|	ОстаткиПоНаборке.Ячейка КАК Ячейка,
	|	ОстаткиПоНаборке.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ОстаткиПоНаборке.Номенклатура КАК Номенклатура,
	|	ОстаткиПоНаборке.Характеристика КАК Характеристика,
	|	ОстаткиПоНаборке.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ОстаткиПоНаборке.ДатаРозлива КАК ДатаРозлива,
	|	ОстаткиПоНаборке.Качество КАК Качество,
	|	СУММА(ОстаткиПоНаборке.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ГруппировкаДанных
	|ИЗ
	|	ОстаткиПоНаборке КАК ОстаткиПоНаборке
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоНаборке.Склад,
	|	ОстаткиПоНаборке.Ячейка,
	|	ОстаткиПоНаборке.ИдентификаторУпаковки,
	|	ОстаткиПоНаборке.Номенклатура,
	|	ОстаткиПоНаборке.Характеристика,
	|	ОстаткиПоНаборке.СерияНоменклатуры,
	|	ОстаткиПоНаборке.ДатаРозлива,
	|	ОстаткиПоНаборке.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппировкаДанных.Склад КАК Склад,
	|	ГруппировкаДанных.Ячейка КАК ЯчейкаОтправитель,
	|	ГруппировкаДанных.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ГруппировкаДанных.Номенклатура КАК Номенклатура,
	|	ГруппировкаДанных.Характеристика КАК Характеристика,
	|	ГруппировкаДанных.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ГруппировкаДанных.ДатаРозлива КАК ДатаРозлива,
	|	ГруппировкаДанных.Качество КАК Качество,
	|	ГруппировкаДанных.КоличествоОстаток КАК Количество
	|ИЗ
	|	ГруппировкаДанных КАК ГруппировкаДанных
	|ГДЕ
	|	ГруппировкаДанных.КоличествоОстаток > 0";
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	РезультатЗапроса = Запрос.Выполнить();
	итОснование=Основание;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Товары.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
		НоваяСтрока.ИдентификаторСтроки=новый УникальныйИдентификатор;
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	ВыборСтратегииРазмещения();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры
#КонецОбласти
#Область ЯчеечноеРазмещениеТовара

Процедура ВыборСтратегииРазмещения()Экспорт 
	 Если не СтратегияПеремещения.Пустая() Тогда
		Выполнить(СтратегияПеремещения.ИмяМетода);
		Возврат;
	 КонецЕсли;
	НастройкаСтратегииРазмещения=Неопределено;
	ТекущийПользователь=ПараметрыСеанса.ТекущийПользователь;	
	СтрокаНастроек=ТекущийПользователь.НастройкиПоУмолчанию.Найти("Стратегия размещения"); 
	Если СтрокаНастроек <> Неопределено Тогда
		    
			НастройкаСтратегииРазмещения=СтрокаНастроек.Значение;
	КонецЕсли;
	Если НастройкаСтратегииРазмещения = Неопределено И Не Организация.Пустая() Тогда
		СтрокаНастроек=Организация.НастройкиПоУмолчанию.Найти("Стратегия размещения");
		Если СтрокаНастроек <> Неопределено Тогда
				НастройкаСтратегииРазмещения=СтрокаНастроек.Значение;
		КонецЕсли;
	КонецЕсли;
	Если НастройкаСтратегииРазмещения=Неопределено Тогда
		 НастройкаСтратегииРазмещения=Константы.СтратегияРазмещения.Получить();
	 КонецЕсли;
	Если НастройкаСтратегииРазмещения=Неопределено или НастройкаСтратегииРазмещения=Справочники.итWMSСтратегии.ПустаяСсылка() Тогда
		Возврат
	КонецЕсли;
	СтратегияРазмещения=НастройкаСтратегииРазмещения;
	Выполнить(СтратегияРазмещения.ИмяМетода);
КонецПроцедуры

Процедура РаместитьТоварПоУчасткамПриоритетХранения() Экспорт
	Попытка
		ДанныеХранилища=ПолучитьИзВременногоХранилища(АдресХраненияПараметров);
	Исключение
		ДанныеХранилища=Неопределено;
	КонецПопытки;
	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Стратегия","РаместитьТоварПоУчасткамПриоритетХранения");
	СтруктураДанных.Вставить("РазмещатьПоБлижайшейЗонеПриемки",Истина);
	Если ТипЗнч(ДанныеХранилища)=Тип("Массив") Тогда  
		СтруктураДанных.Вставить("АссортиментныйУчасток",НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"АссортиментныйУчасток"));
		Если СтруктураДанных.АссортиментныйУчасток=Неопределено Тогда 
			СтруктураДанных.Удалить("АссортиментныйУчасток");	
		ИначеЕсли СтруктураДанных.АссортиментныйУчасток.Пустая() Тогда 
			СтруктураДанных.Удалить("АссортиментныйУчасток");	
		КонецЕсли;
		СтруктураДанных.Вставить("ВидСкладскойДеятельности",НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"ВидСкладскойДеятельности"));
		Если СтруктураДанных.ВидСкладскойДеятельности=Неопределено Тогда 
			СтруктураДанных.Удалить("ВидСкладскойДеятельности");
		ИначеЕсли  СтруктураДанных.ВидСкладскойДеятельности.Пустая() Тогда 
			СтруктураДанных.Удалить("ВидСкладскойДеятельности");
		КонецЕсли;
	КонецЕсли;
	СтруктураДанных.Вставить("РазмещатьСПриоритетомХранения",Истина);
	ПоискЯчеекРазмещения(СтруктураДанных);
	
КонецПроцедуры
Процедура РаместитьТоварПоУчасткамПриоритетПикинга() Экспорт
	Попытка
		ДанныеХранилища=ПолучитьИзВременногоХранилища(АдресХраненияПараметров);
	Исключение
		ДанныеХранилища=Неопределено;
	КонецПопытки;
	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Стратегия","РаместитьТоварПоУчасткамПриоритетПикинга");
	СтруктураДанных.Вставить("РазмещатьПоБлижайшейЗонеПриемки",Истина);
	Если ТипЗнч(ДанныеХранилища)=Тип("Массив") Тогда  
		СтруктураДанных.Вставить("АссортиментныйУчасток",НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"АссортиментныйУчасток"));
		Если СтруктураДанных.АссортиментныйУчасток=Неопределено Тогда 
			СтруктураДанных.Удалить("АссортиментныйУчасток");	
		ИначеЕсли СтруктураДанных.АссортиментныйУчасток.Пустая() Тогда 
			СтруктураДанных.Удалить("АссортиментныйУчасток");	
		КонецЕсли;
		СтруктураДанных.Вставить("ВидСкладскойДеятельности",НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"ВидСкладскойДеятельности"));
		Если СтруктураДанных.ВидСкладскойДеятельности=Неопределено Тогда 
			СтруктураДанных.Удалить("ВидСкладскойДеятельности");
		ИначеЕсли  СтруктураДанных.ВидСкладскойДеятельности.Пустая() Тогда 
			СтруктураДанных.Удалить("ВидСкладскойДеятельности");
		КонецЕсли;
	КонецЕсли;
	СтруктураДанных.Вставить("РазмещатьСПриоритетомХранения",Ложь);
	ПоискЯчеекРазмещения(СтруктураДанных);
	
	КонецПроцедуры



#Область ЯчеечноеРазмещениеТовараОпт
Процедура ПоискЯчеекРазмещенияОпт(ЗонаКарантина,  МассивРезультатов,  СтруктураДанных)
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	ЗапросСвободныхЯчеекСогласноПаллетМестОпт(МенеджерВременныхТаблиц,СтруктураДанных);
	РазместитьОднородныеПаллеты(МассивРезультатов[5],МенеджерВременныхТаблиц,СтруктураДанных);
	РазместитьНеОднородныеПаллеты(МассивРезультатов[6],МенеджерВременныхТаблиц,СтруктураДанных);
	/////размещение карантинных паллет по алгоритмы не однородных, в зону карантина
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	ЗаполнитьДанныеСвободнымиЯчейкамиКарантина(ЗонаКарантина,МенеджерВременныхТаблиц);
	РазместитьКарантинПаллеты(МассивРезультатов[7],МенеджерВременныхТаблиц,СтруктураДанных);
	КонецПроцедуры
Процедура РазмещениеТовараСОграничиниемПоЛиниям() Экспорт
	Попытка
		ДанныеХранилища=ПолучитьИзВременногоХранилища(АдресХраненияПараметров);
	Исключение
		ДанныеХранилища=Неопределено;
	КонецПопытки;
		Если ТипЗнч(ДанныеХранилища)<>Тип("Массив") Тогда 
		Сообщить("нет данных Линий, заполните пожалуйста параметры");
		Возврат
	КонецЕсли;
	ПриоритетПикинга=Неопределено;
	ПриоритетПикинга=НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"ПриоритетПикинга");
	Если ПриоритетПикинга=Неопределено Тогда 
		ПриоритетПикинга=Ложь;
	КонецЕсли;	

	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Стратегия","РазмещениеТовараСОграничиниемПоЛиниям");
	СтруктураДанных.Вставить("РазмещатьПоБлижайшейЗонеПриемки",Истина);
	СтруктураДанных.Вставить("ЛинияС",НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"ЛинияС"));
	СтруктураДанных.Вставить("ЛинияПо",НайтиЗначенияВСтруктурированномМассиве(ДанныеХранилища,"ЛинияПо"));
	СтруктураДанных.Вставить("РазмещатьСПриоритетомХранения",?(не ПриоритетПикинга,Истина,Ложь));
	Если СтруктураДанных.ЛинияС=Неопределено или  СтруктураДанных.ЛинияПо=Неопределено Тогда 
		Сообщить("нет данных Линий, заполните пожалуйста параметры");
		Возврат
	КонецЕсли;
	ПоискЯчеекРазмещения(СтруктураДанных);
	
КонецПроцедуры
Процедура ПоискЯчеекРазмещенияВРядИлиЛинию()Экспорт 
	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Стратегия","ПоискЯчеекРазмещенияВРядИлиЛинию");
	СтруктураДанных.Вставить("РазмещатьПоБлижайшейЗонеПриемки",Истина);
	СтруктураДанных.Вставить("РазмещатьСПриоритетомХранения",Истина);
	ПоискЯчеекРазмещения(СтруктураДанных);
КонецПроцедуры
Процедура ПоискЯчеекРазмещенияБлижайшаяКЗонеПриемкиТолькоЯчейкиХранения()Экспорт 
	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Стратегия","ПоискЯчеекРазмещенияБлижайшаяКЗонеПриемкиТолькоЯчейкиХранения");
	МассивЗонКРазмещению=новый Массив;
	МассивЗонКРазмещению.Добавить(Перечисления.итWMSЗоныСклада.Хранения);
	СтруктураДанных.Вставить("МассивЗонКРазмещению",МассивЗонКРазмещению);
	ПоискЯчеекРазмещения(СтруктураДанных);
КонецПроцедуры
Процедура ПоискЯчеекРазмещенияБлижайшаяКЗонеПриемки() Экспорт
	СтруктураДанных=новый Структура;
	СтруктураДанных.Вставить("Стратегия","ПоискЯчеекРазмещенияБлижайшаяКЗонеПриемки");
	ПоискЯчеекРазмещения(СтруктураДанных);	
КонецПроцедуры

Процедура РазместитьНеОднородныеПаллеты(РезультатЗапроса,МенеджерВременныхТаблиц,СтруктураДанных)
	Если РезультатЗапроса.Пустой() тогда
		Возврат
	КонецЕсли;	
	ВыборкаНеоднороднойПаллеты=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаПаллетМест=новый ТаблицаЗначений;
	ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
	ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	
	Пока  ВыборкаНеоднороднойПаллеты.Следующий() Цикл 
		Если ВыборкаНеоднороднойПаллеты.НоменклатураитПреоритетнаяЗонаРазмещения>1 тогда
			Сообщить("для паллеты "+ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки+" место размещения не найдено");
			Продолжить;
		КонецЕсли;	
		Если ВыборкаНеоднороднойПаллеты.КоличествоРазличныхЯчеекОтправителей>1 и СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки тогда
			Сообщить("паллета "+ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки+" размещена не будет т.к паллета размещена более чем на 1 ячейки приемки");
			Продолжить;
		КонецЕсли;	
		
		Сообщить("Паллета "+ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки+" неоднородна, но ее приоритетное место расположение в 1 зоне , будет предложенно рекомендованное место ");
		
		Если  СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки тогда
			СтруктураДанных.Вставить("НачалоОтсчетаПорядкаОбхода",ВыборкаНеоднороднойПаллеты.ЯчейкаОтправитель.ЯчейкаНачалаРазмещения.ПорядокОбхода);
		КонецЕсли;
		СтруктураДанных.Вставить("ТекущийАссортиментныйУчастокСклада",ВыборкаНеоднороднойПаллеты.АссортиментныйУчастокСклада);
		РезультатСвободныхЯчеек=ЗапроситьИнформациюПоЯчейкам(МенеджерВременныхТаблиц,1,ВыборкаНеоднороднойПаллеты.СкладскоеПомещение,ТаблицаПаллетМест,СтруктураДанных);
		ТаблицаПаллетМест.Очистить();
		ВыборкаСвободныхЯчеек=РезультатСвободныхЯчеек.Выбрать();
		СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки));
		Если ВыборкаСвободныхЯчеек.Следующий() тогда
			КоличествоПаллетвЯчейке=ВыборкаСвободныхЯчеек.КоличествоПаллет;
			пока КоличествоПаллетвЯчейке>0 цикл
				для Каждого стр из СтрокиТабличнойЧасти цикл
					стр.ЯчейкаПолучатель=ВыборкаСвободныхЯчеек.Ячейка;
				КонецЦикла;
				КоличествоПаллетвЯчейке=КоличествоПаллетвЯчейке-1;
				НоваяСтрока=ТаблицаПаллетМест.Добавить();
				НоваяСтрока.Ячейка=ВыборкаСвободныхЯчеек.Ячейка;
				НоваяСтрока.КоличествоЗанятыхПаллетМест=1;
				Если КоличествоПаллетвЯчейке>0 тогда
					Если   ВыборкаНеоднороднойПаллеты.Следующий() тогда
						СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки));
						Сообщить("Паллета "+ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки+" неоднородна, но ее приоритетное место расположение в 1 зоне , будет предложенно рекомендованное место ");
					иначе
						Прервать;
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		иначе
			Сообщить(" для паллеты "+ ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки +" не нашлось подходящей ячейки");
		КонецЕсли;
		
	КонецЦикла;
	ОбработатьТаблицуПаллетМестОПТ(МенеджерВременныхТаблиц, ТаблицаПаллетМест);
	
КонецПроцедуры

Процедура РазместитьОднородныеПаллеты(РезультатЗапроса,МенеджерВременныхТаблиц,СтруктураДанных)
	Если РезультатЗапроса.Пустой() тогда
		Возврат
	КонецЕсли;	
	ВыборкаНоменклатуры=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаПаллетМест=новый ТаблицаЗначений;
	ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
	ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	
	
	Пока  ВыборкаНоменклатуры.Следующий() Цикл 
		
		КоличествоПаллетКРазмещению= ВыборкаНоменклатуры.КоличествоПаллетНоменклатуры;
		СкладскоеПомещениеКРазмещению=ВыборкаНоменклатуры.НоменклатураитПреоритетнаяЗонаРазмещения;
		СтруктураДанных.Вставить("ТекущийАссортиментныйУчастокСклада",ВыборкаНоменклатуры.АссортиментныйУчастокСклада);
		Если не СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки тогда
			РезультатСвободныхЯчеек=ЗапроситьИнформациюПоЯчейкам(МенеджерВременныхТаблиц,КоличествоПаллетКРазмещению,СкладскоеПомещениеКРазмещению,ТаблицаПаллетМест,СтруктураДанных);
			ВыборкаСвободныхЯчеек=РезультатСвободныхЯчеек.Выбрать();
			ТаблицаПаллетМест.Очистить();
		КонецЕсли;
		ВыборкаПоПаллетно=ВыборкаНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоПаллетно.Следующий() цикл
			Если ВыборкаПоПаллетно.КоличествоРазличныхЯчеекОтправителей>1 и СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки тогда
				Сообщить("паллета "+ВыборкаПоПаллетно.ИдентификаторУпаковки+" размещена не будет т.к паллета размещена более чем на 1 ячейки приемки");
				Продолжить;
			КонецЕсли;	
			Если  СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки тогда
				СтруктураДанных.Вставить("НачалоОтсчетаПорядкаОбхода",ВыборкаПоПаллетно.ЯчейкаОтправитель.ЯчейкаНачалаРазмещения.ПорядокОбхода);
				РезультатСвободныхЯчеек=ЗапроситьИнформациюПоЯчейкам(МенеджерВременныхТаблиц,КоличествоПаллетКРазмещению,СкладскоеПомещениеКРазмещению,ТаблицаПаллетМест,СтруктураДанных);
				ВыборкаСвободныхЯчеек=РезультатСвободныхЯчеек.Выбрать();
				ТаблицаПаллетМест.Очистить();
			КонецЕсли;
			
			СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки,Номенклатура",ВыборкаПоПаллетно.ИдентификаторУпаковки,ВыборкаПоПаллетно.Номенклатура));
			Если ВыборкаСвободныхЯчеек.Следующий() тогда
				КоличествоПаллетвЯчейке=ВыборкаСвободныхЯчеек.КоличествоПаллет;
				пока КоличествоПаллетвЯчейке>0 цикл
					для Каждого стр из СтрокиТабличнойЧасти цикл
						стр.ЯчейкаПолучатель=ВыборкаСвободныхЯчеек.Ячейка;
					КонецЦикла;
					КоличествоПаллетвЯчейке=КоличествоПаллетвЯчейке-1;
					НоваяСтрока=ТаблицаПаллетМест.Добавить();
					НоваяСтрока.Ячейка=ВыборкаСвободныхЯчеек.Ячейка;
					НоваяСтрока.КоличествоЗанятыхПаллетМест=1;
					Если КоличествоПаллетвЯчейке>0 тогда
						Если   ВыборкаПоПаллетно.Следующий() тогда
							СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки,Номенклатура",ВыборкаПоПаллетно.ИдентификаторУпаковки,ВыборкаПоПаллетно.Номенклатура));
						иначе
							Прервать;
						КонецЕсли;	
					КонецЕсли;
				КонецЦикла;
			иначе
				Сообщить(" для паллеты "+ ВыборкаПоПаллетно.ИдентификаторУпаковки +" и  номеклатуры "+ВыборкаПоПаллетно.Номенклатура+" не нашлось подходящей ячейки");
			КонецЕсли;
		КонецЦикла;
		//Пока  ВыборкаДетальнойЗаписиТоваров.Следующий() Цикл 
		//КонецЦикла;
	КонецЦикла;
	ОбработатьТаблицуПаллетМестОПТ(МенеджерВременныхТаблиц, ТаблицаПаллетМест);

	
КонецПроцедуры

Процедура ОбработатьТаблицуПаллетМестОПТ( МенеджерВременныхТаблиц, ТаблицаПаллетМест)
	
	Если ТаблицаПаллетМест.Количество()>0 тогда
		ИзъятьЗарезервированныеТоварыОПТ(ТаблицаПаллетМест,МенеджерВременныхТаблиц);;
	КонецЕсли;

КонецПроцедуры
Процедура ИзъятьЗарезервированныеТоварыОПТ(ТаблицаПаллетМест,МенеджерВременныхТаблиц)
	Если ТаблицаПаллетМест=Неопределено Тогда
		ТаблицаПаллетМест=новый ТаблицаЗначений;
		ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
		ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПаллетМест.Ячейка,
		|	ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест
		|ПОМЕСТИТЬ ТаблицаПаллетМест
		|ИЗ
		|	&ТаблицаПаллетМест КАК ТаблицаПаллетМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПаллетМест.Ячейка,
		|	СУММА(ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест) КАК КоличествоЗанятыхПаллетМест
		|ПОМЕСТИТЬ ТаблицаПаллетМестГруппировка
		|ИЗ
		|	ТаблицаПаллетМест КАК ТаблицаПаллетМест
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПаллетМест.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвободныеЯчейки.Ячейка,
		|	СвободныеЯчейки.СкладскоеПомещение,
		|	ВЫБОР
		|		КОГДА СвободныеЯчейки.Линия = ""0""
		|			ТОГДА 0
		|		КОГДА СвободныеЯчейки.Линия = ""00""
		|			ТОГДА 0
		|		КОГДА СвободныеЯчейки.Линия = ""1""
		|			ТОГДА 1
		|		КОГДА СвободныеЯчейки.Линия = ""01""
		|			ТОГДА 1
		|		КОГДА СвободныеЯчейки.Линия = ""2""
		|			ТОГДА 2
		|		КОГДА СвободныеЯчейки.Линия = ""02""
		|			ТОГДА 2
		|		КОГДА СвободныеЯчейки.Линия = ""3""
		|			ТОГДА 3
		|		КОГДА СвободныеЯчейки.Линия = ""03""
		|			ТОГДА 3
		|		КОГДА СвободныеЯчейки.Линия = ""4""
		|			ТОГДА 4
		|		КОГДА СвободныеЯчейки.Линия = ""04""
		|			ТОГДА 4
		|		КОГДА СвободныеЯчейки.Линия = ""5""
		|			ТОГДА 5
		|		КОГДА СвободныеЯчейки.Линия = ""05""
		|			ТОГДА 5
		|		КОГДА СвободныеЯчейки.Линия = ""6""
		|			ТОГДА 6
		|		КОГДА СвободныеЯчейки.Линия = ""06""
		|			ТОГДА 6
		|		КОГДА СвободныеЯчейки.Линия = ""7""
		|			ТОГДА 7
		|		КОГДА СвободныеЯчейки.Линия = ""07""
		|			ТОГДА 7
		|		КОГДА СвободныеЯчейки.Линия = ""8""
		|			ТОГДА 8
		|		КОГДА СвободныеЯчейки.Линия = ""08""
		|			ТОГДА 8
		|		КОГДА СвободныеЯчейки.Линия = ""9""
		|			ТОГДА 9
		|		КОГДА СвободныеЯчейки.Линия = ""09""
		|			ТОГДА 9
		|		КОГДА СвободныеЯчейки.Линия = ""10""
		|			ТОГДА 10
		|		КОГДА СвободныеЯчейки.Линия = ""010""
		|			ТОГДА 10
		|		КОГДА СвободныеЯчейки.Линия = ""11""
		|			ТОГДА 11
		|		КОГДА СвободныеЯчейки.Линия = ""011""
		|			ТОГДА 11
		|		КОГДА СвободныеЯчейки.Линия = ""12""
		|			ТОГДА 12
		|		КОГДА СвободныеЯчейки.Линия = ""012""
		|			ТОГДА 12
		|		КОГДА СвободныеЯчейки.Линия = ""13""
		|			ТОГДА 13
		|		КОГДА СвободныеЯчейки.Линия = ""013""
		|			ТОГДА 13
		|		КОГДА СвободныеЯчейки.Линия = ""14""
		|			ТОГДА 14
		|		КОГДА СвободныеЯчейки.Линия = ""014""
		|			ТОГДА 14
		|		КОГДА СвободныеЯчейки.Линия = ""15""
		|			ТОГДА 15
		|		КОГДА СвободныеЯчейки.Линия = ""015""
		|			ТОГДА 15
		|		КОГДА СвободныеЯчейки.Линия = ""16""
		|			ТОГДА 16
		|		КОГДА СвободныеЯчейки.Линия = ""016""
		|			ТОГДА 16
		|		КОГДА СвободныеЯчейки.Линия = ""17""
		|			ТОГДА 17
		|		КОГДА СвободныеЯчейки.Линия = ""017""
		|			ТОГДА 17
		|		КОГДА СвободныеЯчейки.Линия = ""18""
		|			ТОГДА 18
		|		КОГДА СвободныеЯчейки.Линия = ""018""
		|			ТОГДА 18
		|		КОГДА СвободныеЯчейки.Линия = ""19""
		|			ТОГДА 19
		|		КОГДА СвободныеЯчейки.Линия = ""019""
		|			ТОГДА 19
		|		КОГДА СвободныеЯчейки.Линия = ""20""
		|			ТОГДА 20
		|		КОГДА СвободныеЯчейки.Линия = ""020""
		|			ТОГДА 20
		|		КОГДА СвободныеЯчейки.Линия = ""21""
		|			ТОГДА 21
		|		КОГДА СвободныеЯчейки.Линия = ""021""
		|			ТОГДА 21
		|		КОГДА СвободныеЯчейки.Линия = ""22""
		|			ТОГДА 22
		|		КОГДА СвободныеЯчейки.Линия = ""022""
		|			ТОГДА 22
		|		КОГДА СвободныеЯчейки.Линия = ""23""
		|			ТОГДА 23
		|		КОГДА СвободныеЯчейки.Линия = ""023""
		|			ТОГДА 23
		|		КОГДА СвободныеЯчейки.Линия = ""24""
		|			ТОГДА 24
		|		КОГДА СвободныеЯчейки.Линия = ""024""
		|			ТОГДА 24
		|		КОГДА СвободныеЯчейки.Линия = ""25""
		|			ТОГДА 25
		|		КОГДА СвободныеЯчейки.Линия = ""025""
		|			ТОГДА 25
		|		КОГДА СвободныеЯчейки.Линия = ""26""
		|			ТОГДА 26
		|		КОГДА СвободныеЯчейки.Линия = ""026""
		|			ТОГДА 26
		|		КОГДА СвободныеЯчейки.Линия = ""27""
		|			ТОГДА 27
		|		КОГДА СвободныеЯчейки.Линия = ""027""
		|			ТОГДА 27
		|		КОГДА СвободныеЯчейки.Линия = ""28""
		|			ТОГДА 28
		|		КОГДА СвободныеЯчейки.Линия = ""028""
		|			ТОГДА 28
		|		КОГДА СвободныеЯчейки.Линия = ""29""
		|			ТОГДА 29
		|		КОГДА СвободныеЯчейки.Линия = ""029""
		|			ТОГДА 29
		|		КОГДА СвободныеЯчейки.Линия = ""30""
		|			ТОГДА 30
		|		КОГДА СвободныеЯчейки.Линия = ""030""
		|			ТОГДА 30
		|		КОГДА СвободныеЯчейки.Линия = ""31""
		|			ТОГДА 31
		|		КОГДА СвободныеЯчейки.Линия = ""031""
		|			ТОГДА 31
		|		КОГДА СвободныеЯчейки.Линия = ""32""
		|			ТОГДА 32
		|		КОГДА СвободныеЯчейки.Линия = ""032""
		|			ТОГДА 32
		|		КОГДА СвободныеЯчейки.Линия = ""33""
		|			ТОГДА 33
		|		КОГДА СвободныеЯчейки.Линия = ""033""
		|			ТОГДА 33
		|		КОГДА СвободныеЯчейки.Линия = ""34""
		|			ТОГДА 34
		|		КОГДА СвободныеЯчейки.Линия = ""034""
		|			ТОГДА 34
		|		КОГДА СвободныеЯчейки.Линия = ""35""
		|			ТОГДА 35
		|		КОГДА СвободныеЯчейки.Линия = ""035""
		|			ТОГДА 35
		|		КОГДА СвободныеЯчейки.Линия = ""36""
		|			ТОГДА 36
		|		КОГДА СвободныеЯчейки.Линия = ""036""
		|			ТОГДА 36
		|		КОГДА СвободныеЯчейки.Линия = ""37""
		|			ТОГДА 37
		|		КОГДА СвободныеЯчейки.Линия = ""037""
		|			ТОГДА 37
		|		КОГДА СвободныеЯчейки.Линия = ""38""
		|			ТОГДА 38
		|		КОГДА СвободныеЯчейки.Линия = ""038""
		|			ТОГДА 38
		|		КОГДА СвободныеЯчейки.Линия = ""39""
		|			ТОГДА 39
		|		КОГДА СвободныеЯчейки.Линия = ""039""
		|			ТОГДА 39
		|		КОГДА СвободныеЯчейки.Линия = ""40""
		|			ТОГДА 40
		|		КОГДА СвободныеЯчейки.Линия = ""040""
		|			ТОГДА 40
		|		КОГДА СвободныеЯчейки.Линия = ""41""
		|			ТОГДА 41
		|		КОГДА СвободныеЯчейки.Линия = ""041""
		|			ТОГДА 41
		|		КОГДА СвободныеЯчейки.Линия = ""42""
		|			ТОГДА 42
		|		КОГДА СвободныеЯчейки.Линия = ""042""
		|			ТОГДА 42
		|		КОГДА СвободныеЯчейки.Линия = ""43""
		|			ТОГДА 43
		|		КОГДА СвободныеЯчейки.Линия = ""043""
		|			ТОГДА 43
		|		КОГДА СвободныеЯчейки.Линия = ""44""
		|			ТОГДА 44
		|		КОГДА СвободныеЯчейки.Линия = ""044""
		|			ТОГДА 44
		|		КОГДА СвободныеЯчейки.Линия = ""45""
		|			ТОГДА 45
		|		КОГДА СвободныеЯчейки.Линия = ""045""
		|			ТОГДА 45
		|		КОГДА СвободныеЯчейки.Линия = ""46""
		|			ТОГДА 46
		|		КОГДА СвободныеЯчейки.Линия = ""046""
		|			ТОГДА 46
		|		КОГДА СвободныеЯчейки.Линия = ""47""
		|			ТОГДА 47
		|		КОГДА СвободныеЯчейки.Линия = ""047""
		|			ТОГДА 47
		|		КОГДА СвободныеЯчейки.Линия = ""48""
		|			ТОГДА 48
		|		КОГДА СвободныеЯчейки.Линия = ""048""
		|			ТОГДА 48
		|		КОГДА СвободныеЯчейки.Линия = ""49""
		|			ТОГДА 49
		|		КОГДА СвободныеЯчейки.Линия = ""049""
		|			ТОГДА 49
		|		КОГДА СвободныеЯчейки.Линия = ""50""
		|			ТОГДА 50
		|		КОГДА СвободныеЯчейки.Линия = ""050""
		|			ТОГДА 50
		|		КОГДА СвободныеЯчейки.Линия = ""51""
		|			ТОГДА 51
		|		КОГДА СвободныеЯчейки.Линия = ""051""
		|			ТОГДА 51
		|		КОГДА СвободныеЯчейки.Линия = ""52""
		|			ТОГДА 52
		|		КОГДА СвободныеЯчейки.Линия = ""052""
		|			ТОГДА 52
		|		КОГДА СвободныеЯчейки.Линия = ""53""
		|			ТОГДА 53
		|		КОГДА СвободныеЯчейки.Линия = ""053""
		|			ТОГДА 53
		|		КОГДА СвободныеЯчейки.Линия = ""54""
		|			ТОГДА 54
		|		КОГДА СвободныеЯчейки.Линия = ""054""
		|			ТОГДА 54
		|		КОГДА СвободныеЯчейки.Линия = ""55""
		|			ТОГДА 55
		|		КОГДА СвободныеЯчейки.Линия = ""055""
		|			ТОГДА 55
		|		КОГДА СвободныеЯчейки.Линия = ""56""
		|			ТОГДА 56
		|		КОГДА СвободныеЯчейки.Линия = ""056""
		|			ТОГДА 56
		|		КОГДА СвободныеЯчейки.Линия = ""57""
		|			ТОГДА 57
		|		КОГДА СвободныеЯчейки.Линия = ""057""
		|			ТОГДА 57
		|		КОГДА СвободныеЯчейки.Линия = ""58""
		|			ТОГДА 58
		|		КОГДА СвободныеЯчейки.Линия = ""058""
		|			ТОГДА 58
		|		КОГДА СвободныеЯчейки.Линия = ""59""
		|			ТОГДА 59
		|		КОГДА СвободныеЯчейки.Линия = ""059""
		|			ТОГДА 59
		|		КОГДА СвободныеЯчейки.Линия = ""60""
		|			ТОГДА 60
		|		КОГДА СвободныеЯчейки.Линия = ""060""
		|			ТОГДА 60
		|		КОГДА СвободныеЯчейки.Линия = ""61""
		|			ТОГДА 61
		|		КОГДА СвободныеЯчейки.Линия = ""061""
		|			ТОГДА 61
		|		КОГДА СвободныеЯчейки.Линия = ""62""
		|			ТОГДА 62
		|		КОГДА СвободныеЯчейки.Линия = ""062""
		|			ТОГДА 62
		|		КОГДА СвободныеЯчейки.Линия = ""63""
		|			ТОГДА 63
		|		КОГДА СвободныеЯчейки.Линия = ""063""
		|			ТОГДА 63
		|		КОГДА СвободныеЯчейки.Линия = ""64""
		|			ТОГДА 64
		|		КОГДА СвободныеЯчейки.Линия = ""064""
		|			ТОГДА 64
		|		КОГДА СвободныеЯчейки.Линия = ""65""
		|			ТОГДА 65
		|		КОГДА СвободныеЯчейки.Линия = ""065""
		|			ТОГДА 65
		|		КОГДА СвободныеЯчейки.Линия = ""66""
		|			ТОГДА 66
		|		КОГДА СвободныеЯчейки.Линия = ""066""
		|			ТОГДА 66
		|		КОГДА СвободныеЯчейки.Линия = ""67""
		|			ТОГДА 67
		|		КОГДА СвободныеЯчейки.Линия = ""067""
		|			ТОГДА 67
		|		КОГДА СвободныеЯчейки.Линия = ""68""
		|			ТОГДА 68
		|		КОГДА СвободныеЯчейки.Линия = ""068""
		|			ТОГДА 68
		|		КОГДА СвободныеЯчейки.Линия = ""69""
		|			ТОГДА 69
		|		КОГДА СвободныеЯчейки.Линия = ""069""
		|			ТОГДА 69
		|		КОГДА СвободныеЯчейки.Линия = ""70""
		|			ТОГДА 70
		|		КОГДА СвободныеЯчейки.Линия = ""070""
		|			ТОГДА 70
		|		КОГДА СвободныеЯчейки.Линия = ""71""
		|			ТОГДА 71
		|		КОГДА СвободныеЯчейки.Линия = ""071""
		|			ТОГДА 71
		|		КОГДА СвободныеЯчейки.Линия = ""72""
		|			ТОГДА 72
		|		КОГДА СвободныеЯчейки.Линия = ""072""
		|			ТОГДА 72
		|		КОГДА СвободныеЯчейки.Линия = ""73""
		|			ТОГДА 73
		|		КОГДА СвободныеЯчейки.Линия = ""073""
		|			ТОГДА 73
		|		КОГДА СвободныеЯчейки.Линия = ""74""
		|			ТОГДА 74
		|		КОГДА СвободныеЯчейки.Линия = ""074""
		|			ТОГДА 74
		|		КОГДА СвободныеЯчейки.Линия = ""75""
		|			ТОГДА 75
		|		КОГДА СвободныеЯчейки.Линия = ""075""
		|			ТОГДА 75
		|		КОГДА СвободныеЯчейки.Линия = ""76""
		|			ТОГДА 76
		|		КОГДА СвободныеЯчейки.Линия = ""076""
		|			ТОГДА 76
		|		КОГДА СвободныеЯчейки.Линия = ""77""
		|			ТОГДА 77
		|		КОГДА СвободныеЯчейки.Линия = ""077""
		|			ТОГДА 77
		|		КОГДА СвободныеЯчейки.Линия = ""78""
		|			ТОГДА 78
		|		КОГДА СвободныеЯчейки.Линия = ""078""
		|			ТОГДА 78
		|		КОГДА СвободныеЯчейки.Линия = ""79""
		|			ТОГДА 79
		|		КОГДА СвободныеЯчейки.Линия = ""079""
		|			ТОГДА 79
		|		КОГДА СвободныеЯчейки.Линия = ""80""
		|			ТОГДА 80
		|		КОГДА СвободныеЯчейки.Линия = ""080""
		|			ТОГДА 80
		|		КОГДА СвободныеЯчейки.Линия = ""81""
		|			ТОГДА 81
		|		КОГДА СвободныеЯчейки.Линия = ""081""
		|			ТОГДА 81
		|		КОГДА СвободныеЯчейки.Линия = ""82""
		|			ТОГДА 82
		|		КОГДА СвободныеЯчейки.Линия = ""082""
		|			ТОГДА 82
		|		КОГДА СвободныеЯчейки.Линия = ""83""
		|			ТОГДА 83
		|		КОГДА СвободныеЯчейки.Линия = ""083""
		|			ТОГДА 83
		|		КОГДА СвободныеЯчейки.Линия = ""84""
		|			ТОГДА 84
		|		КОГДА СвободныеЯчейки.Линия = ""084""
		|			ТОГДА 84
		|		КОГДА СвободныеЯчейки.Линия = ""85""
		|			ТОГДА 85
		|		КОГДА СвободныеЯчейки.Линия = ""085""
		|			ТОГДА 85
		|		КОГДА СвободныеЯчейки.Линия = ""86""
		|			ТОГДА 86
		|		КОГДА СвободныеЯчейки.Линия = ""086""
		|			ТОГДА 86
		|		КОГДА СвободныеЯчейки.Линия = ""87""
		|			ТОГДА 87
		|		КОГДА СвободныеЯчейки.Линия = ""087""
		|			ТОГДА 87
		|		КОГДА СвободныеЯчейки.Линия = ""88""
		|			ТОГДА 88
		|		КОГДА СвободныеЯчейки.Линия = ""088""
		|			ТОГДА 88
		|		КОГДА СвободныеЯчейки.Линия = ""89""
		|			ТОГДА 89
		|		КОГДА СвободныеЯчейки.Линия = ""089""
		|			ТОГДА 89
		|		КОГДА СвободныеЯчейки.Линия = ""90""
		|			ТОГДА 90
		|		КОГДА СвободныеЯчейки.Линия = ""090""
		|			ТОГДА 90
		|		КОГДА СвободныеЯчейки.Линия = ""91""
		|			ТОГДА 91
		|		КОГДА СвободныеЯчейки.Линия = ""091""
		|			ТОГДА 91
		|		КОГДА СвободныеЯчейки.Линия = ""92""
		|			ТОГДА 92
		|		КОГДА СвободныеЯчейки.Линия = ""092""
		|			ТОГДА 92
		|		КОГДА СвободныеЯчейки.Линия = ""93""
		|			ТОГДА 93
		|		КОГДА СвободныеЯчейки.Линия = ""093""
		|			ТОГДА 93
		|		КОГДА СвободныеЯчейки.Линия = ""94""
		|			ТОГДА 94
		|		КОГДА СвободныеЯчейки.Линия = ""094""
		|			ТОГДА 94
		|		КОГДА СвободныеЯчейки.Линия = ""95""
		|			ТОГДА 95
		|		КОГДА СвободныеЯчейки.Линия = ""095""
		|			ТОГДА 95
		|		КОГДА СвободныеЯчейки.Линия = ""96""
		|			ТОГДА 96
		|		КОГДА СвободныеЯчейки.Линия = ""096""
		|			ТОГДА 96
		|		КОГДА СвободныеЯчейки.Линия = ""97""
		|			ТОГДА 97
		|		КОГДА СвободныеЯчейки.Линия = ""097""
		|			ТОГДА 97
		|		КОГДА СвободныеЯчейки.Линия = ""98""
		|			ТОГДА 98
		|		КОГДА СвободныеЯчейки.Линия = ""098""
		|			ТОГДА 98
		|		КОГДА СвободныеЯчейки.Линия = ""99""
		|			ТОГДА 99
		|		КОГДА СвободныеЯчейки.Линия = ""099""
		|			ТОГДА 99
		|		КОГДА СвободныеЯчейки.Линия = ""100""
		|			ТОГДА 100
		|		КОГДА СвободныеЯчейки.Линия = ""0100""
		|			ТОГДА 100
		|		ИНАЧЕ СвободныеЯчейки.Линия
		|	КОНЕЦ КАК Линия,
		|	СвободныеЯчейки.Секция,
		|	СвободныеЯчейки.Стеллаж,
		|	СвободныеЯчейки.Ярус,
		|	СвободныеЯчейки.ПорядокОбхода,
		|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) КАК КоличествоПаллет,
		|	СвободныеЯчейки.НомерРяда_Пролета,
		|	СвободныеЯчейки.Зона
		|ПОМЕСТИТЬ ТаблицаАнализаСвободныхЯчеек
		|ИЗ
		|	СвободныеЯчейки КАК СвободныеЯчейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПаллетМестГруппировка КАК ТаблицаПаллетМестГруппировка
		|		ПО СвободныеЯчейки.Ячейка = ТаблицаПаллетМестГруппировка.Ячейка
		|ГДЕ
		|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) >= 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПаллетМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПаллетМестГруппировка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СвободныеЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Зона
		|ПОМЕСТИТЬ СвободныеЯчейки
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек";
		
		Запрос.УстановитьПараметр("ТаблицаПаллетМест", ТаблицаПаллетМест);
		
		//@skip-warning
		РезультатЗапроса = Запрос.Выполнить();	

	
	КонецПроцедуры

	
Функция ЗапроситьИнформациюПоЯчейкам(МенеджерВременныхТаблиц,КоличествоПаллетКРазмещению=0,СкладскоеПомещениеКРазмещению,ТаблицаПаллетМест=Неопределено,СтруктураДанных)
	ЗапроситьИнформациюПоЯчейкамОбщийФрагмент(ТаблицаПаллетМест, МенеджерВременныхТаблиц);
	РезультатЗапроса=Неопределено;
	Если СкладскоеПомещениеКРазмещению=Неопределено Тогда 
		СкладскоеПомещениеКРазмещению=Справочники.итСкладскиеПомещения.ПустаяСсылка();
	КонецЕсли;	
		
	Если  СтруктураДанных.Стратегия="РазмещениеТовараСОграничиниемПоЛиниям" Тогда
		СтруктураДанных.Вставить("СкладскоеПомещениеКРазмещению",СкладскоеПомещениеКРазмещению);
		РезультатЗапроса=ЗапроситьИнформациюПоЯчейкамНоваяОграниченияПоЛиниям(МенеджерВременныхТаблиц,СтруктураДанных);
	КонецЕсли;
	Если  СтруктураДанных.Стратегия="ПоискЯчеекРазмещенияВРядИлиЛинию" Тогда
		СтруктураДанных.Вставить("СкладскоеПомещениеКРазмещению",СкладскоеПомещениеКРазмещению);
		СтруктураДанных.Вставить("КоличествоПаллетКРазмещению",КоличествоПаллетКРазмещению);
		РезультатЗапроса=ЗапроситьИнформациюПоЯчейкамНоваяВРядИлиЛинию(МенеджерВременныхТаблиц,СтруктураДанных);
	КонецЕсли;
	Если СтруктураДанных.Стратегия = "ПоискЯчеекРазмещенияБлижайшаяКЗонеПриемкиТолькоЯчейкиХранения" или СтруктураДанных.Стратегия = "ПоискЯчеекРазмещенияБлижайшаяКЗонеПриемки" Тогда 
		СтруктураДанных.Вставить("СкладскоеПомещениеКРазмещению",СкладскоеПомещениеКРазмещению);	
		РезультатЗапроса=ЗапроситьИнформациюПоЯчейкамРядомСПриемкой(МенеджерВременныхТаблиц,СтруктураДанных);
	КонецЕсли;
	Если СтруктураДанных.Стратегия = "РаместитьТоварПоУчасткамПриоритетХранения" или СтруктураДанных.Стратегия = "РаместитьТоварПоУчасткамПриоритетПикинга" Тогда
		РезультатЗапроса=ЗапроситьИнформациюПоЯчейкамСогласноУчасткамОПТ(МенеджерВременныхТаблиц,СтруктураДанных);
    КонецЕсли;
	
	Возврат РезультатЗапроса;
КонецФункции


Процедура ЗапроситьИнформациюПоЯчейкамОбщийФрагмент(ТаблицаПаллетМест=Неопределено,  МенеджерВременныхТаблиц)

	Если ТаблицаПаллетМест=Неопределено Тогда
		ТаблицаПаллетМест=новый ТаблицаЗначений;
		ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
		ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПаллетМест.Ячейка,
	|	ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест
	|ПОМЕСТИТЬ ТаблицаПаллетМест
	|ИЗ
	|	&ТаблицаПаллетМест КАК ТаблицаПаллетМест
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПаллетМест.Ячейка,
	|	СУММА(ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест) КАК КоличествоЗанятыхПаллетМест
	|ПОМЕСТИТЬ ТаблицаПаллетМестГруппировка
	|ИЗ
	|	ТаблицаПаллетМест КАК ТаблицаПаллетМест
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПаллетМест.Ячейка
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныеЯчейки.Ячейка,
	|	СвободныеЯчейки.СкладскоеПомещение,
	|	ВЫБОР
	|		КОГДА СвободныеЯчейки.Линия = ""0""
	|			ТОГДА 0
	|		КОГДА СвободныеЯчейки.Линия = ""00""
	|			ТОГДА 0
	|		КОГДА СвободныеЯчейки.Линия = ""1""
	|			ТОГДА 1
	|		КОГДА СвободныеЯчейки.Линия = ""01""
	|			ТОГДА 1
	|		КОГДА СвободныеЯчейки.Линия = ""2""
	|			ТОГДА 2
	|		КОГДА СвободныеЯчейки.Линия = ""02""
	|			ТОГДА 2
	|		КОГДА СвободныеЯчейки.Линия = ""3""
	|			ТОГДА 3
	|		КОГДА СвободныеЯчейки.Линия = ""03""
	|			ТОГДА 3
	|		КОГДА СвободныеЯчейки.Линия = ""4""
	|			ТОГДА 4
	|		КОГДА СвободныеЯчейки.Линия = ""04""
	|			ТОГДА 4
	|		КОГДА СвободныеЯчейки.Линия = ""5""
	|			ТОГДА 5
	|		КОГДА СвободныеЯчейки.Линия = ""05""
	|			ТОГДА 5
	|		КОГДА СвободныеЯчейки.Линия = ""6""
	|			ТОГДА 6
	|		КОГДА СвободныеЯчейки.Линия = ""06""
	|			ТОГДА 6
	|		КОГДА СвободныеЯчейки.Линия = ""7""
	|			ТОГДА 7
	|		КОГДА СвободныеЯчейки.Линия = ""07""
	|			ТОГДА 7
	|		КОГДА СвободныеЯчейки.Линия = ""8""
	|			ТОГДА 8
	|		КОГДА СвободныеЯчейки.Линия = ""08""
	|			ТОГДА 8
	|		КОГДА СвободныеЯчейки.Линия = ""9""
	|			ТОГДА 9
	|		КОГДА СвободныеЯчейки.Линия = ""09""
	|			ТОГДА 9
	|		КОГДА СвободныеЯчейки.Линия = ""10""
	|			ТОГДА 10
	|		КОГДА СвободныеЯчейки.Линия = ""010""
	|			ТОГДА 10
	|		КОГДА СвободныеЯчейки.Линия = ""11""
	|			ТОГДА 11
	|		КОГДА СвободныеЯчейки.Линия = ""011""
	|			ТОГДА 11
	|		КОГДА СвободныеЯчейки.Линия = ""12""
	|			ТОГДА 12
	|		КОГДА СвободныеЯчейки.Линия = ""012""
	|			ТОГДА 12
	|		КОГДА СвободныеЯчейки.Линия = ""13""
	|			ТОГДА 13
	|		КОГДА СвободныеЯчейки.Линия = ""013""
	|			ТОГДА 13
	|		КОГДА СвободныеЯчейки.Линия = ""14""
	|			ТОГДА 14
	|		КОГДА СвободныеЯчейки.Линия = ""014""
	|			ТОГДА 14
	|		КОГДА СвободныеЯчейки.Линия = ""15""
	|			ТОГДА 15
	|		КОГДА СвободныеЯчейки.Линия = ""015""
	|			ТОГДА 15
	|		КОГДА СвободныеЯчейки.Линия = ""16""
	|			ТОГДА 16
	|		КОГДА СвободныеЯчейки.Линия = ""016""
	|			ТОГДА 16
	|		КОГДА СвободныеЯчейки.Линия = ""17""
	|			ТОГДА 17
	|		КОГДА СвободныеЯчейки.Линия = ""017""
	|			ТОГДА 17
	|		КОГДА СвободныеЯчейки.Линия = ""18""
	|			ТОГДА 18
	|		КОГДА СвободныеЯчейки.Линия = ""018""
	|			ТОГДА 18
	|		КОГДА СвободныеЯчейки.Линия = ""19""
	|			ТОГДА 19
	|		КОГДА СвободныеЯчейки.Линия = ""019""
	|			ТОГДА 19
	|		КОГДА СвободныеЯчейки.Линия = ""20""
	|			ТОГДА 20
	|		КОГДА СвободныеЯчейки.Линия = ""020""
	|			ТОГДА 20
	|		КОГДА СвободныеЯчейки.Линия = ""21""
	|			ТОГДА 21
	|		КОГДА СвободныеЯчейки.Линия = ""021""
	|			ТОГДА 21
	|		КОГДА СвободныеЯчейки.Линия = ""22""
	|			ТОГДА 22
	|		КОГДА СвободныеЯчейки.Линия = ""022""
	|			ТОГДА 22
	|		КОГДА СвободныеЯчейки.Линия = ""23""
	|			ТОГДА 23
	|		КОГДА СвободныеЯчейки.Линия = ""023""
	|			ТОГДА 23
	|		КОГДА СвободныеЯчейки.Линия = ""24""
	|			ТОГДА 24
	|		КОГДА СвободныеЯчейки.Линия = ""024""
	|			ТОГДА 24
	|		КОГДА СвободныеЯчейки.Линия = ""25""
	|			ТОГДА 25
	|		КОГДА СвободныеЯчейки.Линия = ""025""
	|			ТОГДА 25
	|		КОГДА СвободныеЯчейки.Линия = ""26""
	|			ТОГДА 26
	|		КОГДА СвободныеЯчейки.Линия = ""026""
	|			ТОГДА 26
	|		КОГДА СвободныеЯчейки.Линия = ""27""
	|			ТОГДА 27
	|		КОГДА СвободныеЯчейки.Линия = ""027""
	|			ТОГДА 27
	|		КОГДА СвободныеЯчейки.Линия = ""28""
	|			ТОГДА 28
	|		КОГДА СвободныеЯчейки.Линия = ""028""
	|			ТОГДА 28
	|		КОГДА СвободныеЯчейки.Линия = ""29""
	|			ТОГДА 29
	|		КОГДА СвободныеЯчейки.Линия = ""029""
	|			ТОГДА 29
	|		КОГДА СвободныеЯчейки.Линия = ""30""
	|			ТОГДА 30
	|		КОГДА СвободныеЯчейки.Линия = ""030""
	|			ТОГДА 30
	|		КОГДА СвободныеЯчейки.Линия = ""31""
	|			ТОГДА 31
	|		КОГДА СвободныеЯчейки.Линия = ""031""
	|			ТОГДА 31
	|		КОГДА СвободныеЯчейки.Линия = ""32""
	|			ТОГДА 32
	|		КОГДА СвободныеЯчейки.Линия = ""032""
	|			ТОГДА 32
	|		КОГДА СвободныеЯчейки.Линия = ""33""
	|			ТОГДА 33
	|		КОГДА СвободныеЯчейки.Линия = ""033""
	|			ТОГДА 33
	|		КОГДА СвободныеЯчейки.Линия = ""34""
	|			ТОГДА 34
	|		КОГДА СвободныеЯчейки.Линия = ""034""
	|			ТОГДА 34
	|		КОГДА СвободныеЯчейки.Линия = ""35""
	|			ТОГДА 35
	|		КОГДА СвободныеЯчейки.Линия = ""035""
	|			ТОГДА 35
	|		КОГДА СвободныеЯчейки.Линия = ""36""
	|			ТОГДА 36
	|		КОГДА СвободныеЯчейки.Линия = ""036""
	|			ТОГДА 36
	|		КОГДА СвободныеЯчейки.Линия = ""37""
	|			ТОГДА 37
	|		КОГДА СвободныеЯчейки.Линия = ""037""
	|			ТОГДА 37
	|		КОГДА СвободныеЯчейки.Линия = ""38""
	|			ТОГДА 38
	|		КОГДА СвободныеЯчейки.Линия = ""038""
	|			ТОГДА 38
	|		КОГДА СвободныеЯчейки.Линия = ""39""
	|			ТОГДА 39
	|		КОГДА СвободныеЯчейки.Линия = ""039""
	|			ТОГДА 39
	|		КОГДА СвободныеЯчейки.Линия = ""40""
	|			ТОГДА 40
	|		КОГДА СвободныеЯчейки.Линия = ""040""
	|			ТОГДА 40
	|		КОГДА СвободныеЯчейки.Линия = ""41""
	|			ТОГДА 41
	|		КОГДА СвободныеЯчейки.Линия = ""041""
	|			ТОГДА 41
	|		КОГДА СвободныеЯчейки.Линия = ""42""
	|			ТОГДА 42
	|		КОГДА СвободныеЯчейки.Линия = ""042""
	|			ТОГДА 42
	|		КОГДА СвободныеЯчейки.Линия = ""43""
	|			ТОГДА 43
	|		КОГДА СвободныеЯчейки.Линия = ""043""
	|			ТОГДА 43
	|		КОГДА СвободныеЯчейки.Линия = ""44""
	|			ТОГДА 44
	|		КОГДА СвободныеЯчейки.Линия = ""044""
	|			ТОГДА 44
	|		КОГДА СвободныеЯчейки.Линия = ""45""
	|			ТОГДА 45
	|		КОГДА СвободныеЯчейки.Линия = ""045""
	|			ТОГДА 45
	|		КОГДА СвободныеЯчейки.Линия = ""46""
	|			ТОГДА 46
	|		КОГДА СвободныеЯчейки.Линия = ""046""
	|			ТОГДА 46
	|		КОГДА СвободныеЯчейки.Линия = ""47""
	|			ТОГДА 47
	|		КОГДА СвободныеЯчейки.Линия = ""047""
	|			ТОГДА 47
	|		КОГДА СвободныеЯчейки.Линия = ""48""
	|			ТОГДА 48
	|		КОГДА СвободныеЯчейки.Линия = ""048""
	|			ТОГДА 48
	|		КОГДА СвободныеЯчейки.Линия = ""49""
	|			ТОГДА 49
	|		КОГДА СвободныеЯчейки.Линия = ""049""
	|			ТОГДА 49
	|		КОГДА СвободныеЯчейки.Линия = ""50""
	|			ТОГДА 50
	|		КОГДА СвободныеЯчейки.Линия = ""050""
	|			ТОГДА 50
	|		КОГДА СвободныеЯчейки.Линия = ""51""
	|			ТОГДА 51
	|		КОГДА СвободныеЯчейки.Линия = ""051""
	|			ТОГДА 51
	|		КОГДА СвободныеЯчейки.Линия = ""52""
	|			ТОГДА 52
	|		КОГДА СвободныеЯчейки.Линия = ""052""
	|			ТОГДА 52
	|		КОГДА СвободныеЯчейки.Линия = ""53""
	|			ТОГДА 53
	|		КОГДА СвободныеЯчейки.Линия = ""053""
	|			ТОГДА 53
	|		КОГДА СвободныеЯчейки.Линия = ""54""
	|			ТОГДА 54
	|		КОГДА СвободныеЯчейки.Линия = ""054""
	|			ТОГДА 54
	|		КОГДА СвободныеЯчейки.Линия = ""55""
	|			ТОГДА 55
	|		КОГДА СвободныеЯчейки.Линия = ""055""
	|			ТОГДА 55
	|		КОГДА СвободныеЯчейки.Линия = ""56""
	|			ТОГДА 56
	|		КОГДА СвободныеЯчейки.Линия = ""056""
	|			ТОГДА 56
	|		КОГДА СвободныеЯчейки.Линия = ""57""
	|			ТОГДА 57
	|		КОГДА СвободныеЯчейки.Линия = ""057""
	|			ТОГДА 57
	|		КОГДА СвободныеЯчейки.Линия = ""58""
	|			ТОГДА 58
	|		КОГДА СвободныеЯчейки.Линия = ""058""
	|			ТОГДА 58
	|		КОГДА СвободныеЯчейки.Линия = ""59""
	|			ТОГДА 59
	|		КОГДА СвободныеЯчейки.Линия = ""059""
	|			ТОГДА 59
	|		КОГДА СвободныеЯчейки.Линия = ""60""
	|			ТОГДА 60
	|		КОГДА СвободныеЯчейки.Линия = ""060""
	|			ТОГДА 60
	|		КОГДА СвободныеЯчейки.Линия = ""61""
	|			ТОГДА 61
	|		КОГДА СвободныеЯчейки.Линия = ""061""
	|			ТОГДА 61
	|		КОГДА СвободныеЯчейки.Линия = ""62""
	|			ТОГДА 62
	|		КОГДА СвободныеЯчейки.Линия = ""062""
	|			ТОГДА 62
	|		КОГДА СвободныеЯчейки.Линия = ""63""
	|			ТОГДА 63
	|		КОГДА СвободныеЯчейки.Линия = ""063""
	|			ТОГДА 63
	|		КОГДА СвободныеЯчейки.Линия = ""64""
	|			ТОГДА 64
	|		КОГДА СвободныеЯчейки.Линия = ""064""
	|			ТОГДА 64
	|		КОГДА СвободныеЯчейки.Линия = ""65""
	|			ТОГДА 65
	|		КОГДА СвободныеЯчейки.Линия = ""065""
	|			ТОГДА 65
	|		КОГДА СвободныеЯчейки.Линия = ""66""
	|			ТОГДА 66
	|		КОГДА СвободныеЯчейки.Линия = ""066""
	|			ТОГДА 66
	|		КОГДА СвободныеЯчейки.Линия = ""67""
	|			ТОГДА 67
	|		КОГДА СвободныеЯчейки.Линия = ""067""
	|			ТОГДА 67
	|		КОГДА СвободныеЯчейки.Линия = ""68""
	|			ТОГДА 68
	|		КОГДА СвободныеЯчейки.Линия = ""068""
	|			ТОГДА 68
	|		КОГДА СвободныеЯчейки.Линия = ""69""
	|			ТОГДА 69
	|		КОГДА СвободныеЯчейки.Линия = ""069""
	|			ТОГДА 69
	|		КОГДА СвободныеЯчейки.Линия = ""70""
	|			ТОГДА 70
	|		КОГДА СвободныеЯчейки.Линия = ""070""
	|			ТОГДА 70
	|		КОГДА СвободныеЯчейки.Линия = ""71""
	|			ТОГДА 71
	|		КОГДА СвободныеЯчейки.Линия = ""071""
	|			ТОГДА 71
	|		КОГДА СвободныеЯчейки.Линия = ""72""
	|			ТОГДА 72
	|		КОГДА СвободныеЯчейки.Линия = ""072""
	|			ТОГДА 72
	|		КОГДА СвободныеЯчейки.Линия = ""73""
	|			ТОГДА 73
	|		КОГДА СвободныеЯчейки.Линия = ""073""
	|			ТОГДА 73
	|		КОГДА СвободныеЯчейки.Линия = ""74""
	|			ТОГДА 74
	|		КОГДА СвободныеЯчейки.Линия = ""074""
	|			ТОГДА 74
	|		КОГДА СвободныеЯчейки.Линия = ""75""
	|			ТОГДА 75
	|		КОГДА СвободныеЯчейки.Линия = ""075""
	|			ТОГДА 75
	|		КОГДА СвободныеЯчейки.Линия = ""76""
	|			ТОГДА 76
	|		КОГДА СвободныеЯчейки.Линия = ""076""
	|			ТОГДА 76
	|		КОГДА СвободныеЯчейки.Линия = ""77""
	|			ТОГДА 77
	|		КОГДА СвободныеЯчейки.Линия = ""077""
	|			ТОГДА 77
	|		КОГДА СвободныеЯчейки.Линия = ""78""
	|			ТОГДА 78
	|		КОГДА СвободныеЯчейки.Линия = ""078""
	|			ТОГДА 78
	|		КОГДА СвободныеЯчейки.Линия = ""79""
	|			ТОГДА 79
	|		КОГДА СвободныеЯчейки.Линия = ""079""
	|			ТОГДА 79
	|		КОГДА СвободныеЯчейки.Линия = ""80""
	|			ТОГДА 80
	|		КОГДА СвободныеЯчейки.Линия = ""080""
	|			ТОГДА 80
	|		КОГДА СвободныеЯчейки.Линия = ""81""
	|			ТОГДА 81
	|		КОГДА СвободныеЯчейки.Линия = ""081""
	|			ТОГДА 81
	|		КОГДА СвободныеЯчейки.Линия = ""82""
	|			ТОГДА 82
	|		КОГДА СвободныеЯчейки.Линия = ""082""
	|			ТОГДА 82
	|		КОГДА СвободныеЯчейки.Линия = ""83""
	|			ТОГДА 83
	|		КОГДА СвободныеЯчейки.Линия = ""083""
	|			ТОГДА 83
	|		КОГДА СвободныеЯчейки.Линия = ""84""
	|			ТОГДА 84
	|		КОГДА СвободныеЯчейки.Линия = ""084""
	|			ТОГДА 84
	|		КОГДА СвободныеЯчейки.Линия = ""85""
	|			ТОГДА 85
	|		КОГДА СвободныеЯчейки.Линия = ""085""
	|			ТОГДА 85
	|		КОГДА СвободныеЯчейки.Линия = ""86""
	|			ТОГДА 86
	|		КОГДА СвободныеЯчейки.Линия = ""086""
	|			ТОГДА 86
	|		КОГДА СвободныеЯчейки.Линия = ""87""
	|			ТОГДА 87
	|		КОГДА СвободныеЯчейки.Линия = ""087""
	|			ТОГДА 87
	|		КОГДА СвободныеЯчейки.Линия = ""88""
	|			ТОГДА 88
	|		КОГДА СвободныеЯчейки.Линия = ""088""
	|			ТОГДА 88
	|		КОГДА СвободныеЯчейки.Линия = ""89""
	|			ТОГДА 89
	|		КОГДА СвободныеЯчейки.Линия = ""089""
	|			ТОГДА 89
	|		КОГДА СвободныеЯчейки.Линия = ""90""
	|			ТОГДА 90
	|		КОГДА СвободныеЯчейки.Линия = ""090""
	|			ТОГДА 90
	|		КОГДА СвободныеЯчейки.Линия = ""91""
	|			ТОГДА 91
	|		КОГДА СвободныеЯчейки.Линия = ""091""
	|			ТОГДА 91
	|		КОГДА СвободныеЯчейки.Линия = ""92""
	|			ТОГДА 92
	|		КОГДА СвободныеЯчейки.Линия = ""092""
	|			ТОГДА 92
	|		КОГДА СвободныеЯчейки.Линия = ""93""
	|			ТОГДА 93
	|		КОГДА СвободныеЯчейки.Линия = ""093""
	|			ТОГДА 93
	|		КОГДА СвободныеЯчейки.Линия = ""94""
	|			ТОГДА 94
	|		КОГДА СвободныеЯчейки.Линия = ""094""
	|			ТОГДА 94
	|		КОГДА СвободныеЯчейки.Линия = ""95""
	|			ТОГДА 95
	|		КОГДА СвободныеЯчейки.Линия = ""095""
	|			ТОГДА 95
	|		КОГДА СвободныеЯчейки.Линия = ""96""
	|			ТОГДА 96
	|		КОГДА СвободныеЯчейки.Линия = ""096""
	|			ТОГДА 96
	|		КОГДА СвободныеЯчейки.Линия = ""97""
	|			ТОГДА 97
	|		КОГДА СвободныеЯчейки.Линия = ""097""
	|			ТОГДА 97
	|		КОГДА СвободныеЯчейки.Линия = ""98""
	|			ТОГДА 98
	|		КОГДА СвободныеЯчейки.Линия = ""098""
	|			ТОГДА 98
	|		КОГДА СвободныеЯчейки.Линия = ""99""
	|			ТОГДА 99
	|		КОГДА СвободныеЯчейки.Линия = ""099""
	|			ТОГДА 99
	|		КОГДА СвободныеЯчейки.Линия = ""100""
	|			ТОГДА 100
	|		КОГДА СвободныеЯчейки.Линия = ""0100""
	|			ТОГДА 100
	|		ИНАЧЕ СвободныеЯчейки.Линия
	|	КОНЕЦ КАК Линия,
	|	СвободныеЯчейки.Секция,
	|	СвободныеЯчейки.Стеллаж,
	|	СвободныеЯчейки.Ярус,
	|	СвободныеЯчейки.ПорядокОбхода,
	|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) КАК
	|		КоличествоПаллет,
	|	СвободныеЯчейки.НомерРяда_Пролета,
	|	СвободныеЯчейки.Зона
	|ПОМЕСТИТЬ ТаблицаАнализаСвободныхЯчеек
	|ИЗ
	|	СвободныеЯчейки КАК СвободныеЯчейки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПаллетМестГруппировка КАК ТаблицаПаллетМестГруппировка
	|		ПО СвободныеЯчейки.Ячейка = ТаблицаПаллетМестГруппировка.Ячейка
	|ГДЕ
	|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) >= 1
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПаллетМест
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПаллетМестГруппировка";
	
	Запрос.УстановитьПараметр("ТаблицаПаллетМест", ТаблицаПаллетМест);
	
	//@skip-warning
	РезультатЗапроса = Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗапроситьИнформациюПоЯчейкамНоваяОграниченияПоЛиниям(МенеджерВременныхТаблиц,СтруктураДанных)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
	|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
	|	ТаблицаАнализаСвободныхЯчеек.Секция,
	|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
	|	ТаблицаАнализаСвободныхЯчеек.Ярус,
	|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаАнализаСвободныхЯчеек.Зона,
	|	ВЫБОР
	|		КОГДА &РазмещатьПоБлижайшейЗонеПриемки
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода >= 0
	|						ТОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода
	|					ИНАЧЕ -(ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода)
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПорядокОбходаПоЗонеПриемки,
	|	ВЫБОР
	|		КОГДА &РазмещатьСПриоритетомХранения
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаАнализаСвободныхЯчеек.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Хранения)
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаАнализаСвободныхЯчеек.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Пикинга)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК ПриоритетЗоны
	|ПОМЕСТИТЬ ТаблицаОтбораСвободныхЯчеек
	|ИЗ
	|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(&СкладскоеПомещение, ЗНАЧЕНИЕ(Справочник.итСкладскиеПомещения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.итСкладскиеПомещения.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение = &СкладскоеПомещение
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвободныеЯчейки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
	|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаАнализаСвободныхЯчеек.Линия,
	|	ТаблицаАнализаСвободныхЯчеек.Секция,
	|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
	|	ТаблицаАнализаСвободныхЯчеек.Ярус,
	|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаАнализаСвободныхЯчеек.Зона
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОтбораСвободныхЯчеек.Ячейка КАК Ячейка,
	|	ТаблицаОтбораСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаОтбораСвободныхЯчеек.Линия КАК Линия,
	|	ТаблицаОтбораСвободныхЯчеек.Секция,
	|	ТаблицаОтбораСвободныхЯчеек.Стеллаж,
	|	ТаблицаОтбораСвободныхЯчеек.Ярус,
	|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемки
	|ИЗ
	|	ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
	|ГДЕ
	|	ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет >= 1
	|	И ТаблицаОтбораСвободныхЯчеек.Линия МЕЖДУ &ЛинияС И &ЛинияПо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОтбораСвободныхЯчеек.ПриоритетЗоны,
	|	ПорядокОбходаПоЗонеПриемки,
	|	Линия,
	|	Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОтбораСвободныхЯчеек";
	
	Запрос.УстановитьПараметр("ЛинияС",СтруктураДанных.ЛинияС);
	Запрос.УстановитьПараметр("ЛинияПо",СтруктураДанных.ЛинияПо);
	Запрос.УстановитьПараметр("СкладскоеПомещение",СтруктураДанных.СкладскоеПомещениеКРазмещению);
	Запрос.УстановитьПараметр("РазмещатьСПриоритетомХранения",СтруктураДанных.РазмещатьСПриоритетомХранения);
	Запрос.УстановитьПараметр("РазмещатьПоБлижайшейЗонеПриемки",СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки);
	Запрос.УстановитьПараметр("НачалоОтсчетаПорядкаОбхода",СтруктураДанных.НачалоОтсчетаПорядкаОбхода);
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция ЗапроситьИнформациюПоЯчейкамНоваяВРядИлиЛинию(МенеджерВременныхТаблиц,СтруктураДанных)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
	|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
	|	ТаблицаАнализаСвободныхЯчеек.Секция,
	|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
	|	ТаблицаАнализаСвободныхЯчеек.Ярус,
	|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаАнализаСвободныхЯчеек.Зона,
	|	ВЫБОР
	|		КОГДА &РазмещатьПоБлижайшейЗонеПриемки
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода >= 0
	|						ТОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода
	|					ИНАЧЕ -(ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода)
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПорядокОбходаПоЗонеПриемки,
	|	ВЫБОР
	|		КОГДА &РазмещатьСПриоритетомХранения
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаАнализаСвободныхЯчеек.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Хранения)
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриоритетЗоныХранения
	|ПОМЕСТИТЬ ТаблицаОтбораСвободныхЯчеек
	|ИЗ
	|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(&СкладскоеПомещение, ЗНАЧЕНИЕ(Справочник.итСкладскиеПомещения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.итСкладскиеПомещения.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение = &СкладскоеПомещение
	|		КОНЕЦ
	|	И ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВложенныйЗапрос.Линия, -1) КАК НомерЛинии,
	|	ВложенныйЗапрос.ПорядокОбходаПоЗонеПриемки
	|ПОМЕСТИТЬ ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОтбораСвободныхЯчеек.Линия КАК Линия,
	|		СУММА(ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет) КАК КоличествоПаллет,
	|		МИНИМУМ(ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки) КАК ПорядокОбходаПоЗонеПриемки
	|	ИЗ
	|		ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаОтбораСвободныхЯчеек.Линия) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.КоличествоПаллет >= &КоличествоПаллет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВложенныйЗапрос.НомерРяда_Пролета, -1) КАК НомерРяда_Пролета,
	|	ВложенныйЗапрос.ПорядокОбходаПоЗонеПриемки
	|ПОМЕСТИТЬ РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|		СУММА(ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет) КАК КоличествоПаллет,
	|		МИНИМУМ(ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки) КАК ПорядокОбходаПоЗонеПриемки
	|	ИЗ
	|		ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.КоличествоПаллет >= &КоличествоПаллет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ячейка,
	|	ВложенныйЗапрос.СкладскоеПомещение,
	|	ВложенныйЗапрос.Линия,
	|	ВложенныйЗапрос.Секция,
	|	ВложенныйЗапрос.Стеллаж,
	|	ВложенныйЗапрос.Ярус,
	|	ВложенныйЗапрос.ПорядокОбхода,
	|	ВложенныйЗапрос.КоличествоПаллет,
	|	ВложенныйЗапрос.НомерРяда_Пролета,
	|	ВложенныйЗапрос.ЕстьРядУдовлетворяющийУсловиям,
	|	ВложенныйЗапрос.ЕстьЛинияУдовлетворяющаяУсловию,
	|	ВложенныйЗапрос.Зона,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ЭтоЛинияПоУсловия
	|			ТОГДА ВложенныйЗапрос.ПорядокОбходаПоЗонеПриемкиЛинии
	|		КОГДА ВложенныйЗапрос.ЭтоРядПоУсловию
	|			ТОГДА ВложенныйЗапрос.ПорядокОбходаПоЗонеПриемкиРяда
	|		ИНАЧЕ ВложенныйЗапрос.ПорядокОбходаПоЗонеПриемки
	|	КОНЕЦ КАК ПорядокОбходаПоЗонеПриемки,
	|	ВложенныйЗапрос.ПриоритетЗоныХранения
	|ПОМЕСТИТЬ ДанныеОтборов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОтбораСвободныхЯчеек.Ячейка КАК Ячейка,
	|		ТаблицаОтбораСвободныхЯчеек.СкладскоеПомещение КАК СкладскоеПомещение,
	|		ТаблицаОтбораСвободныхЯчеек.Линия КАК Линия,
	|		ТаблицаОтбораСвободныхЯчеек.Секция КАК Секция,
	|		ТаблицаОтбораСвободныхЯчеек.Стеллаж КАК Стеллаж,
	|		ТаблицаОтбораСвободныхЯчеек.Ярус КАК Ярус,
	|		ТаблицаОтбораСвободныхЯчеек.ПорядокОбхода КАК ПорядокОбхода,
	|		ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет КАК КоличествоПаллет,
	|		ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|		ВложенныйЗапрос.ЕстьРядУдовлетворяющийУсловиям КАК ЕстьРядУдовлетворяющийУсловиям,
	|		ВложенныйЗапрос.ЕстьЛинияУдовлетворяющаяУсловию КАК ЕстьЛинияУдовлетворяющаяУсловию,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаОтбораСвободныхЯчеек.Линия, 0) = ЕСТЬNULL(ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии.НомерЛинии, -1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоЛинияПоУсловия,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета, 0) = ЕСТЬNULL(РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду.НомерРяда_Пролета, -1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоРядПоУсловию,
	|		ТаблицаОтбораСвободныхЯчеек.Зона КАК Зона,
	|		ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемки,
	|		ТаблицаОтбораСвободныхЯчеек.ПриоритетЗоныХранения КАК ПриоритетЗоныХранения,
	|		РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемкиРяда,
	|		ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемкиЛинии
	|	ИЗ
	|		ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МАКСИМУМ(ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета, 0) = ЕСТЬNULL(РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду.НомерРяда_Пролета, -1)
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК ЕстьРядУдовлетворяющийУсловиям,
	|				МАКСИМУМ(ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаОтбораСвободныхЯчеек.Линия, 0) = ЕСТЬNULL(ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии.НомерЛинии, -1)
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК ЕстьЛинияУдовлетворяющаяУсловию
	|			ИЗ
	|				ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
	|					ЛЕВОЕ СОЕДИНЕНИЕ РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду КАК РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду
	|					ПО (РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду.НомерРяда_Пролета = ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета)
	|					ЛЕВОЕ СОЕДИНЕНИЕ ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии КАК ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии
	|					ПО ТаблицаОтбораСвободныхЯчеек.Линия = ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии.НомерЛинии) КАК ВложенныйЗапрос
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии КАК ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии
	|			ПО ТаблицаОтбораСвободныхЯчеек.Линия = ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии.НомерЛинии
	|			ЛЕВОЕ СОЕДИНЕНИЕ РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду КАК РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду
	|			ПО ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета = РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду.НомерРяда_Пролета) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВложенныйЗапрос.ЕстьЛинияУдовлетворяющаяУсловию > 0
	|				ТОГДА ВложенныйЗапрос.ЭтоЛинияПоУсловия
	|			КОГДА ВложенныйЗапрос.ЕстьРядУдовлетворяющийУсловиям > 0
	|				ТОГДА ВложенныйЗапрос.ЭтоРядПоУсловию
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвободныеЯчейки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
	|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаАнализаСвободныхЯчеек.Линия,
	|	ТаблицаАнализаСвободныхЯчеек.Секция,
	|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
	|	ТаблицаАнализаСвободныхЯчеек.Ярус,
	|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаАнализаСвободныхЯчеек.Зона
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОтборов.Ячейка КАК Ячейка,
	|	ДанныеОтборов.СкладскоеПомещение КАК СкладскоеПомещение,
	|	ДанныеОтборов.Линия КАК Линия,
	|	ДанныеОтборов.Секция,
	|	ДанныеОтборов.Стеллаж,
	|	ДанныеОтборов.Ярус,
	|	ДанныеОтборов.ПорядокОбхода,
	|	ДанныеОтборов.КоличествоПаллет,
	|	ДанныеОтборов.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	ДанныеОтборов.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемки
	|ИЗ
	|	ДанныеОтборов КАК ДанныеОтборов
	|ГДЕ
	|	ДанныеОтборов.КоличествоПаллет > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОбходаПоЗонеПриемки,
	|	СкладскоеПомещение,
	|	НомерРяда_Пролета,
	|	Линия,
	|	ДанныеОтборов.ПриоритетЗоныХранения,
	|	Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОтбораСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеОтборов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЛинияУдовлетворяющаяУсловиямРазмещенияНа1Линии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РядУдовлетоваряющийУсловиямРазмещенияНа1Ряду";
	
	Запрос.УстановитьПараметр("СкладскоеПомещение",СтруктураДанных.СкладскоеПомещениеКРазмещению);
	Запрос.УстановитьПараметр("РазмещатьСПриоритетомХранения",СтруктураДанных.РазмещатьСПриоритетомХранения);
	Запрос.УстановитьПараметр("РазмещатьПоБлижайшейЗонеПриемки",СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки);
	Запрос.УстановитьПараметр("НачалоОтсчетаПорядкаОбхода",СтруктураДанных.НачалоОтсчетаПорядкаОбхода);
	Запрос.УстановитьПараметр("КоличествоПаллет",СтруктураДанных.КоличествоПаллетКРазмещению);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапроситьИнформациюПоЯчейкамРядомСПриемкой(МенеджерВременныхТаблиц,СтруктураДанных)
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
	|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
	|	ТаблицаАнализаСвободныхЯчеек.Секция,
	|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
	|	ТаблицаАнализаСвободныхЯчеек.Ярус,
	|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаАнализаСвободныхЯчеек.Зона,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода >= 0
	|			ТОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода
	|		ИНАЧЕ -(ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода)
	|	КОНЕЦ КАК ПорядокОбходаПоЗонеПриемки
	|ПОМЕСТИТЬ ТаблицаОтбораСвободныхЯчеек
	|ИЗ
	|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(&СкладскоеПомещение, ЗНАЧЕНИЕ(Справочник.итСкладскиеПомещения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.итСкладскиеПомещения.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение = &СкладскоеПомещение
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвободныеЯчейки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
	|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаАнализаСвободныхЯчеек.Линия,
	|	ТаблицаАнализаСвободныхЯчеек.Секция,
	|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
	|	ТаблицаАнализаСвободныхЯчеек.Ярус,
	|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаАнализаСвободныхЯчеек.Зона
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОтбораСвободныхЯчеек.Ячейка КАК Ячейка,
	|	ТаблицаОтбораСвободныхЯчеек.СкладскоеПомещение,
	|	ТаблицаОтбораСвободныхЯчеек.Линия КАК Линия,
	|	ТаблицаОтбораСвободныхЯчеек.Секция,
	|	ТаблицаОтбораСвободныхЯчеек.Стеллаж,
	|	ТаблицаОтбораСвободныхЯчеек.Ярус,
	|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбхода,
	|	ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет,
	|	ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета,
	|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемки
	|ИЗ
	|	ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
	|ГДЕ
	|	ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОбходаПоЗонеПриемки,
	|	Линия,
	|	Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОтбораСвободныхЯчеек";
	Запрос.УстановитьПараметр("СкладскоеПомещение",СтруктураДанных.СкладскоеПомещениеКРазмещению);
	Запрос.УстановитьПараметр("НачалоОтсчетаПорядкаОбхода",СтруктураДанных.НачалоОтсчетаПорядкаОбхода);
	
	Возврат Запрос.Выполнить();
	
	
КонецФункции

Функция ТекстЗапросаПоискаЯчеекРазмещенияОПТ()
	Текст="ВЫБРАТЬ
	      |	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	      |	Товары.Номенклатура КАК Номенклатура,
	      |	Товары.СерияНоменклатуры КАК СерияНоменклатуры,
	      |	Товары.ЯчейкаОтправитель КАК ЯчейкаОтправитель
	      |ПОМЕСТИТЬ ТоварыДокумента
	      |ИЗ
	      |	&Товары КАК Товары
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ТоварыДокумента.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	      |	ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	      |	ВЫРАЗИТЬ(ТоварыДокумента.СерияНоменклатуры КАК Справочник.СерииНоменклатуры) КАК СерияНоменклатуры,
	      |	ВЫБОР
	      |		КОГДА &СкладскоеПомещение = ЗНАЧЕНИЕ(Справочник.ИтСкладскиеПомещения.ПустаяСсылка)
	      |			ТОГДА ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура).итПреоритетнаяЗонаРазмещения
	      |		ИНАЧЕ &СкладскоеПомещение
	      |	КОНЕЦ КАК СкладскоеПомещение,
	      |	ЛОЖЬ КАК КарантинПаллеты,
	      |	ВЫРАЗИТЬ(ТоварыДокумента.ЯчейкаОтправитель КАК Справочник.итСкладскиеЯчейки) КАК ЯчейкаОтправитель,
	      |	ЕСТЬNULL(ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних.АссортиментныйУчастокСклада, ЗНАЧЕНИЕ(Справочник.ит_WMS_АссортиментныеУчасткиСклада.ПустаяСсылка)) КАК АссортиментныйУчастокСклада
	      |ПОМЕСТИТЬ ТаблицаТоваровЗаготокаДляОбработки
	      |ИЗ
	      |	ТоварыДокумента КАК ТоварыДокумента
	      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчастка.СрезПоследних(, Организация = &Организация) КАК ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних
	      |		ПО ТоварыДокумента.Номенклатура = ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних.Номенклатура
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ТоварыДокумента.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.Номенклатура) КАК КоличествоРазличнойНомеклатуры,
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.СерияНоменклатуры) КАК КоличествоРазличныхСерий,
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.ЯчейкаОтправитель) КАК КоличествоРазличныхЯчеекОтправителей
	      |ПОМЕСТИТЬ РабиениеНаОднородныеНеОднородныеПаллеты
	      |ИЗ
	      |	ТоварыДокумента КАК ТоварыДокумента
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ТоварыДокумента.ИдентификаторУпаковки
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	РабиениеНаОднородныеНеОднородныеПаллеты.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	      |ПОМЕСТИТЬ ОднородныеПаллеты
	      |ИЗ
	      |	РабиениеНаОднородныеНеОднородныеПаллеты КАК РабиениеНаОднородныеНеОднородныеПаллеты
	      |ГДЕ
	      |	РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличнойНомеклатуры = 1
	      |	И РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличныхСерий = 1
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	РабиениеНаОднородныеНеОднородныеПаллеты.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	      |ПОМЕСТИТЬ НеОднородныеПаллеты
	      |ИЗ
	      |	РабиениеНаОднородныеНеОднородныеПаллеты КАК РабиениеНаОднородныеНеОднородныеПаллеты
	      |ГДЕ
	      |	РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличнойНомеклатуры > 1
	      |	И РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличныхСерий > 1
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	      |	ТаблицаТоваровЗаготокаДляОбработки.Номенклатура КАК Номенклатура,
	      |	ТаблицаТоваровЗаготокаДляОбработки.СкладскоеПомещение КАК НоменклатураитПреоритетнаяЗонаРазмещения,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК КоличествоПаллетНоменклатуры,
	      |	ТаблицаТоваровЗаготокаДляОбработки.СерияНоменклатуры КАК СерияНоменклатуры,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК КоличествоРазличныхЯчеекОтправителей,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
	      |	ТаблицаТоваровЗаготокаДляОбработки.АссортиментныйУчастокСклада КАК АссортиментныйУчастокСклада
	      |ИЗ
	      |	ОднородныеПаллеты КАК ОднородныеПаллеты
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
	      |		ПО ОднородныеПаллеты.ИдентификаторУпаковки = ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
	      |ГДЕ
	      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ЛОЖЬ
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	СерияНоменклатуры
	      |ИТОГИ
	      |	МАКСИМУМ(НоменклатураитПреоритетнаяЗонаРазмещения),
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоПаллетНоменклатуры),
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоРазличныхЯчеекОтправителей),
	      |	МАКСИМУМ(ЯчейкаОтправитель),
	      |	МАКСИМУМ(АссортиментныйУчастокСклада)
	      |ПО
	      |	Номенклатура,
	      |	ИдентификаторУпаковки
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	      |	ТаблицаТоваровЗаготокаДляОбработки.СкладскоеПомещение КАК НоменклатураитПреоритетнаяЗонаРазмещения,
	      |	ТаблицаТоваровЗаготокаДляОбработки.Номенклатура КАК Номенклатура,
	      |	ТаблицаТоваровЗаготокаДляОбработки.СкладскоеПомещение КАК СкладскоеПомещение,
	      |	ТаблицаТоваровЗаготокаДляОбработки.СерияНоменклатуры КАК СерияНоменклатуры,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК КоличествоРазличныхЯчеекОтправителей,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
	      |	ТаблицаТоваровЗаготокаДляОбработки.АссортиментныйУчастокСклада КАК АссортиментныйУчастокСклада
	      |ИЗ
	      |	НеОднородныеПаллеты КАК НеОднородныеПаллеты
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
	      |		ПО НеОднородныеПаллеты.ИдентификаторУпаковки = ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
	      |ГДЕ
	      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ЛОЖЬ
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	СерияНоменклатуры
	      |ИТОГИ
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НоменклатураитПреоритетнаяЗонаРазмещения),
	      |	МАКСИМУМ(СкладскоеПомещение),
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоРазличныхЯчеекОтправителей),
	      |	МАКСИМУМ(ЯчейкаОтправитель),
	      |	МАКСИМУМ(АссортиментныйУчастокСклада)
	      |ПО
	      |	ИдентификаторУпаковки
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	      |	&ЗонаКарантина КАК НоменклатураитПреоритетнаяЗонаРазмещения,
	      |	&ЗонаКарантина КАК СкладскоеПомещение,
	      |	ТаблицаТоваровЗаготокаДляОбработки.Номенклатура КАК Номенклатура,
	      |	ТаблицаТоваровЗаготокаДляОбработки.СерияНоменклатуры КАК СерияНоменклатуры,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК КоличествоРазличныхЯчеекОтправителей,
	      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК ЯчейкаОтправитель
	      |ИЗ
	      |	ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
	      |ГДЕ
	      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ИСТИНА
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	СерияНоменклатуры
	      |ИТОГИ
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НоменклатураитПреоритетнаяЗонаРазмещения),
	      |	МАКСИМУМ(СкладскоеПомещение),
	      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоРазличныхЯчеекОтправителей),
	      |	МАКСИМУМ(ЯчейкаОтправитель)
	      |ПО
	      |	ИдентификаторУпаковки";
	Возврат Текст;
	КонецФункции

Процедура ЗапросСвободныхЯчеекСогласноПаллетМестОпт(МенеджерЗапроса,СтруктураДанных,ВидСкладскойДеятельности=Неопределено)	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итТоварыВЯчейках.Номенклатура КАК Номенклатура,
	|	итТоварыВЯчейках.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итТоварыВЯчейках.ДатаРозлива КАК ДатаРозлива,
	|	итТоварыВЯчейках.Качество КАК Качество,
	|	итТоварыВЯчейках.Организация КАК Организация,
	|	итТоварыВЯчейках.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итТоварыВЯчейках.Склад КАК Склад,
	|	итТоварыВЯчейках.Характеристика КАК Характеристика,
	|	итТоварыВЯчейках.Ячейка КАК Ячейка,
	|	СУММА(ВЫБОР
	|			КОГДА итТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА итТоварыВЯчейках.Количество + итТоварыВЯчейках.КРазмещению
	|			ИНАЧЕ -(итТоварыВЯчейках.Количество + итТоварыВЯчейках.КРазмещению)
	|		КОНЕЦ) КАК КоличествоДвиженияДокумента
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках КАК итТоварыВЯчейках
	|ГДЕ
	|	итТоварыВЯчейках.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	итТоварыВЯчейках.ДатаРозлива,
	|	итТоварыВЯчейках.ИдентификаторУпаковки,
	|	итТоварыВЯчейках.Качество,
	|	итТоварыВЯчейках.Номенклатура,
	|	итТоварыВЯчейках.Организация,
	|	итТоварыВЯчейках.СерияНоменклатуры,
	|	итТоварыВЯчейках.Склад,
	|	итТоварыВЯчейках.Характеристика,
	|	итТоварыВЯчейках.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	(итТоварыВЯчейкахОстатки.КоличествоОстаток + итТоварыВЯчейкахОстатки.КРазмещениюОстаток + ЕСТЬNULL(ДвиженияДокумента.КоличествоДвиженияДокумента, 0)) / ВЫБОР
	|		КОГДА ЕСТЬNULL(итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 0)
	|	КОНЕЦ КАК ПаллетВЯчейке
	|ПОМЕСТИТЬ ПаллетыВЯчейках
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияДокумента КАК ДвиженияДокумента
	|		ПО итТоварыВЯчейкахОстатки.Организация = ДвиженияДокумента.Организация
	|			И итТоварыВЯчейкахОстатки.Склад = ДвиженияДокумента.Склад
	|			И итТоварыВЯчейкахОстатки.ИдентификаторУпаковки = ДвиженияДокумента.ИдентификаторУпаковки
	|			И итТоварыВЯчейкахОстатки.Ячейка = ДвиженияДокумента.Ячейка
	|			И итТоварыВЯчейкахОстатки.Номенклатура = ДвиженияДокумента.Номенклатура
	|			И итТоварыВЯчейкахОстатки.Характеристика = ДвиженияДокумента.Характеристика
	|			И итТоварыВЯчейкахОстатки.СерияНоменклатуры = ДвиженияДокумента.СерияНоменклатуры
	|			И итТоварыВЯчейкахОстатки.ДатаРозлива = ДвиженияДокумента.ДатаРозлива
	|			И итТоварыВЯчейкахОстатки.Качество = ДвиженияДокумента.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итСкладскиеЯчейки.Ссылка КАК Ячейка,
	|	ЕСТЬNULL(итСкладскиеЯчейки.КоличествоПалет, 0) - ЕСТЬNULL(ПаллетыВЯчейках.ПаллетВЯчейке, 0) КАК КоличествоПаллет,
	|	итСкладскиеЯчейки.СкладскоеПомещение КАК СкладскоеПомещение,
	|	итСкладскиеЯчейки.Секция КАК Секция,
	|	итСкладскиеЯчейки.Стеллаж КАК Стеллаж,
	|	итСкладскиеЯчейки.Линия КАК Линия,
	|	итСкладскиеЯчейки.Типоразмер КАК Типоразмер,
	|	итСкладскиеЯчейки.ПорядокОбхода КАК ПорядокОбхода,
	|	итСкладскиеЯчейки.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	итСкладскиеЯчейки.Ярус КАК Ярус,
	|	итСкладскиеЯчейки.Зона КАК Зона
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	Справочник.итСкладскиеЯчейки КАК итСкладскиеЯчейки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПаллетыВЯчейках КАК ПаллетыВЯчейках
	|		ПО (ПаллетыВЯчейках.Ячейка = итСкладскиеЯчейки.Ссылка)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ВидСкладскойДеятельности = ЗНАЧЕНИЕ(Перечисление.ит_wms_ВидыСкладскойДеятельности.Оптовая)
	|				ТОГДА ЕСТЬNULL(итСкладскиеЯчейки.КоличествоПалет, 0) - ЕСТЬNULL(ПаллетыВЯчейках.ПаллетВЯчейке, 0) >= 1
	|			ИНАЧЕ ЕСТЬNULL(итСкладскиеЯчейки.КоличествоПалет, 0) - ЕСТЬNULL(ПаллетыВЯчейках.ПаллетВЯчейке, 0) > 0
	|		КОНЕЦ
	|	И итСкладскиеЯчейки.ЭтоГруппа = ЛОЖЬ
	|	И итСкладскиеЯчейки.Заблокирована = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &РазмещениеПоЗонам
	|				ТОГДА итСкладскиеЯчейки.Зона В (&МассивЗонКРазмещению)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ итСкладскиеЯчейки.ПометкаУдаления";
	
	Если СтруктураДанных.Свойство("МассивЗонКРазмещению") Тогда 
		РазмещениеПоЗонам=Истина;
		МассивЗонКРазмещению=СтруктураДанных.МассивЗонКРазмещению;
	иначе
		РазмещениеПоЗонам=Ложь;
		МассивЗонКРазмещению=новый Массив;
	КонецЕсли;
	Запрос.УстановитьПараметр("РазмещениеПоЗонам",РазмещениеПоЗонам);
	Запрос.УстановитьПараметр("МассивЗонКРазмещению",МассивЗонКРазмещению);
	Запрос.УстановитьПараметр("ВидСкладскойДеятельности",ВидСкладскойДеятельности);
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	
	//@skip-warning
	РезультатЗапроса = Запрос.Выполнить();	
КонецПроцедуры

Функция ЗапроситьИнформациюПоЯчейкамСогласноУчасткамОПТ(МенеджерВременныхТаблиц,СтруктураДанных)
	АссортиментныйУчасток=Справочники.ит_WMS_АссортиментныеУчасткиСклада.ПустаяСсылка();
	Если СтруктураДанных.Свойство("АссортиментныйУчасток") Тогда 
		АссортиментныйУчасток=СтруктураДанных.АссортиментныйУчасток;
	Иначе                                      
		АссортиментныйУчасток=СтруктураДанных.ТекущийАссортиментныйУчастокСклада;
	КонецЕсли;
	ТекущийКоэффициентПаллеты=0;
	Если СтруктураДанных.Свойство("ТекущийКоэффициентПаллеты") Тогда 
		ТекущийКоэффициентПаллеты=СтруктураДанных.ТекущийКоэффициентПаллеты;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка
		|ПОМЕСТИТЬ ЯчейкиАссортиметногоУчастка
		|ИЗ
		|	Справочник.ит_WMS_АссортиментныеУчасткиСклада.СоставЯчеек КАК ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек
		|ГДЕ
		|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ссылка = &АссортиментныйУчасток
		|	И ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка.ВидСкладскойДеятельности = ЗНАЧЕНИЕ(Перечисление.ит_WMS_ВидыСкладскойДеятельности.Оптовая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Зона,
		|	ВЫБОР
		|		КОГДА &РазмещатьПоБлижайшейЗонеПриемки
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода >= 0
		|						ТОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода
		|					ИНАЧЕ -(ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода)
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПорядокОбходаПоЗонеПриемки,
		|	ВЫБОР
		|		КОГДА &РазмещатьСПриоритетомХранения
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаАнализаСвободныхЯчеек.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Хранения)
		|						ТОГДА 0
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаАнализаСвободныхЯчеек.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Пикинга)
		|					ТОГДА 0
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК ПриоритетЗоныХранения,
		|	ВЫБОР
		|		КОГДА &ТекущийКоэффициентПаллеты > 0
		|				И &ТекущийКоэффициентПаллеты < 1
		|				И ЯчейкиАссортиметногоУчастка.Ячейка.КоличествоПалет < 1
		|			ТОГДА ВЫБОР
		|					КОГДА ЯчейкиАссортиметногоУчастка.Ячейка.КоличествоПалет - &ТекущийКоэффициентПаллеты < 0
		|						ТОГДА 1
		|					ИНАЧЕ -(&ТекущийКоэффициентПаллеты - ЯчейкиАссортиметногоУчастка.Ячейка.КоличествоПалет)
		|				КОНЕЦ
		|		КОГДА &ТекущийКоэффициентПаллеты > 0
		|				И &ТекущийКоэффициентПаллеты >= 1
		|				И ЯчейкиАссортиметногоУчастка.Ячейка.КоличествоПалет >= 1
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Порядок
		|ПОМЕСТИТЬ ТаблицаОтбораСвободныхЯчеек
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкиАссортиметногоУчастка КАК ЯчейкиАссортиметногоУчастка
		|		ПО ТаблицаАнализаСвободныхЯчеек.Ячейка = ЯчейкиАссортиметногоУчастка.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СвободныеЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.Зона
		|ПОМЕСТИТЬ СвободныеЯчейки
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОтбораСвободныхЯчеек.Ячейка КАК Ячейка,
		|	ТаблицаОтбораСвободныхЯчеек.СкладскоеПомещение,
		|	ТаблицаОтбораСвободныхЯчеек.Линия КАК Линия,
		|	ТаблицаОтбораСвободныхЯчеек.Секция,
		|	ТаблицаОтбораСвободныхЯчеек.Стеллаж,
		|	ТаблицаОтбораСвободныхЯчеек.Ярус,
		|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбхода,
		|	ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета,
		|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемки,
		|	ТаблицаОтбораСвободныхЯчеек.Порядок КАК Порядок,
		|	ТаблицаОтбораСвободныхЯчеек.ПриоритетЗоныХранения КАК ПриоритетЗоныХранения
		|ИЗ
		|	ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТекущийКоэффициентПаллеты > 0
		|				ТОГДА ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет >= &ТекущийКоэффициентПаллеты
		|			ИНАЧЕ ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет >= 1
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриоритетЗоныХранения,
		|	Порядок,
		|	ПорядокОбходаПоЗонеПриемки,
		|	Ячейка,
		|	Линия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаОтбораСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЯчейкиАссортиметногоУчастка";
	
	Запрос.УстановитьПараметр("АссортиментныйУчасток", АссортиментныйУчасток);
	Запрос.УстановитьПараметр("РазмещатьСПриоритетомХранения",СтруктураДанных.РазмещатьСПриоритетомХранения);
	Запрос.УстановитьПараметр("РазмещатьПоБлижайшейЗонеПриемки",СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки);
	Запрос.УстановитьПараметр("НачалоОтсчетаПорядкаОбхода",СтруктураДанных.НачалоОтсчетаПорядкаОбхода);
    Запрос.УстановитьПараметр("ТекущийКоэффициентПаллеты",ТекущийКоэффициентПаллеты);

	
	Возврат Запрос.Выполнить();	
	КонецФункции
	
#КонецОбласти

#Область ЯчеечноеРазмещениеТовараРозница
Процедура ПоискЯчеекРазмещенияРозница( ЗонаКарантина,  МассивРезультатов,  СтруктураДанных)
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	ЗапросСвободныхЯчеекСогласноПаллетМестРозница(МенеджерВременныхТаблиц);
	РазместитьНеОднородныеПаллетыРозница(МассивРезультатов[8],МенеджерВременныхТаблиц,СтруктураДанных);
	РазместитьОднородныеПаллетыРозница(МассивРезультатов[7],МенеджерВременныхТаблиц,СтруктураДанных);
	/////размещение карантинных паллет по алгоритмы не однородных, в зону карантина
	МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	ЗаполнитьДанныеСвободнымиЯчейкамиКарантина(ЗонаКарантина,МенеджерВременныхТаблиц);
	РазместитьКарантинПаллеты(МассивРезультатов[9],МенеджерВременныхТаблиц,СтруктураДанных);

	КонецПроцедуры
	
Процедура РазместитьНеОднородныеПаллетыРозница(РезультатЗапроса,МенеджерВременныхТаблиц,СтруктураДанных)
	Если РезультатЗапроса.Пустой() тогда
		Возврат
	КонецЕсли;	
	ВыборкаНеоднороднойПаллеты=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаПаллетМест=новый ТаблицаЗначений;
	ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
	ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	СтруктураДанных.Вставить("ТекущийАссортиментныйУчастокСклада",Неопределено);
	Пока  ВыборкаНеоднороднойПаллеты.Следующий() Цикл 
		СтруктураТекущеВыборки=новый Структура;
		СтруктураТекущеВыборки.Вставить("ВыборкаНеоднороднойПаллеты",ВыборкаНеоднороднойПаллеты);
		СтруктураТекущеВыборки.Вставить("ТаблицаПаллетМест",ТаблицаПаллетМест);
		СтруктураТекущеВыборки.Вставить("МенеджерВременныхТаблиц",МенеджерВременныхТаблиц);
		СтруктураТекущеВыборки.Вставить("КоличествоПаллетвЯчейке",0);
        СтруктураТекущеВыборки.Вставить("Ячейка",Справочники.итСкладскиеЯчейки.ПустаяСсылка());
        СтруктураТекущеВыборки.Вставить("ТекущийКоэффициентПаллеты",0);
		СтруктураТекущеВыборки.Вставить("СтруктураДанных",СтруктураДанных);
		ВыборкаПоПаллетноНеОднородныеПаллетыРозница(СтруктураТекущеВыборки);
	КонецЦикла;
	ОбработатьТаблицуПаллетМестРозница(ТаблицаПаллетМест,МенеджерВременныхТаблиц)
	
КонецПроцедуры

Процедура ВыборкаПоПаллетноНеОднородныеПаллетыРозница(СтруктураТекущеВыборки)
	СтруктураТекущеВыборки.Вставить("ТекущийКоэффициентПаллеты",СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.КоэффициентПаллеты);
	СтруктураДанных=СтруктураТекущеВыборки.СтруктураДанных;
	Если СтруктураТекущеВыборки.КоличествоПаллетвЯчейке > 0 Тогда 
		Если СтруктураДанных.ТекущийАссортиментныйУчастокСклада <> СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.АссортиментныйУчастокСклада Тогда 
			СтруктураТекущеВыборки.КоличествоПаллетвЯчейке=0;
		КонецЕсли;
	КонецЕсли;		
	СтруктураДанных.Вставить("ТекущийАссортиментныйУчастокСклада",СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.АссортиментныйУчастокСклада);
	СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки));
	ТаблицаПаллетМест=СтруктураТекущеВыборки.ТаблицаПаллетМест;
		Если СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.КоличествоРазличныхЯчеекОтправителей>1 и СтруктураДанных.РазмещатьПоБлижайшейЗонеПриемки тогда
		Сообщить("паллета "+СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки+" размещена не будет т.к паллета размещена более чем на 1 ячейки приемки");
		Возврат;
	КонецЕсли;	
	
	Сообщить("Паллета "+СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки+" неоднородна, но ее приоритетное место расположение в 1 зоне , будет предложенно рекомендованное место ");
	Если СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты > СтруктураТекущеВыборки.КоличествоПаллетвЯчейке Тогда
		СтруктураДанных.Вставить("ТекущийКоэффициентПаллеты",СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты);
		СтруктураДанных.Вставить("НачалоОтсчетаПорядкаОбхода",СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.ЯчейкаОтправитель.ПорядокОбхода);	
		РезультатСвободныхЯчеек=ЗапроситьИнформациюПоЯчейкамРозница(СтруктураТекущеВыборки.МенеджерВременныхТаблиц,ТаблицаПаллетМест,СтруктураДанных);
		ТаблицаПаллетМест.Очистить();
		ВыборкаСвободныхЯчеек=РезультатСвободныхЯчеек.Выбрать();
		Если не ВыборкаСвободныхЯчеек.Следующий() тогда
			Сообщить(" для паллеты "+ СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.ИдентификаторУпаковки +" не нашлось подходящей ячейки");
		КонецЕсли;
		СтруктураТекущеВыборки.Ячейка=ВыборкаСвободныхЯчеек.Ячейка;
		СтруктураТекущеВыборки.КоличествоПаллетвЯчейке=ВыборкаСвободныхЯчеек.ПаллетОстаток;
	КонецЕсли;
		для Каждого стр из СтрокиТабличнойЧасти цикл
			стр.ЯчейкаПолучатель=ВыборкаСвободныхЯчеек.Ячейка;
		КонецЦикла;
		СтруктураТекущеВыборки.КоличествоПаллетвЯчейке=СтруктураТекущеВыборки.КоличествоПаллетвЯчейке-СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты;
		НоваяСтрока=ТаблицаПаллетМест.Добавить();
		НоваяСтрока.Ячейка=ВыборкаСвободныхЯчеек.Ячейка;
		НоваяСтрока.КоличествоЗанятыхПаллетМест=СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты;
		//Если СтруктураТекущеВыборки.КоличествоПаллетвЯчейке>0 тогда
		//	Если  СтруктураТекущеВыборки.ВыборкаНеоднороднойПаллеты.Следующий() тогда
		//		ВыборкаПоПаллетноНеОднородныеПаллетыРозница(СтруктураТекущеВыборки);
		//	КонецЕсли;	
		//КонецЕсли;
	
КонецПроцедуры

Процедура РазместитьОднородныеПаллетыРозница(РезультатЗапроса,МенеджерВременныхТаблиц,СтруктураДанных)
	Если РезультатЗапроса.Пустой() тогда
		Возврат
	КонецЕсли;	
	ВыборкаНоменклатуры=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаПаллетМест=новый ТаблицаЗначений;
	ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
	ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	
	
	Пока  ВыборкаНоменклатуры.Следующий() Цикл 
		
		СтруктураДанных.Вставить("ТекущийАссортиментныйУчастокСклада",ВыборкаНоменклатуры.АссортиментныйУчастокСклада);
		ВыборкаПоПаллетно=ВыборкаНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоПаллетно.Следующий() цикл
			СтруктураТекущеВыборки=новый Структура;
			СтруктураТекущеВыборки.Вставить("ВыборкаПоПаллетно",ВыборкаПоПаллетно);
			СтруктураТекущеВыборки.Вставить("ТаблицаПаллетМест",ТаблицаПаллетМест);
			СтруктураТекущеВыборки.Вставить("МенеджерВременныхТаблиц",МенеджерВременныхТаблиц);
			СтруктураТекущеВыборки.Вставить("КоличествоПаллетвЯчейке",0);
            СтруктураТекущеВыборки.Вставить("Ячейка",Справочники.итСкладскиеЯчейки.ПустаяСсылка());
            СтруктураТекущеВыборки.Вставить("ТекущийКоэффициентПаллеты",0);
			СтруктураТекущеВыборки.Вставить("СтруктураДанных",СтруктураДанных);
			//СтруктураДанных.Вставить("ВыборкаПоПаллетно",ВыборкаПоПаллетно);
			ВыборкаПоПаллетноОднородныеПаллетыРозница(СтруктураТекущеВыборки);
		КонецЦикла;
		//Пока  ВыборкаДетальнойЗаписиТоваров.Следующий() Цикл 
		//КонецЦикла;
	КонецЦикла;
	ОбработатьТаблицуПаллетМестРозница(ТаблицаПаллетМест,МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ВыборкаПоПаллетноОднородныеПаллетыРозница(СтруктураТекущеВыборки)
	СтруктураДанных=СтруктураТекущеВыборки.СтруктураДанных;
	ТаблицаПаллетМест=СтруктураТекущеВыборки.ТаблицаПаллетМест;
	СтруктураТекущеВыборки.Вставить("ТекущийКоэффициентПаллеты",СтруктураТекущеВыборки.ВыборкаПоПаллетно.КоэффициентПаллеты);
	Если СтруктураТекущеВыборки.ВыборкаПоПаллетно.КоличествоРазличныхЯчеекОтправителей>1  тогда
		Сообщить("паллета "+СтруктураТекущеВыборки.ВыборкаПоПаллетно.ИдентификаторУпаковки+" размещена не будет т.к паллета размещена более чем на 1 ячейке");
		Возврат;
	КонецЕсли;	
	СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки,Номенклатура",СтруктураТекущеВыборки.ВыборкаПоПаллетно.ИдентификаторУпаковки,СтруктураТекущеВыборки.ВыборкаПоПаллетно.Номенклатура));
	СтруктураДанных.Вставить("НачалоОтсчетаПорядкаОбхода",СтруктураТекущеВыборки.ВыборкаПоПаллетно.ЯчейкаОтправитель.ПорядокОбхода);
	Если СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты>СтруктураТекущеВыборки.КоличествоПаллетвЯчейке Тогда 
		СтруктураДанных.Вставить("ТекущийКоэффициентПаллеты",СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты);
		РезультатСвободныхЯчеек=ЗапроситьИнформациюПоЯчейкамРозница(СтруктураТекущеВыборки.МенеджерВременныхТаблиц,ТаблицаПаллетМест,СтруктураДанных);
		ТаблицаПаллетМест.Очистить();
		ВыборкаСвободныхЯчеек=РезультатСвободныхЯчеек.Выбрать();			
		Если не ВыборкаСвободныхЯчеек.Следующий() тогда
			Сообщить(" для паллеты "+ СтруктураТекущеВыборки.ВыборкаПоПаллетно.ИдентификаторУпаковки +" и  номеклатуры "+СтруктураТекущеВыборки.ВыборкаПоПаллетно.Номенклатура+" не нашлось подходящей ячейки");
			Возврат;
		КонецЕсли;	
		СтруктураТекущеВыборки.КоличествоПаллетвЯчейке=ВыборкаСвободныхЯчеек.ПаллетОстаток;
		СтруктураТекущеВыборки.Ячейка=ВыборкаСвободныхЯчеек.Ячейка;
	КонецЕсли;
	для Каждого стр из СтрокиТабличнойЧасти цикл
		стр.ЯчейкаПолучатель=СтруктураТекущеВыборки.Ячейка;
	КонецЦикла;
	СтруктураТекущеВыборки.КоличествоПаллетвЯчейке=СтруктураТекущеВыборки.КоличествоПаллетвЯчейке-СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты;
	НоваяСтрока=ТаблицаПаллетМест.Добавить();
	НоваяСтрока.Ячейка=СтруктураТекущеВыборки.Ячейка;
	НоваяСтрока.КоличествоЗанятыхПаллетМест=СтруктураТекущеВыборки.ТекущийКоэффициентПаллеты;
	//ОбработатьТаблицуПаллетМестРозница(ТаблицаПаллетМест,СтруктураТекущеВыборки.МенеджерВременныхТаблиц);
	//Если СтруктураТекущеВыборки.КоличествоПаллетвЯчейке>0 тогда
	//	Если   СтруктураТекущеВыборки.ВыборкаПоПаллетно.Следующий() тогда
	//		ВыборкаПоПаллетноОднородныеПаллетыРозница(СтруктураТекущеВыборки)
	//	КонецЕсли;	
	//КонецЕсли;				
		КонецПроцедуры
		
Процедура ОбработатьТаблицуПаллетМестРозница(ТаблицаПаллетМест,МенеджерВременныхТаблиц)
	Если ТаблицаПаллетМест.Количество()>0 тогда
		ИзъятьЗарезервированныеТоварыРозница(ТаблицаПаллетМест,МенеджерВременныхТаблиц);
	КонецЕсли;
КонецПроцедуры
	
Процедура ИзъятьЗарезервированныеТоварыРозница(ТаблицаПаллетМест,МенеджерВременныхТаблиц)
	 Если ТаблицаПаллетМест=Неопределено Тогда
		ТаблицаПаллетМест=новый ТаблицаЗначений;
		ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
		ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПаллетМест.Ячейка,
		|	ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест
		|ПОМЕСТИТЬ ТаблицаПаллетМест
		|ИЗ
		|	&ТаблицаПаллетМест КАК ТаблицаПаллетМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПаллетМест.Ячейка,
		|	СУММА(ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест) КАК КоличествоЗанятыхПаллетМест
		|ПОМЕСТИТЬ ТаблицаПаллетМестГруппировка
		|ИЗ
		|	ТаблицаПаллетМест КАК ТаблицаПаллетМест
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПаллетМест.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвободныеЯчейки.Ячейка,
		|	СвободныеЯчейки.СкладскоеПомещение,
		|	ВЫБОР
		|		КОГДА СвободныеЯчейки.Линия = ""0""
		|			ТОГДА 0
		|		КОГДА СвободныеЯчейки.Линия = ""00""
		|			ТОГДА 0
		|		КОГДА СвободныеЯчейки.Линия = ""1""
		|			ТОГДА 1
		|		КОГДА СвободныеЯчейки.Линия = ""01""
		|			ТОГДА 1
		|		КОГДА СвободныеЯчейки.Линия = ""2""
		|			ТОГДА 2
		|		КОГДА СвободныеЯчейки.Линия = ""02""
		|			ТОГДА 2
		|		КОГДА СвободныеЯчейки.Линия = ""3""
		|			ТОГДА 3
		|		КОГДА СвободныеЯчейки.Линия = ""03""
		|			ТОГДА 3
		|		КОГДА СвободныеЯчейки.Линия = ""4""
		|			ТОГДА 4
		|		КОГДА СвободныеЯчейки.Линия = ""04""
		|			ТОГДА 4
		|		КОГДА СвободныеЯчейки.Линия = ""5""
		|			ТОГДА 5
		|		КОГДА СвободныеЯчейки.Линия = ""05""
		|			ТОГДА 5
		|		КОГДА СвободныеЯчейки.Линия = ""6""
		|			ТОГДА 6
		|		КОГДА СвободныеЯчейки.Линия = ""06""
		|			ТОГДА 6
		|		КОГДА СвободныеЯчейки.Линия = ""7""
		|			ТОГДА 7
		|		КОГДА СвободныеЯчейки.Линия = ""07""
		|			ТОГДА 7
		|		КОГДА СвободныеЯчейки.Линия = ""8""
		|			ТОГДА 8
		|		КОГДА СвободныеЯчейки.Линия = ""08""
		|			ТОГДА 8
		|		КОГДА СвободныеЯчейки.Линия = ""9""
		|			ТОГДА 9
		|		КОГДА СвободныеЯчейки.Линия = ""09""
		|			ТОГДА 9
		|		КОГДА СвободныеЯчейки.Линия = ""10""
		|			ТОГДА 10
		|		КОГДА СвободныеЯчейки.Линия = ""010""
		|			ТОГДА 10
		|		КОГДА СвободныеЯчейки.Линия = ""11""
		|			ТОГДА 11
		|		КОГДА СвободныеЯчейки.Линия = ""011""
		|			ТОГДА 11
		|		КОГДА СвободныеЯчейки.Линия = ""12""
		|			ТОГДА 12
		|		КОГДА СвободныеЯчейки.Линия = ""012""
		|			ТОГДА 12
		|		КОГДА СвободныеЯчейки.Линия = ""13""
		|			ТОГДА 13
		|		КОГДА СвободныеЯчейки.Линия = ""013""
		|			ТОГДА 13
		|		КОГДА СвободныеЯчейки.Линия = ""14""
		|			ТОГДА 14
		|		КОГДА СвободныеЯчейки.Линия = ""014""
		|			ТОГДА 14
		|		КОГДА СвободныеЯчейки.Линия = ""15""
		|			ТОГДА 15
		|		КОГДА СвободныеЯчейки.Линия = ""015""
		|			ТОГДА 15
		|		КОГДА СвободныеЯчейки.Линия = ""16""
		|			ТОГДА 16
		|		КОГДА СвободныеЯчейки.Линия = ""016""
		|			ТОГДА 16
		|		КОГДА СвободныеЯчейки.Линия = ""17""
		|			ТОГДА 17
		|		КОГДА СвободныеЯчейки.Линия = ""017""
		|			ТОГДА 17
		|		КОГДА СвободныеЯчейки.Линия = ""18""
		|			ТОГДА 18
		|		КОГДА СвободныеЯчейки.Линия = ""018""
		|			ТОГДА 18
		|		КОГДА СвободныеЯчейки.Линия = ""19""
		|			ТОГДА 19
		|		КОГДА СвободныеЯчейки.Линия = ""019""
		|			ТОГДА 19
		|		КОГДА СвободныеЯчейки.Линия = ""20""
		|			ТОГДА 20
		|		КОГДА СвободныеЯчейки.Линия = ""020""
		|			ТОГДА 20
		|		КОГДА СвободныеЯчейки.Линия = ""21""
		|			ТОГДА 21
		|		КОГДА СвободныеЯчейки.Линия = ""021""
		|			ТОГДА 21
		|		КОГДА СвободныеЯчейки.Линия = ""22""
		|			ТОГДА 22
		|		КОГДА СвободныеЯчейки.Линия = ""022""
		|			ТОГДА 22
		|		КОГДА СвободныеЯчейки.Линия = ""23""
		|			ТОГДА 23
		|		КОГДА СвободныеЯчейки.Линия = ""023""
		|			ТОГДА 23
		|		КОГДА СвободныеЯчейки.Линия = ""24""
		|			ТОГДА 24
		|		КОГДА СвободныеЯчейки.Линия = ""024""
		|			ТОГДА 24
		|		КОГДА СвободныеЯчейки.Линия = ""25""
		|			ТОГДА 25
		|		КОГДА СвободныеЯчейки.Линия = ""025""
		|			ТОГДА 25
		|		КОГДА СвободныеЯчейки.Линия = ""26""
		|			ТОГДА 26
		|		КОГДА СвободныеЯчейки.Линия = ""026""
		|			ТОГДА 26
		|		КОГДА СвободныеЯчейки.Линия = ""27""
		|			ТОГДА 27
		|		КОГДА СвободныеЯчейки.Линия = ""027""
		|			ТОГДА 27
		|		КОГДА СвободныеЯчейки.Линия = ""28""
		|			ТОГДА 28
		|		КОГДА СвободныеЯчейки.Линия = ""028""
		|			ТОГДА 28
		|		КОГДА СвободныеЯчейки.Линия = ""29""
		|			ТОГДА 29
		|		КОГДА СвободныеЯчейки.Линия = ""029""
		|			ТОГДА 29
		|		КОГДА СвободныеЯчейки.Линия = ""30""
		|			ТОГДА 30
		|		КОГДА СвободныеЯчейки.Линия = ""030""
		|			ТОГДА 30
		|		КОГДА СвободныеЯчейки.Линия = ""31""
		|			ТОГДА 31
		|		КОГДА СвободныеЯчейки.Линия = ""031""
		|			ТОГДА 31
		|		КОГДА СвободныеЯчейки.Линия = ""32""
		|			ТОГДА 32
		|		КОГДА СвободныеЯчейки.Линия = ""032""
		|			ТОГДА 32
		|		КОГДА СвободныеЯчейки.Линия = ""33""
		|			ТОГДА 33
		|		КОГДА СвободныеЯчейки.Линия = ""033""
		|			ТОГДА 33
		|		КОГДА СвободныеЯчейки.Линия = ""34""
		|			ТОГДА 34
		|		КОГДА СвободныеЯчейки.Линия = ""034""
		|			ТОГДА 34
		|		КОГДА СвободныеЯчейки.Линия = ""35""
		|			ТОГДА 35
		|		КОГДА СвободныеЯчейки.Линия = ""035""
		|			ТОГДА 35
		|		КОГДА СвободныеЯчейки.Линия = ""36""
		|			ТОГДА 36
		|		КОГДА СвободныеЯчейки.Линия = ""036""
		|			ТОГДА 36
		|		КОГДА СвободныеЯчейки.Линия = ""37""
		|			ТОГДА 37
		|		КОГДА СвободныеЯчейки.Линия = ""037""
		|			ТОГДА 37
		|		КОГДА СвободныеЯчейки.Линия = ""38""
		|			ТОГДА 38
		|		КОГДА СвободныеЯчейки.Линия = ""038""
		|			ТОГДА 38
		|		КОГДА СвободныеЯчейки.Линия = ""39""
		|			ТОГДА 39
		|		КОГДА СвободныеЯчейки.Линия = ""039""
		|			ТОГДА 39
		|		КОГДА СвободныеЯчейки.Линия = ""40""
		|			ТОГДА 40
		|		КОГДА СвободныеЯчейки.Линия = ""040""
		|			ТОГДА 40
		|		КОГДА СвободныеЯчейки.Линия = ""41""
		|			ТОГДА 41
		|		КОГДА СвободныеЯчейки.Линия = ""041""
		|			ТОГДА 41
		|		КОГДА СвободныеЯчейки.Линия = ""42""
		|			ТОГДА 42
		|		КОГДА СвободныеЯчейки.Линия = ""042""
		|			ТОГДА 42
		|		КОГДА СвободныеЯчейки.Линия = ""43""
		|			ТОГДА 43
		|		КОГДА СвободныеЯчейки.Линия = ""043""
		|			ТОГДА 43
		|		КОГДА СвободныеЯчейки.Линия = ""44""
		|			ТОГДА 44
		|		КОГДА СвободныеЯчейки.Линия = ""044""
		|			ТОГДА 44
		|		КОГДА СвободныеЯчейки.Линия = ""45""
		|			ТОГДА 45
		|		КОГДА СвободныеЯчейки.Линия = ""045""
		|			ТОГДА 45
		|		КОГДА СвободныеЯчейки.Линия = ""46""
		|			ТОГДА 46
		|		КОГДА СвободныеЯчейки.Линия = ""046""
		|			ТОГДА 46
		|		КОГДА СвободныеЯчейки.Линия = ""47""
		|			ТОГДА 47
		|		КОГДА СвободныеЯчейки.Линия = ""047""
		|			ТОГДА 47
		|		КОГДА СвободныеЯчейки.Линия = ""48""
		|			ТОГДА 48
		|		КОГДА СвободныеЯчейки.Линия = ""048""
		|			ТОГДА 48
		|		КОГДА СвободныеЯчейки.Линия = ""49""
		|			ТОГДА 49
		|		КОГДА СвободныеЯчейки.Линия = ""049""
		|			ТОГДА 49
		|		КОГДА СвободныеЯчейки.Линия = ""50""
		|			ТОГДА 50
		|		КОГДА СвободныеЯчейки.Линия = ""050""
		|			ТОГДА 50
		|		КОГДА СвободныеЯчейки.Линия = ""51""
		|			ТОГДА 51
		|		КОГДА СвободныеЯчейки.Линия = ""051""
		|			ТОГДА 51
		|		КОГДА СвободныеЯчейки.Линия = ""52""
		|			ТОГДА 52
		|		КОГДА СвободныеЯчейки.Линия = ""052""
		|			ТОГДА 52
		|		КОГДА СвободныеЯчейки.Линия = ""53""
		|			ТОГДА 53
		|		КОГДА СвободныеЯчейки.Линия = ""053""
		|			ТОГДА 53
		|		КОГДА СвободныеЯчейки.Линия = ""54""
		|			ТОГДА 54
		|		КОГДА СвободныеЯчейки.Линия = ""054""
		|			ТОГДА 54
		|		КОГДА СвободныеЯчейки.Линия = ""55""
		|			ТОГДА 55
		|		КОГДА СвободныеЯчейки.Линия = ""055""
		|			ТОГДА 55
		|		КОГДА СвободныеЯчейки.Линия = ""56""
		|			ТОГДА 56
		|		КОГДА СвободныеЯчейки.Линия = ""056""
		|			ТОГДА 56
		|		КОГДА СвободныеЯчейки.Линия = ""57""
		|			ТОГДА 57
		|		КОГДА СвободныеЯчейки.Линия = ""057""
		|			ТОГДА 57
		|		КОГДА СвободныеЯчейки.Линия = ""58""
		|			ТОГДА 58
		|		КОГДА СвободныеЯчейки.Линия = ""058""
		|			ТОГДА 58
		|		КОГДА СвободныеЯчейки.Линия = ""59""
		|			ТОГДА 59
		|		КОГДА СвободныеЯчейки.Линия = ""059""
		|			ТОГДА 59
		|		КОГДА СвободныеЯчейки.Линия = ""60""
		|			ТОГДА 60
		|		КОГДА СвободныеЯчейки.Линия = ""060""
		|			ТОГДА 60
		|		КОГДА СвободныеЯчейки.Линия = ""61""
		|			ТОГДА 61
		|		КОГДА СвободныеЯчейки.Линия = ""061""
		|			ТОГДА 61
		|		КОГДА СвободныеЯчейки.Линия = ""62""
		|			ТОГДА 62
		|		КОГДА СвободныеЯчейки.Линия = ""062""
		|			ТОГДА 62
		|		КОГДА СвободныеЯчейки.Линия = ""63""
		|			ТОГДА 63
		|		КОГДА СвободныеЯчейки.Линия = ""063""
		|			ТОГДА 63
		|		КОГДА СвободныеЯчейки.Линия = ""64""
		|			ТОГДА 64
		|		КОГДА СвободныеЯчейки.Линия = ""064""
		|			ТОГДА 64
		|		КОГДА СвободныеЯчейки.Линия = ""65""
		|			ТОГДА 65
		|		КОГДА СвободныеЯчейки.Линия = ""065""
		|			ТОГДА 65
		|		КОГДА СвободныеЯчейки.Линия = ""66""
		|			ТОГДА 66
		|		КОГДА СвободныеЯчейки.Линия = ""066""
		|			ТОГДА 66
		|		КОГДА СвободныеЯчейки.Линия = ""67""
		|			ТОГДА 67
		|		КОГДА СвободныеЯчейки.Линия = ""067""
		|			ТОГДА 67
		|		КОГДА СвободныеЯчейки.Линия = ""68""
		|			ТОГДА 68
		|		КОГДА СвободныеЯчейки.Линия = ""068""
		|			ТОГДА 68
		|		КОГДА СвободныеЯчейки.Линия = ""69""
		|			ТОГДА 69
		|		КОГДА СвободныеЯчейки.Линия = ""069""
		|			ТОГДА 69
		|		КОГДА СвободныеЯчейки.Линия = ""70""
		|			ТОГДА 70
		|		КОГДА СвободныеЯчейки.Линия = ""070""
		|			ТОГДА 70
		|		КОГДА СвободныеЯчейки.Линия = ""71""
		|			ТОГДА 71
		|		КОГДА СвободныеЯчейки.Линия = ""071""
		|			ТОГДА 71
		|		КОГДА СвободныеЯчейки.Линия = ""72""
		|			ТОГДА 72
		|		КОГДА СвободныеЯчейки.Линия = ""072""
		|			ТОГДА 72
		|		КОГДА СвободныеЯчейки.Линия = ""73""
		|			ТОГДА 73
		|		КОГДА СвободныеЯчейки.Линия = ""073""
		|			ТОГДА 73
		|		КОГДА СвободныеЯчейки.Линия = ""74""
		|			ТОГДА 74
		|		КОГДА СвободныеЯчейки.Линия = ""074""
		|			ТОГДА 74
		|		КОГДА СвободныеЯчейки.Линия = ""75""
		|			ТОГДА 75
		|		КОГДА СвободныеЯчейки.Линия = ""075""
		|			ТОГДА 75
		|		КОГДА СвободныеЯчейки.Линия = ""76""
		|			ТОГДА 76
		|		КОГДА СвободныеЯчейки.Линия = ""076""
		|			ТОГДА 76
		|		КОГДА СвободныеЯчейки.Линия = ""77""
		|			ТОГДА 77
		|		КОГДА СвободныеЯчейки.Линия = ""077""
		|			ТОГДА 77
		|		КОГДА СвободныеЯчейки.Линия = ""78""
		|			ТОГДА 78
		|		КОГДА СвободныеЯчейки.Линия = ""078""
		|			ТОГДА 78
		|		КОГДА СвободныеЯчейки.Линия = ""79""
		|			ТОГДА 79
		|		КОГДА СвободныеЯчейки.Линия = ""079""
		|			ТОГДА 79
		|		КОГДА СвободныеЯчейки.Линия = ""80""
		|			ТОГДА 80
		|		КОГДА СвободныеЯчейки.Линия = ""080""
		|			ТОГДА 80
		|		КОГДА СвободныеЯчейки.Линия = ""81""
		|			ТОГДА 81
		|		КОГДА СвободныеЯчейки.Линия = ""081""
		|			ТОГДА 81
		|		КОГДА СвободныеЯчейки.Линия = ""82""
		|			ТОГДА 82
		|		КОГДА СвободныеЯчейки.Линия = ""082""
		|			ТОГДА 82
		|		КОГДА СвободныеЯчейки.Линия = ""83""
		|			ТОГДА 83
		|		КОГДА СвободныеЯчейки.Линия = ""083""
		|			ТОГДА 83
		|		КОГДА СвободныеЯчейки.Линия = ""84""
		|			ТОГДА 84
		|		КОГДА СвободныеЯчейки.Линия = ""084""
		|			ТОГДА 84
		|		КОГДА СвободныеЯчейки.Линия = ""85""
		|			ТОГДА 85
		|		КОГДА СвободныеЯчейки.Линия = ""085""
		|			ТОГДА 85
		|		КОГДА СвободныеЯчейки.Линия = ""86""
		|			ТОГДА 86
		|		КОГДА СвободныеЯчейки.Линия = ""086""
		|			ТОГДА 86
		|		КОГДА СвободныеЯчейки.Линия = ""87""
		|			ТОГДА 87
		|		КОГДА СвободныеЯчейки.Линия = ""087""
		|			ТОГДА 87
		|		КОГДА СвободныеЯчейки.Линия = ""88""
		|			ТОГДА 88
		|		КОГДА СвободныеЯчейки.Линия = ""088""
		|			ТОГДА 88
		|		КОГДА СвободныеЯчейки.Линия = ""89""
		|			ТОГДА 89
		|		КОГДА СвободныеЯчейки.Линия = ""089""
		|			ТОГДА 89
		|		КОГДА СвободныеЯчейки.Линия = ""90""
		|			ТОГДА 90
		|		КОГДА СвободныеЯчейки.Линия = ""090""
		|			ТОГДА 90
		|		КОГДА СвободныеЯчейки.Линия = ""91""
		|			ТОГДА 91
		|		КОГДА СвободныеЯчейки.Линия = ""091""
		|			ТОГДА 91
		|		КОГДА СвободныеЯчейки.Линия = ""92""
		|			ТОГДА 92
		|		КОГДА СвободныеЯчейки.Линия = ""092""
		|			ТОГДА 92
		|		КОГДА СвободныеЯчейки.Линия = ""93""
		|			ТОГДА 93
		|		КОГДА СвободныеЯчейки.Линия = ""093""
		|			ТОГДА 93
		|		КОГДА СвободныеЯчейки.Линия = ""94""
		|			ТОГДА 94
		|		КОГДА СвободныеЯчейки.Линия = ""094""
		|			ТОГДА 94
		|		КОГДА СвободныеЯчейки.Линия = ""95""
		|			ТОГДА 95
		|		КОГДА СвободныеЯчейки.Линия = ""095""
		|			ТОГДА 95
		|		КОГДА СвободныеЯчейки.Линия = ""96""
		|			ТОГДА 96
		|		КОГДА СвободныеЯчейки.Линия = ""096""
		|			ТОГДА 96
		|		КОГДА СвободныеЯчейки.Линия = ""97""
		|			ТОГДА 97
		|		КОГДА СвободныеЯчейки.Линия = ""097""
		|			ТОГДА 97
		|		КОГДА СвободныеЯчейки.Линия = ""98""
		|			ТОГДА 98
		|		КОГДА СвободныеЯчейки.Линия = ""098""
		|			ТОГДА 98
		|		КОГДА СвободныеЯчейки.Линия = ""99""
		|			ТОГДА 99
		|		КОГДА СвободныеЯчейки.Линия = ""099""
		|			ТОГДА 99
		|		КОГДА СвободныеЯчейки.Линия = ""100""
		|			ТОГДА 100
		|		КОГДА СвободныеЯчейки.Линия = ""0100""
		|			ТОГДА 100
		|		ИНАЧЕ СвободныеЯчейки.Линия
		|	КОНЕЦ КАК Линия,
		|	СвободныеЯчейки.Секция,
		|	СвободныеЯчейки.Стеллаж,
		|	СвободныеЯчейки.Ярус,
		|	СвободныеЯчейки.ПорядокОбхода,
		|	СвободныеЯчейки.КоличествоПаллет КАК КоличествоПаллет,
		|	СвободныеЯчейки.НомерРяда_Пролета,
		|	СвободныеЯчейки.Зона,
		|	СвободныеЯчейки.ПаллетОстаток - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) КАК ПаллетОстаток
		|ПОМЕСТИТЬ ТаблицаАнализаСвободныхЯчеек
		|ИЗ
		|	СвободныеЯчейки КАК СвободныеЯчейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПаллетМестГруппировка КАК ТаблицаПаллетМестГруппировка
		|		ПО СвободныеЯчейки.Ячейка = ТаблицаПаллетМестГруппировка.Ячейка
		|ГДЕ
		|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПаллетМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПаллетМестГруппировка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СвободныеЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Зона,
		|	ТаблицаАнализаСвободныхЯчеек.ПаллетОстаток
		|ПОМЕСТИТЬ СвободныеЯчейки
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек";
	
	Запрос.УстановитьПараметр("ТаблицаПаллетМест", ТаблицаПаллетМест);
	
	//@skip-warning
	РезультатЗапроса = Запрос.Выполнить();	
	
	КонецПроцедуры

	
Функция ЗапроситьИнформациюПоЯчейкамРозница(МенеджерВременныхТаблиц,ТаблицаПаллетМест=Неопределено,СтруктураДанных)
	ЗапроситьИнформациюПоЯчейкамОбщийФрагментРозница(ТаблицаПаллетМест, МенеджерВременныхТаблиц);
	РезультатЗапроса=Неопределено;		
	Если СтруктураДанных.Стратегия = "РаместитьТоварПоУчасткамПриоритетХранения" Тогда
		 РезультатЗапроса=ЗапроситьИнформациюПоЯчейкамСогласноУчасткамРозница(МенеджерВременныхТаблиц,СтруктураДанных);
    КонецЕсли;
	
	Возврат РезультатЗапроса;
КонецФункции


Процедура ЗапроситьИнформациюПоЯчейкамОбщийФрагментРозница(ТаблицаПаллетМест=Неопределено,  МенеджерВременныхТаблиц)
	
	Если ТаблицаПаллетМест=Неопределено Тогда
		ТаблицаПаллетМест=новый ТаблицаЗначений;
		ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
		ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПаллетМест.Ячейка КАК Ячейка,
	|	ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест КАК КоличествоЗанятыхПаллетМест
	|ПОМЕСТИТЬ ТаблицаПаллетМест
	|ИЗ
	|	&ТаблицаПаллетМест КАК ТаблицаПаллетМест
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПаллетМест.Ячейка КАК Ячейка,
	|	СУММА(ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест) КАК КоличествоЗанятыхПаллетМест
	|ПОМЕСТИТЬ ТаблицаПаллетМестГруппировка
	|ИЗ
	|	ТаблицаПаллетМест КАК ТаблицаПаллетМест
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПаллетМест.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныеЯчейки.Ячейка КАК Ячейка,
	|	СвободныеЯчейки.СкладскоеПомещение КАК СкладскоеПомещение,
	|	ВЫБОР
	|		КОГДА СвободныеЯчейки.Линия = ""0""
	|			ТОГДА 0
	|		КОГДА СвободныеЯчейки.Линия = ""00""
	|			ТОГДА 0
	|		КОГДА СвободныеЯчейки.Линия = ""1""
	|			ТОГДА 1
	|		КОГДА СвободныеЯчейки.Линия = ""01""
	|			ТОГДА 1
	|		КОГДА СвободныеЯчейки.Линия = ""2""
	|			ТОГДА 2
	|		КОГДА СвободныеЯчейки.Линия = ""02""
	|			ТОГДА 2
	|		КОГДА СвободныеЯчейки.Линия = ""3""
	|			ТОГДА 3
	|		КОГДА СвободныеЯчейки.Линия = ""03""
	|			ТОГДА 3
	|		КОГДА СвободныеЯчейки.Линия = ""4""
	|			ТОГДА 4
	|		КОГДА СвободныеЯчейки.Линия = ""04""
	|			ТОГДА 4
	|		КОГДА СвободныеЯчейки.Линия = ""5""
	|			ТОГДА 5
	|		КОГДА СвободныеЯчейки.Линия = ""05""
	|			ТОГДА 5
	|		КОГДА СвободныеЯчейки.Линия = ""6""
	|			ТОГДА 6
	|		КОГДА СвободныеЯчейки.Линия = ""06""
	|			ТОГДА 6
	|		КОГДА СвободныеЯчейки.Линия = ""7""
	|			ТОГДА 7
	|		КОГДА СвободныеЯчейки.Линия = ""07""
	|			ТОГДА 7
	|		КОГДА СвободныеЯчейки.Линия = ""8""
	|			ТОГДА 8
	|		КОГДА СвободныеЯчейки.Линия = ""08""
	|			ТОГДА 8
	|		КОГДА СвободныеЯчейки.Линия = ""9""
	|			ТОГДА 9
	|		КОГДА СвободныеЯчейки.Линия = ""09""
	|			ТОГДА 9
	|		КОГДА СвободныеЯчейки.Линия = ""10""
	|			ТОГДА 10
	|		КОГДА СвободныеЯчейки.Линия = ""010""
	|			ТОГДА 10
	|		КОГДА СвободныеЯчейки.Линия = ""11""
	|			ТОГДА 11
	|		КОГДА СвободныеЯчейки.Линия = ""011""
	|			ТОГДА 11
	|		КОГДА СвободныеЯчейки.Линия = ""12""
	|			ТОГДА 12
	|		КОГДА СвободныеЯчейки.Линия = ""012""
	|			ТОГДА 12
	|		КОГДА СвободныеЯчейки.Линия = ""13""
	|			ТОГДА 13
	|		КОГДА СвободныеЯчейки.Линия = ""013""
	|			ТОГДА 13
	|		КОГДА СвободныеЯчейки.Линия = ""14""
	|			ТОГДА 14
	|		КОГДА СвободныеЯчейки.Линия = ""014""
	|			ТОГДА 14
	|		КОГДА СвободныеЯчейки.Линия = ""15""
	|			ТОГДА 15
	|		КОГДА СвободныеЯчейки.Линия = ""015""
	|			ТОГДА 15
	|		КОГДА СвободныеЯчейки.Линия = ""16""
	|			ТОГДА 16
	|		КОГДА СвободныеЯчейки.Линия = ""016""
	|			ТОГДА 16
	|		КОГДА СвободныеЯчейки.Линия = ""17""
	|			ТОГДА 17
	|		КОГДА СвободныеЯчейки.Линия = ""017""
	|			ТОГДА 17
	|		КОГДА СвободныеЯчейки.Линия = ""18""
	|			ТОГДА 18
	|		КОГДА СвободныеЯчейки.Линия = ""018""
	|			ТОГДА 18
	|		КОГДА СвободныеЯчейки.Линия = ""19""
	|			ТОГДА 19
	|		КОГДА СвободныеЯчейки.Линия = ""019""
	|			ТОГДА 19
	|		КОГДА СвободныеЯчейки.Линия = ""20""
	|			ТОГДА 20
	|		КОГДА СвободныеЯчейки.Линия = ""020""
	|			ТОГДА 20
	|		КОГДА СвободныеЯчейки.Линия = ""21""
	|			ТОГДА 21
	|		КОГДА СвободныеЯчейки.Линия = ""021""
	|			ТОГДА 21
	|		КОГДА СвободныеЯчейки.Линия = ""22""
	|			ТОГДА 22
	|		КОГДА СвободныеЯчейки.Линия = ""022""
	|			ТОГДА 22
	|		КОГДА СвободныеЯчейки.Линия = ""23""
	|			ТОГДА 23
	|		КОГДА СвободныеЯчейки.Линия = ""023""
	|			ТОГДА 23
	|		КОГДА СвободныеЯчейки.Линия = ""24""
	|			ТОГДА 24
	|		КОГДА СвободныеЯчейки.Линия = ""024""
	|			ТОГДА 24
	|		КОГДА СвободныеЯчейки.Линия = ""25""
	|			ТОГДА 25
	|		КОГДА СвободныеЯчейки.Линия = ""025""
	|			ТОГДА 25
	|		КОГДА СвободныеЯчейки.Линия = ""26""
	|			ТОГДА 26
	|		КОГДА СвободныеЯчейки.Линия = ""026""
	|			ТОГДА 26
	|		КОГДА СвободныеЯчейки.Линия = ""27""
	|			ТОГДА 27
	|		КОГДА СвободныеЯчейки.Линия = ""027""
	|			ТОГДА 27
	|		КОГДА СвободныеЯчейки.Линия = ""28""
	|			ТОГДА 28
	|		КОГДА СвободныеЯчейки.Линия = ""028""
	|			ТОГДА 28
	|		КОГДА СвободныеЯчейки.Линия = ""29""
	|			ТОГДА 29
	|		КОГДА СвободныеЯчейки.Линия = ""029""
	|			ТОГДА 29
	|		КОГДА СвободныеЯчейки.Линия = ""30""
	|			ТОГДА 30
	|		КОГДА СвободныеЯчейки.Линия = ""030""
	|			ТОГДА 30
	|		КОГДА СвободныеЯчейки.Линия = ""31""
	|			ТОГДА 31
	|		КОГДА СвободныеЯчейки.Линия = ""031""
	|			ТОГДА 31
	|		КОГДА СвободныеЯчейки.Линия = ""32""
	|			ТОГДА 32
	|		КОГДА СвободныеЯчейки.Линия = ""032""
	|			ТОГДА 32
	|		КОГДА СвободныеЯчейки.Линия = ""33""
	|			ТОГДА 33
	|		КОГДА СвободныеЯчейки.Линия = ""033""
	|			ТОГДА 33
	|		КОГДА СвободныеЯчейки.Линия = ""34""
	|			ТОГДА 34
	|		КОГДА СвободныеЯчейки.Линия = ""034""
	|			ТОГДА 34
	|		КОГДА СвободныеЯчейки.Линия = ""35""
	|			ТОГДА 35
	|		КОГДА СвободныеЯчейки.Линия = ""035""
	|			ТОГДА 35
	|		КОГДА СвободныеЯчейки.Линия = ""36""
	|			ТОГДА 36
	|		КОГДА СвободныеЯчейки.Линия = ""036""
	|			ТОГДА 36
	|		КОГДА СвободныеЯчейки.Линия = ""37""
	|			ТОГДА 37
	|		КОГДА СвободныеЯчейки.Линия = ""037""
	|			ТОГДА 37
	|		КОГДА СвободныеЯчейки.Линия = ""38""
	|			ТОГДА 38
	|		КОГДА СвободныеЯчейки.Линия = ""038""
	|			ТОГДА 38
	|		КОГДА СвободныеЯчейки.Линия = ""39""
	|			ТОГДА 39
	|		КОГДА СвободныеЯчейки.Линия = ""039""
	|			ТОГДА 39
	|		КОГДА СвободныеЯчейки.Линия = ""40""
	|			ТОГДА 40
	|		КОГДА СвободныеЯчейки.Линия = ""040""
	|			ТОГДА 40
	|		КОГДА СвободныеЯчейки.Линия = ""41""
	|			ТОГДА 41
	|		КОГДА СвободныеЯчейки.Линия = ""041""
	|			ТОГДА 41
	|		КОГДА СвободныеЯчейки.Линия = ""42""
	|			ТОГДА 42
	|		КОГДА СвободныеЯчейки.Линия = ""042""
	|			ТОГДА 42
	|		КОГДА СвободныеЯчейки.Линия = ""43""
	|			ТОГДА 43
	|		КОГДА СвободныеЯчейки.Линия = ""043""
	|			ТОГДА 43
	|		КОГДА СвободныеЯчейки.Линия = ""44""
	|			ТОГДА 44
	|		КОГДА СвободныеЯчейки.Линия = ""044""
	|			ТОГДА 44
	|		КОГДА СвободныеЯчейки.Линия = ""45""
	|			ТОГДА 45
	|		КОГДА СвободныеЯчейки.Линия = ""045""
	|			ТОГДА 45
	|		КОГДА СвободныеЯчейки.Линия = ""46""
	|			ТОГДА 46
	|		КОГДА СвободныеЯчейки.Линия = ""046""
	|			ТОГДА 46
	|		КОГДА СвободныеЯчейки.Линия = ""47""
	|			ТОГДА 47
	|		КОГДА СвободныеЯчейки.Линия = ""047""
	|			ТОГДА 47
	|		КОГДА СвободныеЯчейки.Линия = ""48""
	|			ТОГДА 48
	|		КОГДА СвободныеЯчейки.Линия = ""048""
	|			ТОГДА 48
	|		КОГДА СвободныеЯчейки.Линия = ""49""
	|			ТОГДА 49
	|		КОГДА СвободныеЯчейки.Линия = ""049""
	|			ТОГДА 49
	|		КОГДА СвободныеЯчейки.Линия = ""50""
	|			ТОГДА 50
	|		КОГДА СвободныеЯчейки.Линия = ""050""
	|			ТОГДА 50
	|		КОГДА СвободныеЯчейки.Линия = ""51""
	|			ТОГДА 51
	|		КОГДА СвободныеЯчейки.Линия = ""051""
	|			ТОГДА 51
	|		КОГДА СвободныеЯчейки.Линия = ""52""
	|			ТОГДА 52
	|		КОГДА СвободныеЯчейки.Линия = ""052""
	|			ТОГДА 52
	|		КОГДА СвободныеЯчейки.Линия = ""53""
	|			ТОГДА 53
	|		КОГДА СвободныеЯчейки.Линия = ""053""
	|			ТОГДА 53
	|		КОГДА СвободныеЯчейки.Линия = ""54""
	|			ТОГДА 54
	|		КОГДА СвободныеЯчейки.Линия = ""054""
	|			ТОГДА 54
	|		КОГДА СвободныеЯчейки.Линия = ""55""
	|			ТОГДА 55
	|		КОГДА СвободныеЯчейки.Линия = ""055""
	|			ТОГДА 55
	|		КОГДА СвободныеЯчейки.Линия = ""56""
	|			ТОГДА 56
	|		КОГДА СвободныеЯчейки.Линия = ""056""
	|			ТОГДА 56
	|		КОГДА СвободныеЯчейки.Линия = ""57""
	|			ТОГДА 57
	|		КОГДА СвободныеЯчейки.Линия = ""057""
	|			ТОГДА 57
	|		КОГДА СвободныеЯчейки.Линия = ""58""
	|			ТОГДА 58
	|		КОГДА СвободныеЯчейки.Линия = ""058""
	|			ТОГДА 58
	|		КОГДА СвободныеЯчейки.Линия = ""59""
	|			ТОГДА 59
	|		КОГДА СвободныеЯчейки.Линия = ""059""
	|			ТОГДА 59
	|		КОГДА СвободныеЯчейки.Линия = ""60""
	|			ТОГДА 60
	|		КОГДА СвободныеЯчейки.Линия = ""060""
	|			ТОГДА 60
	|		КОГДА СвободныеЯчейки.Линия = ""61""
	|			ТОГДА 61
	|		КОГДА СвободныеЯчейки.Линия = ""061""
	|			ТОГДА 61
	|		КОГДА СвободныеЯчейки.Линия = ""62""
	|			ТОГДА 62
	|		КОГДА СвободныеЯчейки.Линия = ""062""
	|			ТОГДА 62
	|		КОГДА СвободныеЯчейки.Линия = ""63""
	|			ТОГДА 63
	|		КОГДА СвободныеЯчейки.Линия = ""063""
	|			ТОГДА 63
	|		КОГДА СвободныеЯчейки.Линия = ""64""
	|			ТОГДА 64
	|		КОГДА СвободныеЯчейки.Линия = ""064""
	|			ТОГДА 64
	|		КОГДА СвободныеЯчейки.Линия = ""65""
	|			ТОГДА 65
	|		КОГДА СвободныеЯчейки.Линия = ""065""
	|			ТОГДА 65
	|		КОГДА СвободныеЯчейки.Линия = ""66""
	|			ТОГДА 66
	|		КОГДА СвободныеЯчейки.Линия = ""066""
	|			ТОГДА 66
	|		КОГДА СвободныеЯчейки.Линия = ""67""
	|			ТОГДА 67
	|		КОГДА СвободныеЯчейки.Линия = ""067""
	|			ТОГДА 67
	|		КОГДА СвободныеЯчейки.Линия = ""68""
	|			ТОГДА 68
	|		КОГДА СвободныеЯчейки.Линия = ""068""
	|			ТОГДА 68
	|		КОГДА СвободныеЯчейки.Линия = ""69""
	|			ТОГДА 69
	|		КОГДА СвободныеЯчейки.Линия = ""069""
	|			ТОГДА 69
	|		КОГДА СвободныеЯчейки.Линия = ""70""
	|			ТОГДА 70
	|		КОГДА СвободныеЯчейки.Линия = ""070""
	|			ТОГДА 70
	|		КОГДА СвободныеЯчейки.Линия = ""71""
	|			ТОГДА 71
	|		КОГДА СвободныеЯчейки.Линия = ""071""
	|			ТОГДА 71
	|		КОГДА СвободныеЯчейки.Линия = ""72""
	|			ТОГДА 72
	|		КОГДА СвободныеЯчейки.Линия = ""072""
	|			ТОГДА 72
	|		КОГДА СвободныеЯчейки.Линия = ""73""
	|			ТОГДА 73
	|		КОГДА СвободныеЯчейки.Линия = ""073""
	|			ТОГДА 73
	|		КОГДА СвободныеЯчейки.Линия = ""74""
	|			ТОГДА 74
	|		КОГДА СвободныеЯчейки.Линия = ""074""
	|			ТОГДА 74
	|		КОГДА СвободныеЯчейки.Линия = ""75""
	|			ТОГДА 75
	|		КОГДА СвободныеЯчейки.Линия = ""075""
	|			ТОГДА 75
	|		КОГДА СвободныеЯчейки.Линия = ""76""
	|			ТОГДА 76
	|		КОГДА СвободныеЯчейки.Линия = ""076""
	|			ТОГДА 76
	|		КОГДА СвободныеЯчейки.Линия = ""77""
	|			ТОГДА 77
	|		КОГДА СвободныеЯчейки.Линия = ""077""
	|			ТОГДА 77
	|		КОГДА СвободныеЯчейки.Линия = ""78""
	|			ТОГДА 78
	|		КОГДА СвободныеЯчейки.Линия = ""078""
	|			ТОГДА 78
	|		КОГДА СвободныеЯчейки.Линия = ""79""
	|			ТОГДА 79
	|		КОГДА СвободныеЯчейки.Линия = ""079""
	|			ТОГДА 79
	|		КОГДА СвободныеЯчейки.Линия = ""80""
	|			ТОГДА 80
	|		КОГДА СвободныеЯчейки.Линия = ""080""
	|			ТОГДА 80
	|		КОГДА СвободныеЯчейки.Линия = ""81""
	|			ТОГДА 81
	|		КОГДА СвободныеЯчейки.Линия = ""081""
	|			ТОГДА 81
	|		КОГДА СвободныеЯчейки.Линия = ""82""
	|			ТОГДА 82
	|		КОГДА СвободныеЯчейки.Линия = ""082""
	|			ТОГДА 82
	|		КОГДА СвободныеЯчейки.Линия = ""83""
	|			ТОГДА 83
	|		КОГДА СвободныеЯчейки.Линия = ""083""
	|			ТОГДА 83
	|		КОГДА СвободныеЯчейки.Линия = ""84""
	|			ТОГДА 84
	|		КОГДА СвободныеЯчейки.Линия = ""084""
	|			ТОГДА 84
	|		КОГДА СвободныеЯчейки.Линия = ""85""
	|			ТОГДА 85
	|		КОГДА СвободныеЯчейки.Линия = ""085""
	|			ТОГДА 85
	|		КОГДА СвободныеЯчейки.Линия = ""86""
	|			ТОГДА 86
	|		КОГДА СвободныеЯчейки.Линия = ""086""
	|			ТОГДА 86
	|		КОГДА СвободныеЯчейки.Линия = ""87""
	|			ТОГДА 87
	|		КОГДА СвободныеЯчейки.Линия = ""087""
	|			ТОГДА 87
	|		КОГДА СвободныеЯчейки.Линия = ""88""
	|			ТОГДА 88
	|		КОГДА СвободныеЯчейки.Линия = ""088""
	|			ТОГДА 88
	|		КОГДА СвободныеЯчейки.Линия = ""89""
	|			ТОГДА 89
	|		КОГДА СвободныеЯчейки.Линия = ""089""
	|			ТОГДА 89
	|		КОГДА СвободныеЯчейки.Линия = ""90""
	|			ТОГДА 90
	|		КОГДА СвободныеЯчейки.Линия = ""090""
	|			ТОГДА 90
	|		КОГДА СвободныеЯчейки.Линия = ""91""
	|			ТОГДА 91
	|		КОГДА СвободныеЯчейки.Линия = ""091""
	|			ТОГДА 91
	|		КОГДА СвободныеЯчейки.Линия = ""92""
	|			ТОГДА 92
	|		КОГДА СвободныеЯчейки.Линия = ""092""
	|			ТОГДА 92
	|		КОГДА СвободныеЯчейки.Линия = ""93""
	|			ТОГДА 93
	|		КОГДА СвободныеЯчейки.Линия = ""093""
	|			ТОГДА 93
	|		КОГДА СвободныеЯчейки.Линия = ""94""
	|			ТОГДА 94
	|		КОГДА СвободныеЯчейки.Линия = ""094""
	|			ТОГДА 94
	|		КОГДА СвободныеЯчейки.Линия = ""95""
	|			ТОГДА 95
	|		КОГДА СвободныеЯчейки.Линия = ""095""
	|			ТОГДА 95
	|		КОГДА СвободныеЯчейки.Линия = ""96""
	|			ТОГДА 96
	|		КОГДА СвободныеЯчейки.Линия = ""096""
	|			ТОГДА 96
	|		КОГДА СвободныеЯчейки.Линия = ""97""
	|			ТОГДА 97
	|		КОГДА СвободныеЯчейки.Линия = ""097""
	|			ТОГДА 97
	|		КОГДА СвободныеЯчейки.Линия = ""98""
	|			ТОГДА 98
	|		КОГДА СвободныеЯчейки.Линия = ""098""
	|			ТОГДА 98
	|		КОГДА СвободныеЯчейки.Линия = ""99""
	|			ТОГДА 99
	|		КОГДА СвободныеЯчейки.Линия = ""099""
	|			ТОГДА 99
	|		КОГДА СвободныеЯчейки.Линия = ""100""
	|			ТОГДА 100
	|		КОГДА СвободныеЯчейки.Линия = ""0100""
	|			ТОГДА 100
	|		ИНАЧЕ СвободныеЯчейки.Линия
	|	КОНЕЦ КАК Линия,
	|	СвободныеЯчейки.Секция КАК Секция,
	|	СвободныеЯчейки.Стеллаж КАК Стеллаж,
	|	СвободныеЯчейки.Ярус КАК Ярус,
	|	СвободныеЯчейки.ПорядокОбхода КАК ПорядокОбхода,
	|	СвободныеЯчейки.ПаллетОстаток - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) КАК ПаллетОстаток,
	|	СвободныеЯчейки.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	СвободныеЯчейки.Зона КАК Зона,
	|	СвободныеЯчейки.КоличествоПаллет КАК КоличествоПаллет
	|ПОМЕСТИТЬ ТаблицаАнализаСвободныхЯчеек
	|ИЗ
	|	СвободныеЯчейки КАК СвободныеЯчейки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПаллетМестГруппировка КАК ТаблицаПаллетМестГруппировка
	|		ПО СвободныеЯчейки.Ячейка = ТаблицаПаллетМестГруппировка.Ячейка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СвободныеЯчейки.КоличествоПаллет < 0.3
	|				ТОГДА СвободныеЯчейки.ПаллетОстаток - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) > 0
	|			КОГДА СвободныеЯчейки.КоличествоПаллет > 1
	|				ТОГДА СвободныеЯчейки.ПаллетОстаток - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) > 1
	|			ИНАЧЕ СвободныеЯчейки.КоличествоПаллет = СвободныеЯчейки.ПаллетОстаток - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0)
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПаллетМест
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПаллетМестГруппировка";
	
	Запрос.УстановитьПараметр("ТаблицаПаллетМест", ТаблицаПаллетМест);
	
	//@skip-warning
	 Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаПоискаЯчеекРазмещенияРозница()
		Текст="ВЫБРАТЬ
		      |	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	Товары.Номенклатура КАК Номенклатура,
		      |	Товары.СерияНоменклатуры КАК СерияНоменклатуры,
		      |	Товары.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
		      |	Товары.Количество КАК Количество
		      |ПОМЕСТИТЬ ТоварыДокумента
		      |ИЗ
		      |	&Товары КАК Товары
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТоварыДокумента.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		      |	ВЫРАЗИТЬ(ТоварыДокумента.СерияНоменклатуры КАК Справочник.СерииНоменклатуры) КАК СерияНоменклатуры,
		      |	ВЫБОР
		      |		КОГДА &СкладскоеПомещение = ЗНАЧЕНИЕ(Справочник.ИтСкладскиеПомещения.ПустаяСсылка)
		      |			ТОГДА ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура).итПреоритетнаяЗонаРазмещения
		      |		ИНАЧЕ &СкладскоеПомещение
		      |	КОНЕЦ КАК СкладскоеПомещение,
		      |	ЛОЖЬ КАК КарантинПаллеты,
		      |	ВЫРАЗИТЬ(ТоварыДокумента.ЯчейкаОтправитель КАК Справочник.итСкладскиеЯчейки) КАК ЯчейкаОтправитель,
		      |	ЕСТЬNULL(ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних.АссортиментныйУчастокСклада, ЗНАЧЕНИЕ(Справочник.ит_WMS_АссортиментныеУчасткиСклада.ПустаяСсылка)) КАК АссортиментныйУчастокСклада,
		      |	ТоварыДокумента.Количество КАК Количество,
		      |	ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмеренияМест.итКоличествоНаПаллете КАК КоличествоНаПаллете,
		      |	ТоварыДокумента.Количество / ВЫБОР
		      |		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 0) = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 0)
		      |	КОНЕЦ КАК КоэффициентПаллеты
		      |ПОМЕСТИТЬ ТаблицаТоваровЗаготокаДляОбработки
		      |ИЗ
		      |	ТоварыДокумента КАК ТоварыДокумента
		      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчастка.СрезПоследних(, Организация = &Организация) КАК ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних
		      |		ПО ТоварыДокумента.Номенклатура = ит_WMS_СоответсвияНоменклатурыИАссортиментногоУчасткаСрезПоследних.Номенклатура
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	СУММА(ТаблицаТоваровЗаготокаДляОбработки.КоэффициентПаллеты) КАК КоэффициентПаллеты
		      |ПОМЕСТИТЬ ВтКоэффициентПаллеты
		      |ИЗ
		      |	ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТоварыДокумента.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.Номенклатура) КАК КоличествоРазличнойНомеклатуры,
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.СерияНоменклатуры) КАК КоличествоРазличныхСерий,
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.ЯчейкаОтправитель) КАК КоличествоРазличныхЯчеекОтправителей
		      |ПОМЕСТИТЬ РабиениеНаОднородныеНеОднородныеПаллеты
		      |ИЗ
		      |	ТоварыДокумента КАК ТоварыДокумента
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	ТоварыДокумента.ИдентификаторУпаковки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	РабиениеНаОднородныеНеОднородныеПаллеты.ИдентификаторУпаковки КАК ИдентификаторУпаковки
		      |ПОМЕСТИТЬ ОднородныеПаллеты
		      |ИЗ
		      |	РабиениеНаОднородныеНеОднородныеПаллеты КАК РабиениеНаОднородныеНеОднородныеПаллеты
		      |ГДЕ
		      |	РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличнойНомеклатуры = 1
		      |	И РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличныхСерий = 1
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	РабиениеНаОднородныеНеОднородныеПаллеты.ИдентификаторУпаковки КАК ИдентификаторУпаковки
		      |ПОМЕСТИТЬ НеОднородныеПаллеты
		      |ИЗ
		      |	РабиениеНаОднородныеНеОднородныеПаллеты КАК РабиениеНаОднородныеНеОднородныеПаллеты
		      |ГДЕ
		      |	РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличнойНомеклатуры > 1
		      |	И РабиениеНаОднородныеНеОднородныеПаллеты.КоличествоРазличныхСерий > 1
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	СУММА(ТаблицаТоваровЗаготокаДляОбработки.КоэффициентПаллеты) КАК КоэффициентПаллеты
		      |ПОМЕСТИТЬ КоэффициентНеОднароднойПаллеты
		      |ИЗ
		      |	НеОднородныеПаллеты КАК НеОднородныеПаллеты
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
		      |		ПО НеОднородныеПаллеты.ИдентификаторУпаковки = ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
		      |ГДЕ
		      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ЛОЖЬ
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	ТаблицаТоваровЗаготокаДляОбработки.Номенклатура КАК Номенклатура,
		      |	ТаблицаТоваровЗаготокаДляОбработки.СкладскоеПомещение КАК НоменклатураитПреоритетнаяЗонаРазмещения,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК КоличествоПаллетНоменклатуры,
		      |	ТаблицаТоваровЗаготокаДляОбработки.СерияНоменклатуры КАК СерияНоменклатуры,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК КоличествоРазличныхЯчеекОтправителей,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
		      |	ТаблицаТоваровЗаготокаДляОбработки.АссортиментныйУчастокСклада КАК АссортиментныйУчастокСклада,
		      |	ВтКоэффициентПаллеты.КоэффициентПаллеты КАК КоэффициентПаллеты
		      |ИЗ
		      |	ОднородныеПаллеты КАК ОднородныеПаллеты
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
		      |		ПО ОднородныеПаллеты.ИдентификаторУпаковки = ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКоэффициентПаллеты КАК ВтКоэффициентПаллеты
		      |		ПО ОднородныеПаллеты.ИдентификаторУпаковки = ВтКоэффициентПаллеты.ИдентификаторУпаковки
		      |ГДЕ
		      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ЛОЖЬ
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	СерияНоменклатуры
		      |ИТОГИ
		      |	МАКСИМУМ(НоменклатураитПреоритетнаяЗонаРазмещения),
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоПаллетНоменклатуры),
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоРазличныхЯчеекОтправителей),
		      |	МАКСИМУМ(ЯчейкаОтправитель),
		      |	МАКСИМУМ(АссортиментныйУчастокСклада),
		      |	МАКСИМУМ(КоэффициентПаллеты)
		      |ПО
		      |	Номенклатура,
		      |	ИдентификаторУпаковки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	ТаблицаТоваровЗаготокаДляОбработки.СкладскоеПомещение КАК НоменклатураитПреоритетнаяЗонаРазмещения,
		      |	ТаблицаТоваровЗаготокаДляОбработки.Номенклатура КАК Номенклатура,
		      |	ТаблицаТоваровЗаготокаДляОбработки.СкладскоеПомещение КАК СкладскоеПомещение,
		      |	ТаблицаТоваровЗаготокаДляОбработки.СерияНоменклатуры КАК СерияНоменклатуры,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК КоличествоРазличныхЯчеекОтправителей,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
		      |	ТаблицаТоваровЗаготокаДляОбработки.АссортиментныйУчастокСклада КАК АссортиментныйУчастокСклада,
		      |	КоэффициентНеОднароднойПаллеты.КоэффициентПаллеты КАК КоэффициентПаллеты
		      |ИЗ
		      |	НеОднородныеПаллеты КАК НеОднородныеПаллеты
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
		      |		ПО НеОднородныеПаллеты.ИдентификаторУпаковки = ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоэффициентНеОднароднойПаллеты КАК КоэффициентНеОднароднойПаллеты
		      |		ПО НеОднородныеПаллеты.ИдентификаторУпаковки = КоэффициентНеОднароднойПаллеты.ИдентификаторУпаковки
		      |ГДЕ
		      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ЛОЖЬ
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	СерияНоменклатуры
		      |ИТОГИ
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НоменклатураитПреоритетнаяЗонаРазмещения),
		      |	МАКСИМУМ(СкладскоеПомещение),
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоРазличныхЯчеекОтправителей),
		      |	МАКСИМУМ(ЯчейкаОтправитель),
		      |	МАКСИМУМ(АссортиментныйУчастокСклада),
		      |	МАКСИМУМ(КоэффициентПаллеты)
		      |ПО
		      |	ИдентификаторУпаковки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ТаблицаТоваровЗаготокаДляОбработки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
		      |	&ЗонаКарантина КАК НоменклатураитПреоритетнаяЗонаРазмещения,
		      |	&ЗонаКарантина КАК СкладскоеПомещение,
		      |	ТаблицаТоваровЗаготокаДляОбработки.Номенклатура КАК Номенклатура,
		      |	ТаблицаТоваровЗаготокаДляОбработки.СерияНоменклатуры КАК СерияНоменклатуры,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК КоличествоРазличныхЯчеекОтправителей,
		      |	ТаблицаТоваровЗаготокаДляОбработки.ЯчейкаОтправитель КАК ЯчейкаОтправитель,
		      |	ТаблицаТоваровЗаготокаДляОбработки.КоэффициентПаллеты КАК КоэффициентПаллеты
		      |ИЗ
		      |	ТаблицаТоваровЗаготокаДляОбработки КАК ТаблицаТоваровЗаготокаДляОбработки
		      |ГДЕ
		      |	ТаблицаТоваровЗаготокаДляОбработки.КарантинПаллеты = ИСТИНА
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	СерияНоменклатуры
		      |ИТОГИ
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НоменклатураитПреоритетнаяЗонаРазмещения),
		      |	МАКСИМУМ(СкладскоеПомещение),
		      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоРазличныхЯчеекОтправителей),
		      |	МАКСИМУМ(ЯчейкаОтправитель),
		      |	МАКСИМУМ(КоэффициентПаллеты)
		      |ПО
		      |	ИдентификаторУпаковки";
	Возврат Текст;

КонецФункции

Процедура ЗапросСвободныхЯчеекСогласноПаллетМестРозница(МенеджерЗапроса)	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итТоварыВЯчейках.Организация КАК Организация,
	|	итТоварыВЯчейках.Склад КАК Склад,
	|	итТоварыВЯчейках.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итТоварыВЯчейках.Ячейка КАК Ячейка,
	|	итТоварыВЯчейках.Номенклатура КАК Номенклатура,
	|	итТоварыВЯчейках.Характеристика КАК Характеристика,
	|	итТоварыВЯчейках.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итТоварыВЯчейках.ДатаРозлива КАК ДатаРозлива,
	|	итТоварыВЯчейках.Качество КАК Качество,
	|	СУММА(ВЫБОР
	|			КОГДА итТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА итТоварыВЯчейках.Количество + итТоварыВЯчейках.КРазмещению
	|			ИНАЧЕ -(итТоварыВЯчейках.Количество + итТоварыВЯчейках.КРазмещению)
	|		КОНЕЦ) КАК ДвижениеДокумента
	|ПОМЕСТИТЬ ДанныеДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках КАК итТоварыВЯчейках
	|ГДЕ
	|	итТоварыВЯчейках.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	итТоварыВЯчейках.ДатаРозлива,
	|	итТоварыВЯчейках.ИдентификаторУпаковки,
	|	итТоварыВЯчейках.Качество,
	|	итТоварыВЯчейках.Номенклатура,
	|	итТоварыВЯчейках.Организация,
	|	итТоварыВЯчейках.СерияНоменклатуры,
	|	итТоварыВЯчейках.Склад,
	|	итТоварыВЯчейках.Характеристика,
	|	итТоварыВЯчейках.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Склад КАК Склад,
	|	итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	итТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|	итТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|	итТоварыВЯчейкахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|	итТоварыВЯчейкахОстатки.ДатаРозлива КАК ДатаРозлива,
	|	итТоварыВЯчейкахОстатки.Качество КАК Качество,
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток + итТоварыВЯчейкахОстатки.КРазмещениюОстаток + ЕСТЬNULL(ДанныеДвиженияДокумента.ДвижениеДокумента, 0) КАК КоличествоОстаток,
	|	(итТоварыВЯчейкахОстатки.КоличествоОстаток + итТоварыВЯчейкахОстатки.КРазмещениюОстаток - ЕСТЬNULL(ДанныеДвиженияДокумента.ДвижениеДокумента, 0)) / ВЫБОР
	|		КОГДА ЕСТЬNULL(итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 0)
	|	КОНЕЦ КАК ПаллетОстаток,
	|	итТоварыВЯчейкахОстатки.Организация КАК Организация
	|ПОМЕСТИТЬ ВтОстаткиПоЯчейкам
	|ИЗ
	|	РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДвиженияДокумента КАК ДанныеДвиженияДокумента
	|		ПО итТоварыВЯчейкахОстатки.Склад = ДанныеДвиженияДокумента.Склад
	|			И итТоварыВЯчейкахОстатки.Ячейка = ДанныеДвиженияДокумента.Ячейка
	|			И итТоварыВЯчейкахОстатки.ИдентификаторУпаковки = ДанныеДвиженияДокумента.ИдентификаторУпаковки
	|			И итТоварыВЯчейкахОстатки.Номенклатура = ДанныеДвиженияДокумента.Номенклатура
	|			И итТоварыВЯчейкахОстатки.Характеристика = ДанныеДвиженияДокумента.Характеристика
	|			И итТоварыВЯчейкахОстатки.СерияНоменклатуры = ДанныеДвиженияДокумента.СерияНоменклатуры
	|			И итТоварыВЯчейкахОстатки.ДатаРозлива = ДанныеДвиженияДокумента.ДатаРозлива
	|			И итТоварыВЯчейкахОстатки.Качество = ДанныеДвиженияДокумента.Качество
	|			И итТоварыВЯчейкахОстатки.Организация = ДанныеДвиженияДокумента.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстаткиПоЯчейкам.Ячейка КАК Ячейка,
	|	СУММА(ВтОстаткиПоЯчейкам.ПаллетОстаток) КАК ПаллетОстаток
	|ПОМЕСТИТЬ ОстаткиЯчеекГруппировка
	|ИЗ
	|	ВтОстаткиПоЯчейкам КАК ВтОстаткиПоЯчейкам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОстаткиПоЯчейкам.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итСкладскиеЯчейки.Ссылка КАК Ячейка,
	|	итСкладскиеЯчейки.Линия КАК Линия,
	|	итСкладскиеЯчейки.Секция КАК Секция,
	|	итСкладскиеЯчейки.Стеллаж КАК Стеллаж,
	|	итСкладскиеЯчейки.Ярус КАК Ярус,
	|	итСкладскиеЯчейки.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	итСкладскиеЯчейки.Зона КАК Зона,
	|	итСкладскиеЯчейки.ЯчейкаНачалаРазмещения КАК ЯчейкаНачалаРазмещения,
	|	итСкладскиеЯчейки.КоличествоПалет КАК КоличествоПалет,
	|	итСкладскиеЯчейки.СкладскоеПомещение КАК СкладскоеПомещение,
	|	итСкладскиеЯчейки.ПорядокОбхода КАК ПорядокОбхода
	|ПОМЕСТИТЬ ВтЯчейки
	|ИЗ
	|	Справочник.итСкладскиеЯчейки КАК итСкладскиеЯчейки
	|ГДЕ
	|	НЕ итСкладскиеЯчейки.ЭтоГруппа
	|	И НЕ итСкладскиеЯчейки.ПометкаУдаления
	|	И НЕ итСкладскиеЯчейки.Заблокирована
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтЯчейки.Ячейка КАК Ячейка,
	|	ВтЯчейки.Линия КАК Линия,
	|	ВтЯчейки.Секция КАК Секция,
	|	ВтЯчейки.Стеллаж КАК Стеллаж,
	|	ВтЯчейки.Ярус КАК Ярус,
	|	ВтЯчейки.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	ВтЯчейки.Зона КАК Зона,
	|	ВтЯчейки.ЯчейкаНачалаРазмещения КАК ЯчейкаНачалаРазмещения,
	|	ВтЯчейки.КоличествоПалет - ЕСТЬNULL(ОстаткиЯчеекГруппировка.ПаллетОстаток, 0) КАК ПаллетОстаток,
	|	ВтЯчейки.КоличествоПалет КАК КоличествоПалет,
	|	ВтЯчейки.СкладскоеПомещение КАК СкладскоеПомещение,
	|	ВтЯчейки.ПорядокОбхода КАК ПорядокОбхода
	|ПОМЕСТИТЬ СвободныеЯчейкиОтбор
	|ИЗ
	|	ВтЯчейки КАК ВтЯчейки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиЯчеекГруппировка КАК ОстаткиЯчеекГруппировка
	|		ПО ВтЯчейки.Ячейка = ОстаткиЯчеекГруппировка.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныеЯчейкиОтбор.Ячейка КАК Ячейка,
	|	СвободныеЯчейкиОтбор.Линия КАК Линия,
	|	СвободныеЯчейкиОтбор.Секция КАК Секция,
	|	СвободныеЯчейкиОтбор.Стеллаж КАК Стеллаж,
	|	СвободныеЯчейкиОтбор.Ярус КАК Ярус,
	|	СвободныеЯчейкиОтбор.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	СвободныеЯчейкиОтбор.Зона КАК Зона,
	|	СвободныеЯчейкиОтбор.ЯчейкаНачалаРазмещения КАК ЯчейкаНачалаРазмещения,
	|	СвободныеЯчейкиОтбор.ПаллетОстаток КАК ПаллетОстаток,
	|	СвободныеЯчейкиОтбор.КоличествоПалет КАК КоличествоПаллет,
	|	СвободныеЯчейкиОтбор.СкладскоеПомещение КАК СкладскоеПомещение,
	|	СвободныеЯчейкиОтбор.ПорядокОбхода КАК ПорядокОбхода
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	СвободныеЯчейкиОтбор КАК СвободныеЯчейкиОтбор
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СвободныеЯчейкиОтбор.КоличествоПалет < 0.3
	|				ТОГДА СвободныеЯчейкиОтбор.ПаллетОстаток > 0
	|			КОГДА СвободныеЯчейкиОтбор.КоличествоПалет > 1
	|				ТОГДА СвободныеЯчейкиОтбор.ПаллетОстаток > 1
	|			ИНАЧЕ СвободныеЯчейкиОтбор.КоличествоПалет = СвободныеЯчейкиОтбор.ПаллетОстаток
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОстаткиПоЯчейкам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиЯчеекГруппировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтЯчейки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвободныеЯчейкиОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеДвиженияДокумента";
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	
	//@skip-warning
	РезультатЗапроса = Запрос.Выполнить();	
КонецПроцедуры

Функция ЗапроситьИнформациюПоЯчейкамСогласноУчасткамРозница(МенеджерВременныхТаблиц,СтруктураДанных)
	АссортиментныйУчасток=Справочники.ит_WMS_АссортиментныеУчасткиСклада.ПустаяСсылка();
	Если СтруктураДанных.Свойство("АссортиментныйУчасток") Тогда 
		АссортиментныйУчасток=СтруктураДанных.АссортиментныйУчасток;
	Иначе                                      
		АссортиментныйУчасток=СтруктураДанных.ТекущийАссортиментныйУчастокСклада;
	КонецЕсли;
	ТекущийКоэффициентПаллеты=0;
	Если СтруктураДанных.Свойство("ТекущийКоэффициентПаллеты") Тогда 
		ТекущийКоэффициентПаллеты=СтруктураДанных.ТекущийКоэффициентПаллеты;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка КАК Ячейка
		|ПОМЕСТИТЬ ЯчейкиАссортиметногоУчастка
		|ИЗ
		|	Справочник.ит_WMS_АссортиментныеУчасткиСклада.СоставЯчеек КАК ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек
		|ГДЕ
		|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ссылка = &АссортиментныйУчасток
		|	И ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка.ВидСкладскойДеятельности = ЗНАЧЕНИЕ(Перечисление.ит_WMS_ВидыСкладскойДеятельности.Розничная)
		|
		|СГРУППИРОВАТЬ ПО
		|	ит_WMS_АссортиментныеУчасткиСкладаСоставЯчеек.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка КАК Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение КАК СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция КАК Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж КАК Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус КАК Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода КАК ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет КАК КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета КАК НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Зона КАК Зона,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода >= 0
		|			ТОГДА ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода
		|		ИНАЧЕ -(ЕСТЬNULL(&НачалоОтсчетаПорядкаОбхода, 0) - ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода)
		|	КОНЕЦ КАК ПорядокОбходаПоЗонеПриемки,
		|	ВЫБОР
		|		КОГДА ТаблицаАнализаСвободныхЯчеек.Зона = ЗНАЧЕНИЕ(Перечисление.итWMSЗоныСклада.Хранения)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ПриоритетЗоныХранения,
		|	ВЫБОР
		|		КОГДА &ТекущийКоэффициентПаллеты > 0
		|				И &ТекущийКоэффициентПаллеты < 1
		|				И ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет < 1
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет - &ТекущийКоэффициентПаллеты < 0
		|						ТОГДА 1
		|					ИНАЧЕ -(&ТекущийКоэффициентПаллеты - ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет)
		|				КОНЕЦ
		|		КОГДА &ТекущийКоэффициентПаллеты > 0
		|				И &ТекущийКоэффициентПаллеты >= 1
		|				И ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет >= 1
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Порядок,
		|	ТаблицаАнализаСвободныхЯчеек.ПаллетОстаток КАК ПаллетОстаток
		|ПОМЕСТИТЬ ТаблицаОтбораСвободныхЯчеек
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкиАссортиметногоУчастка КАК ЯчейкиАссортиметногоУчастка
		|		ПО ТаблицаАнализаСвободныхЯчеек.Ячейка = ЯчейкиАссортиметногоУчастка.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СвободныеЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка КАК Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение КАК СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета КАК НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция КАК Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж КАК Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус КАК Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода КАК ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет КАК КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.Зона КАК Зона,
		|	ТаблицаАнализаСвободныхЯчеек.ПаллетОстаток КАК ПаллетОстаток
		|ПОМЕСТИТЬ СвободныеЯчейки
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОтбораСвободныхЯчеек.Ячейка КАК Ячейка,
		|	ТаблицаОтбораСвободныхЯчеек.СкладскоеПомещение КАК СкладскоеПомещение,
		|	ТаблицаОтбораСвободныхЯчеек.Линия КАК Линия,
		|	ТаблицаОтбораСвободныхЯчеек.Секция КАК Секция,
		|	ТаблицаОтбораСвободныхЯчеек.Стеллаж КАК Стеллаж,
		|	ТаблицаОтбораСвободныхЯчеек.Ярус КАК Ярус,
		|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбхода КАК ПорядокОбхода,
		|	ТаблицаОтбораСвободныхЯчеек.КоличествоПаллет КАК КоличествоПаллет,
		|	ТаблицаОтбораСвободныхЯчеек.НомерРяда_Пролета КАК НомерРяда_Пролета,
		|	ТаблицаОтбораСвободныхЯчеек.ПорядокОбходаПоЗонеПриемки КАК ПорядокОбходаПоЗонеПриемки,
		|	ТаблицаОтбораСвободныхЯчеек.Порядок КАК Порядок,
		|	ТаблицаОтбораСвободныхЯчеек.ПриоритетЗоныХранения КАК ПриоритетЗоныХранения,
		|	ТаблицаОтбораСвободныхЯчеек.ПаллетОстаток КАК ПаллетОстаток
		|ИЗ
		|	ТаблицаОтбораСвободныхЯчеек КАК ТаблицаОтбораСвободныхЯчеек
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТекущийКоэффициентПаллеты > 0
		|				ТОГДА ТаблицаОтбораСвободныхЯчеек.ПаллетОстаток >= &ТекущийКоэффициентПаллеты
		|			ИНАЧЕ ТаблицаОтбораСвободныхЯчеек.ПаллетОстаток >= 1
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриоритетЗоныХранения,
		|	Порядок,
		|	ПорядокОбходаПоЗонеПриемки,
		|	Ячейка,
		|	Линия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаОтбораСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЯчейкиАссортиметногоУчастка";
	
	Запрос.УстановитьПараметр("АссортиментныйУчасток", АссортиментныйУчасток);
	Запрос.УстановитьПараметр("НачалоОтсчетаПорядкаОбхода",СтруктураДанных.НачалоОтсчетаПорядкаОбхода);
    Запрос.УстановитьПараметр("ТекущийКоэффициентПаллеты",ТекущийКоэффициентПаллеты);

	
	Возврат Запрос.Выполнить();	
	КонецФункции

#КонецОбласти


Процедура ПоискЯчеекРазмещения(СтруктураДанных)Экспорт
	//////////// Получение данных настроек wms
	НастройкиWMS=итWMSПривилегированныйМодуль.ПолучитьНастройкиИзХранилищаПоСвойствам("ЯчейкиИсключенияАвтоматическогоРазмещения");
	Если итWMSСлужебныеПроцедурыИФункции.ТиповойОбработчикВыявленияОшибок(НастройкиWMS) Тогда
		итWMSСлужебныеПроцедурыИФункции.WMSОповещениеОТиповыхОшибках(НастройкиWMS);
		Возврат;
	КонецЕсли;
	//////////////////////////////////
	ЗонаКарантина=Константы.ЗонаКарантина.Получить();
	СтруктураДанных.Вставить("ЯчейкиИсключенияАвтоматическогоРазмещения",НастройкиWMS.ЯчейкиИсключенияАвтоматическогоРазмещения.ВыгрузитьКолонку("Ячейка"));
	УстановкаОбязательныхПараметров(СтруктураДанных);
	ТаблицаДляЗапроса=Товары.Выгрузить();
	ВидСкладскойДеятельности=Неопределено;
    СтруктураДанных.Свойство("ВидСкладскойДеятельности",ВидСкладскойДеятельности); 
    Если ВидСкладскойДеятельности=Неопределено Тогда
		 ВидСкладскойДеятельности=итWMSСлужебныеПроцедурыИФункции.ВидСкладскойДеятельностиПоУмолчанию(Организация);
	КонецЕсли;
	Запрос = Новый Запрос;
	Если ВидСкладскойДеятельности=Перечисления.ит_WMS_ВидыСкладскойДеятельности.Розничная Тогда 
	Запрос.Текст = ТекстЗапросаПоискаЯчеекРазмещенияРозница();
	Иначе 
	Запрос.Текст = ТекстЗапросаПоискаЯчеекРазмещенияОПТ();
	КонецЕсли;
	Запрос.УстановитьПараметр("Товары",ТаблицаДляЗапроса);
	Запрос.УстановитьПараметр("СкладскоеПомещение",СкладскоеПомещениеПеремещения);
	Запрос.УстановитьПараметр("ЗонаКарантина",ЗонаКарантина);
	Запрос.УстановитьПараметр("Организация",Организация);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	Если ВидСкладскойДеятельности=Перечисления.ит_WMS_ВидыСкладскойДеятельности.Розничная Тогда
	ПоискЯчеекРазмещенияРозница(ЗонаКарантина, МассивРезультатов, СтруктураДанных);
	иначе
	ПоискЯчеекРазмещенияОпт(ЗонаКарантина, МассивРезультатов, СтруктураДанных);
    КонецЕсли;
	
	
	
	
	
КонецПроцедуры




// Описание
// 
// Параметры:
// 	СтруктураДанных - Структура - Описание:
// * НачалоОтсчетаПорядкаОбхода - Число - устанавливает 0 по умолчанию, если свойство не установлено 
// * РазмещатьСПриоритетомХранения - Булево - устанавливает Истина по умолчанию, если свойство не установлено
// * РазмещатьПоБлижайшейЗонеПриемки - Булево - устанавливает Истина по умолчанию, если свойство не установлено
Процедура УстановкаОбязательныхПараметров( СтруктураДанных)
	
	Если  не СтруктураДанных.Свойство("НачалоОтсчетаПорядкаОбхода") тогда
		СтруктураДанных.Вставить("НачалоОтсчетаПорядкаОбхода",0);
	КонецЕсли;
	Если не СтруктураДанных.Свойство("РазмещатьСПриоритетомХранения") Тогда 
		СтруктураДанных.Вставить("РазмещатьСПриоритетомХранения",Истина);
	КонецЕсли;
	Если не СтруктураДанных.Свойство("РазмещатьПоБлижайшейЗонеПриемки") Тогда 
		СтруктураДанных.Вставить("РазмещатьПоБлижайшейЗонеПриемки",Истина);
	КонецЕсли;
	
КонецПроцедуры







Процедура РазместитьКарантинПаллеты(РезультатЗапроса,МенеджерВременныхТаблиц,СтруктураДанных)
	ТаблицаПаллетМест=новый ТаблицаЗначений;
	ТаблицаПаллетМест.Колонки.Добавить("Ячейка",новый ОписаниеТипов("СправочникСсылка.итСкладскиеЯчейки"));
	ТаблицаПаллетМест.Колонки.Добавить("КоличествоЗанятыхПаллетМест",новый ОписаниеТипов("Число"));
	ВыборкаКарантинПаллеты=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока  ВыборкаКарантинПаллеты.Следующий() Цикл 
		Если ВыборкаКарантинПаллеты.НоменклатураитПреоритетнаяЗонаРазмещения>1 тогда
			Сообщить("для паллеты карантина "+ВыборкаКарантинПаллеты.ИдентификаторУпаковки+" место размещения не найдено");
			Продолжить;
		КонецЕсли;	
		Сообщить("Паллета "+ВыборкаКарантинПаллеты.ИдентификаторУпаковки+" размещается в зону карантина");
		РезультатСвободныхЯчеек=ЗапроситьИнформациюПоЯчейкамКарантина(МенеджерВременныхТаблиц,ТаблицаПаллетМест);
		ТаблицаПаллетМест.Очистить();
		ВыборкаСвободныхЯчеек=РезультатСвободныхЯчеек.Выбрать();
		СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаКарантинПаллеты.ИдентификаторУпаковки));
		Если ВыборкаСвободныхЯчеек.Следующий() тогда
			КоличествоПаллет=ВыборкаСвободныхЯчеек.КоличествоПаллет;
			пока КоличествоПаллет>0 цикл
				для Каждого стр из СтрокиТабличнойЧасти цикл
					стр.ЯчейкаПолучатель=ВыборкаСвободныхЯчеек.Ячейка;
				КонецЦикла;
				КоличествоПаллет=КоличествоПаллет-1;
				СтрокаТаблицыПаллетМест=ТаблицаПаллетМест.Добавить();
				СтрокаТаблицыПаллетМест.Ячейка=ВыборкаСвободныхЯчеек.Ячейка;
				СтрокаТаблицыПаллетМест.КоличествоЗанятыхПаллетМест=1;
				Если КоличествоПаллет>0 тогда
					Если   ВыборкаКарантинПаллеты.Следующий() тогда
						СтрокиТабличнойЧасти=Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",ВыборкаКарантинПаллеты.ИдентификаторУпаковки));
						Сообщить("Паллета "+ВыборкаКарантинПаллеты.ИдентификаторУпаковки+" размещается в зону карантина");
					иначе
						Прервать;
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		иначе
			Сообщить(" для паллеты карантина "+ ВыборкаКарантинПаллеты.ИдентификаторУпаковки +" не нашлось подходящей ячейки");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗаполнитьДанныеСвободнымиЯчейкамиКарантина(СкладскоеПомещение,МенеджерЗапроса)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.ЯчейкаПолучатель КАК ЯчейкаПолучатель,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.ЯчейкаПолучатель КАК ЯчейкаПолучатель,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтТовары.ИдентификаторУпаковки) КАК ЗанятоеКоличествоПаллетоМест
	|ПОМЕСТИТЬ ВтРассчетЗанятыхПаллетоМест
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТовары.ЯчейкаПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ячейка КАК Ячейка,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ПаллетВЯчейке, 0)) КАК ПаллетВЯчейке
	|ПОМЕСТИТЬ ПаллетыВЯчейках
	|ИЗ
	|	(ВЫБРАТЬ
	|		итТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|		(ЕСТЬNULL(итТоварыВЯчейкахОстатки.КоличествоОстаток, 0) + итТоварыВЯчейкахОстатки.КРазмещениюОстаток) / ВЫБОР
	|			КОГДА ЕСТЬNULL(итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 1) = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(итТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмеренияМест.итКоличествоНаПаллете, 1)
	|		КОНЕЦ КАК ПаллетВЯчейке
	|	ИЗ
	|		РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ ВложенныйЗапрос.Ячейка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итСкладскиеЯчейки.Ссылка КАК Ячейка,
	|	ЕСТЬNULL(итСкладскиеЯчейки.КоличествоПалет, 0) - ЕСТЬNULL(ПаллетыВЯчейках.ПаллетВЯчейке, 0) - ЕСТЬNULL(ВтРассчетЗанятыхПаллетоМест.ЗанятоеКоличествоПаллетоМест, 0) КАК КоличествоПаллет,
	|	итСкладскиеЯчейки.СкладскоеПомещение КАК СкладскоеПомещение,
	|	итСкладскиеЯчейки.Секция КАК Секция,
	|	итСкладскиеЯчейки.Стеллаж КАК Стеллаж,
	|	итСкладскиеЯчейки.Линия КАК Линия,
	|	итСкладскиеЯчейки.Типоразмер КАК Типоразмер,
	|	итСкладскиеЯчейки.ПорядокОбхода КАК ПорядокОбхода,
	|	итСкладскиеЯчейки.НомерРяда_Пролета КАК НомерРяда_Пролета,
	|	итСкладскиеЯчейки.Ярус КАК Ярус,
	|	итСкладскиеЯчейки.Зона КАК Зона
	|ПОМЕСТИТЬ СвободныеЯчейки
	|ИЗ
	|	Справочник.итСкладскиеЯчейки КАК итСкладскиеЯчейки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПаллетыВЯчейках КАК ПаллетыВЯчейках
	|		ПО (ПаллетыВЯчейках.Ячейка = итСкладскиеЯчейки.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРассчетЗанятыхПаллетоМест КАК ВтРассчетЗанятыхПаллетоМест
	|		ПО итСкладскиеЯчейки.Ссылка = ВтРассчетЗанятыхПаллетоМест.ЯчейкаПолучатель
	|ГДЕ
	|	ЕСТЬNULL(итСкладскиеЯчейки.КоличествоПалет, 0) - ЕСТЬNULL(ПаллетыВЯчейках.ПаллетВЯчейке, 0) - ЕСТЬNULL(ВтРассчетЗанятыхПаллетоМест.ЗанятоеКоличествоПаллетоМест, 0) >= 1
	|	И итСкладскиеЯчейки.СкладскоеПомещение = &СкладскоеПомещение
	|	И итСкладскиеЯчейки.ЭтоГруппа = ЛОЖЬ
	|	И итСкладскиеЯчейки.Заблокирована = ЛОЖЬ
	|	И НЕ итСкладскиеЯчейки.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("СкладскоеПомещение",СкладскоеПомещение);
	Запрос.УстановитьПараметр("Товары",Товары);
	
    Запрос.Выполнить();	

	КонецПроцедуры
	
Функция ЗапроситьИнформациюПоЯчейкамКарантина(МенеджерЗапроса,ТаблицаПаллетМест)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерЗапроса;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПаллетМест.Ячейка,
		|	ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест
		|ПОМЕСТИТЬ ТаблицаПаллетМест
		|ИЗ
		|	&ТаблицаПаллетМест КАК ТаблицаПаллетМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПаллетМест.Ячейка,
		|	СУММА(ТаблицаПаллетМест.КоличествоЗанятыхПаллетМест) КАК КоличествоЗанятыхПаллетМест
		|ПОМЕСТИТЬ ТаблицаПаллетМестГруппировка
		|ИЗ
		|	ТаблицаПаллетМест КАК ТаблицаПаллетМест
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПаллетМест.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвободныеЯчейки.Ячейка,
		|	СвободныеЯчейки.СкладскоеПомещение,
		|	ВЫБОР
		|		КОГДА СвободныеЯчейки.Линия = ""0""
		|			ТОГДА 0
		|		КОГДА СвободныеЯчейки.Линия = ""00""
		|			ТОГДА 0
		|		КОГДА СвободныеЯчейки.Линия = ""1""
		|			ТОГДА 1
		|		КОГДА СвободныеЯчейки.Линия = ""01""
		|			ТОГДА 1
		|		КОГДА СвободныеЯчейки.Линия = ""2""
		|			ТОГДА 2
		|		КОГДА СвободныеЯчейки.Линия = ""02""
		|			ТОГДА 2
		|		КОГДА СвободныеЯчейки.Линия = ""3""
		|			ТОГДА 3
		|		КОГДА СвободныеЯчейки.Линия = ""03""
		|			ТОГДА 3
		|		КОГДА СвободныеЯчейки.Линия = ""4""
		|			ТОГДА 4
		|		КОГДА СвободныеЯчейки.Линия = ""04""
		|			ТОГДА 4
		|		КОГДА СвободныеЯчейки.Линия = ""5""
		|			ТОГДА 5
		|		КОГДА СвободныеЯчейки.Линия = ""05""
		|			ТОГДА 5
		|		КОГДА СвободныеЯчейки.Линия = ""6""
		|			ТОГДА 6
		|		КОГДА СвободныеЯчейки.Линия = ""06""
		|			ТОГДА 6
		|		КОГДА СвободныеЯчейки.Линия = ""7""
		|			ТОГДА 7
		|		КОГДА СвободныеЯчейки.Линия = ""07""
		|			ТОГДА 7
		|		КОГДА СвободныеЯчейки.Линия = ""8""
		|			ТОГДА 8
		|		КОГДА СвободныеЯчейки.Линия = ""08""
		|			ТОГДА 8
		|		КОГДА СвободныеЯчейки.Линия = ""9""
		|			ТОГДА 9
		|		КОГДА СвободныеЯчейки.Линия = ""09""
		|			ТОГДА 9
		|		КОГДА СвободныеЯчейки.Линия = ""10""
		|			ТОГДА 10
		|		КОГДА СвободныеЯчейки.Линия = ""010""
		|			ТОГДА 10
		|		КОГДА СвободныеЯчейки.Линия = ""11""
		|			ТОГДА 11
		|		КОГДА СвободныеЯчейки.Линия = ""011""
		|			ТОГДА 11
		|		КОГДА СвободныеЯчейки.Линия = ""12""
		|			ТОГДА 12
		|		КОГДА СвободныеЯчейки.Линия = ""012""
		|			ТОГДА 12
		|		КОГДА СвободныеЯчейки.Линия = ""13""
		|			ТОГДА 13
		|		КОГДА СвободныеЯчейки.Линия = ""013""
		|			ТОГДА 13
		|		КОГДА СвободныеЯчейки.Линия = ""14""
		|			ТОГДА 14
		|		КОГДА СвободныеЯчейки.Линия = ""014""
		|			ТОГДА 14
		|		КОГДА СвободныеЯчейки.Линия = ""15""
		|			ТОГДА 15
		|		КОГДА СвободныеЯчейки.Линия = ""015""
		|			ТОГДА 15
		|		КОГДА СвободныеЯчейки.Линия = ""16""
		|			ТОГДА 16
		|		КОГДА СвободныеЯчейки.Линия = ""016""
		|			ТОГДА 16
		|		КОГДА СвободныеЯчейки.Линия = ""17""
		|			ТОГДА 17
		|		КОГДА СвободныеЯчейки.Линия = ""017""
		|			ТОГДА 17
		|		КОГДА СвободныеЯчейки.Линия = ""18""
		|			ТОГДА 18
		|		КОГДА СвободныеЯчейки.Линия = ""018""
		|			ТОГДА 18
		|		КОГДА СвободныеЯчейки.Линия = ""19""
		|			ТОГДА 19
		|		КОГДА СвободныеЯчейки.Линия = ""019""
		|			ТОГДА 19
		|		КОГДА СвободныеЯчейки.Линия = ""20""
		|			ТОГДА 20
		|		КОГДА СвободныеЯчейки.Линия = ""020""
		|			ТОГДА 20
		|		КОГДА СвободныеЯчейки.Линия = ""21""
		|			ТОГДА 21
		|		КОГДА СвободныеЯчейки.Линия = ""021""
		|			ТОГДА 21
		|		КОГДА СвободныеЯчейки.Линия = ""22""
		|			ТОГДА 22
		|		КОГДА СвободныеЯчейки.Линия = ""022""
		|			ТОГДА 22
		|		КОГДА СвободныеЯчейки.Линия = ""23""
		|			ТОГДА 23
		|		КОГДА СвободныеЯчейки.Линия = ""023""
		|			ТОГДА 23
		|		КОГДА СвободныеЯчейки.Линия = ""24""
		|			ТОГДА 24
		|		КОГДА СвободныеЯчейки.Линия = ""024""
		|			ТОГДА 24
		|		КОГДА СвободныеЯчейки.Линия = ""25""
		|			ТОГДА 25
		|		КОГДА СвободныеЯчейки.Линия = ""025""
		|			ТОГДА 25
		|		КОГДА СвободныеЯчейки.Линия = ""26""
		|			ТОГДА 26
		|		КОГДА СвободныеЯчейки.Линия = ""026""
		|			ТОГДА 26
		|		КОГДА СвободныеЯчейки.Линия = ""27""
		|			ТОГДА 27
		|		КОГДА СвободныеЯчейки.Линия = ""027""
		|			ТОГДА 27
		|		КОГДА СвободныеЯчейки.Линия = ""28""
		|			ТОГДА 28
		|		КОГДА СвободныеЯчейки.Линия = ""028""
		|			ТОГДА 28
		|		КОГДА СвободныеЯчейки.Линия = ""29""
		|			ТОГДА 29
		|		КОГДА СвободныеЯчейки.Линия = ""029""
		|			ТОГДА 29
		|		КОГДА СвободныеЯчейки.Линия = ""30""
		|			ТОГДА 30
		|		КОГДА СвободныеЯчейки.Линия = ""030""
		|			ТОГДА 30
		|		КОГДА СвободныеЯчейки.Линия = ""31""
		|			ТОГДА 31
		|		КОГДА СвободныеЯчейки.Линия = ""031""
		|			ТОГДА 31
		|		КОГДА СвободныеЯчейки.Линия = ""32""
		|			ТОГДА 32
		|		КОГДА СвободныеЯчейки.Линия = ""032""
		|			ТОГДА 32
		|		КОГДА СвободныеЯчейки.Линия = ""33""
		|			ТОГДА 33
		|		КОГДА СвободныеЯчейки.Линия = ""033""
		|			ТОГДА 33
		|		КОГДА СвободныеЯчейки.Линия = ""34""
		|			ТОГДА 34
		|		КОГДА СвободныеЯчейки.Линия = ""034""
		|			ТОГДА 34
		|		КОГДА СвободныеЯчейки.Линия = ""35""
		|			ТОГДА 35
		|		КОГДА СвободныеЯчейки.Линия = ""035""
		|			ТОГДА 35
		|		КОГДА СвободныеЯчейки.Линия = ""36""
		|			ТОГДА 36
		|		КОГДА СвободныеЯчейки.Линия = ""036""
		|			ТОГДА 36
		|		КОГДА СвободныеЯчейки.Линия = ""37""
		|			ТОГДА 37
		|		КОГДА СвободныеЯчейки.Линия = ""037""
		|			ТОГДА 37
		|		КОГДА СвободныеЯчейки.Линия = ""38""
		|			ТОГДА 38
		|		КОГДА СвободныеЯчейки.Линия = ""038""
		|			ТОГДА 38
		|		КОГДА СвободныеЯчейки.Линия = ""39""
		|			ТОГДА 39
		|		КОГДА СвободныеЯчейки.Линия = ""039""
		|			ТОГДА 39
		|		КОГДА СвободныеЯчейки.Линия = ""40""
		|			ТОГДА 40
		|		КОГДА СвободныеЯчейки.Линия = ""040""
		|			ТОГДА 40
		|		КОГДА СвободныеЯчейки.Линия = ""41""
		|			ТОГДА 41
		|		КОГДА СвободныеЯчейки.Линия = ""041""
		|			ТОГДА 41
		|		КОГДА СвободныеЯчейки.Линия = ""42""
		|			ТОГДА 42
		|		КОГДА СвободныеЯчейки.Линия = ""042""
		|			ТОГДА 42
		|		КОГДА СвободныеЯчейки.Линия = ""43""
		|			ТОГДА 43
		|		КОГДА СвободныеЯчейки.Линия = ""043""
		|			ТОГДА 43
		|		КОГДА СвободныеЯчейки.Линия = ""44""
		|			ТОГДА 44
		|		КОГДА СвободныеЯчейки.Линия = ""044""
		|			ТОГДА 44
		|		КОГДА СвободныеЯчейки.Линия = ""45""
		|			ТОГДА 45
		|		КОГДА СвободныеЯчейки.Линия = ""045""
		|			ТОГДА 45
		|		КОГДА СвободныеЯчейки.Линия = ""46""
		|			ТОГДА 46
		|		КОГДА СвободныеЯчейки.Линия = ""046""
		|			ТОГДА 46
		|		КОГДА СвободныеЯчейки.Линия = ""47""
		|			ТОГДА 47
		|		КОГДА СвободныеЯчейки.Линия = ""047""
		|			ТОГДА 47
		|		КОГДА СвободныеЯчейки.Линия = ""48""
		|			ТОГДА 48
		|		КОГДА СвободныеЯчейки.Линия = ""048""
		|			ТОГДА 48
		|		КОГДА СвободныеЯчейки.Линия = ""49""
		|			ТОГДА 49
		|		КОГДА СвободныеЯчейки.Линия = ""049""
		|			ТОГДА 49
		|		КОГДА СвободныеЯчейки.Линия = ""50""
		|			ТОГДА 50
		|		КОГДА СвободныеЯчейки.Линия = ""050""
		|			ТОГДА 50
		|		КОГДА СвободныеЯчейки.Линия = ""51""
		|			ТОГДА 51
		|		КОГДА СвободныеЯчейки.Линия = ""051""
		|			ТОГДА 51
		|		КОГДА СвободныеЯчейки.Линия = ""52""
		|			ТОГДА 52
		|		КОГДА СвободныеЯчейки.Линия = ""052""
		|			ТОГДА 52
		|		КОГДА СвободныеЯчейки.Линия = ""53""
		|			ТОГДА 53
		|		КОГДА СвободныеЯчейки.Линия = ""053""
		|			ТОГДА 53
		|		КОГДА СвободныеЯчейки.Линия = ""54""
		|			ТОГДА 54
		|		КОГДА СвободныеЯчейки.Линия = ""054""
		|			ТОГДА 54
		|		КОГДА СвободныеЯчейки.Линия = ""55""
		|			ТОГДА 55
		|		КОГДА СвободныеЯчейки.Линия = ""055""
		|			ТОГДА 55
		|		КОГДА СвободныеЯчейки.Линия = ""56""
		|			ТОГДА 56
		|		КОГДА СвободныеЯчейки.Линия = ""056""
		|			ТОГДА 56
		|		КОГДА СвободныеЯчейки.Линия = ""57""
		|			ТОГДА 57
		|		КОГДА СвободныеЯчейки.Линия = ""057""
		|			ТОГДА 57
		|		КОГДА СвободныеЯчейки.Линия = ""58""
		|			ТОГДА 58
		|		КОГДА СвободныеЯчейки.Линия = ""058""
		|			ТОГДА 58
		|		КОГДА СвободныеЯчейки.Линия = ""59""
		|			ТОГДА 59
		|		КОГДА СвободныеЯчейки.Линия = ""059""
		|			ТОГДА 59
		|		КОГДА СвободныеЯчейки.Линия = ""60""
		|			ТОГДА 60
		|		КОГДА СвободныеЯчейки.Линия = ""060""
		|			ТОГДА 60
		|		КОГДА СвободныеЯчейки.Линия = ""61""
		|			ТОГДА 61
		|		КОГДА СвободныеЯчейки.Линия = ""061""
		|			ТОГДА 61
		|		КОГДА СвободныеЯчейки.Линия = ""62""
		|			ТОГДА 62
		|		КОГДА СвободныеЯчейки.Линия = ""062""
		|			ТОГДА 62
		|		КОГДА СвободныеЯчейки.Линия = ""63""
		|			ТОГДА 63
		|		КОГДА СвободныеЯчейки.Линия = ""063""
		|			ТОГДА 63
		|		КОГДА СвободныеЯчейки.Линия = ""64""
		|			ТОГДА 64
		|		КОГДА СвободныеЯчейки.Линия = ""064""
		|			ТОГДА 64
		|		КОГДА СвободныеЯчейки.Линия = ""65""
		|			ТОГДА 65
		|		КОГДА СвободныеЯчейки.Линия = ""065""
		|			ТОГДА 65
		|		КОГДА СвободныеЯчейки.Линия = ""66""
		|			ТОГДА 66
		|		КОГДА СвободныеЯчейки.Линия = ""066""
		|			ТОГДА 66
		|		КОГДА СвободныеЯчейки.Линия = ""67""
		|			ТОГДА 67
		|		КОГДА СвободныеЯчейки.Линия = ""067""
		|			ТОГДА 67
		|		КОГДА СвободныеЯчейки.Линия = ""68""
		|			ТОГДА 68
		|		КОГДА СвободныеЯчейки.Линия = ""068""
		|			ТОГДА 68
		|		КОГДА СвободныеЯчейки.Линия = ""69""
		|			ТОГДА 69
		|		КОГДА СвободныеЯчейки.Линия = ""069""
		|			ТОГДА 69
		|		КОГДА СвободныеЯчейки.Линия = ""70""
		|			ТОГДА 70
		|		КОГДА СвободныеЯчейки.Линия = ""070""
		|			ТОГДА 70
		|		КОГДА СвободныеЯчейки.Линия = ""71""
		|			ТОГДА 71
		|		КОГДА СвободныеЯчейки.Линия = ""071""
		|			ТОГДА 71
		|		КОГДА СвободныеЯчейки.Линия = ""72""
		|			ТОГДА 72
		|		КОГДА СвободныеЯчейки.Линия = ""072""
		|			ТОГДА 72
		|		КОГДА СвободныеЯчейки.Линия = ""73""
		|			ТОГДА 73
		|		КОГДА СвободныеЯчейки.Линия = ""073""
		|			ТОГДА 73
		|		КОГДА СвободныеЯчейки.Линия = ""74""
		|			ТОГДА 74
		|		КОГДА СвободныеЯчейки.Линия = ""074""
		|			ТОГДА 74
		|		КОГДА СвободныеЯчейки.Линия = ""75""
		|			ТОГДА 75
		|		КОГДА СвободныеЯчейки.Линия = ""075""
		|			ТОГДА 75
		|		КОГДА СвободныеЯчейки.Линия = ""76""
		|			ТОГДА 76
		|		КОГДА СвободныеЯчейки.Линия = ""076""
		|			ТОГДА 76
		|		КОГДА СвободныеЯчейки.Линия = ""77""
		|			ТОГДА 77
		|		КОГДА СвободныеЯчейки.Линия = ""077""
		|			ТОГДА 77
		|		КОГДА СвободныеЯчейки.Линия = ""78""
		|			ТОГДА 78
		|		КОГДА СвободныеЯчейки.Линия = ""078""
		|			ТОГДА 78
		|		КОГДА СвободныеЯчейки.Линия = ""79""
		|			ТОГДА 79
		|		КОГДА СвободныеЯчейки.Линия = ""079""
		|			ТОГДА 79
		|		КОГДА СвободныеЯчейки.Линия = ""80""
		|			ТОГДА 80
		|		КОГДА СвободныеЯчейки.Линия = ""080""
		|			ТОГДА 80
		|		КОГДА СвободныеЯчейки.Линия = ""81""
		|			ТОГДА 81
		|		КОГДА СвободныеЯчейки.Линия = ""081""
		|			ТОГДА 81
		|		КОГДА СвободныеЯчейки.Линия = ""82""
		|			ТОГДА 82
		|		КОГДА СвободныеЯчейки.Линия = ""082""
		|			ТОГДА 82
		|		КОГДА СвободныеЯчейки.Линия = ""83""
		|			ТОГДА 83
		|		КОГДА СвободныеЯчейки.Линия = ""083""
		|			ТОГДА 83
		|		КОГДА СвободныеЯчейки.Линия = ""84""
		|			ТОГДА 84
		|		КОГДА СвободныеЯчейки.Линия = ""084""
		|			ТОГДА 84
		|		КОГДА СвободныеЯчейки.Линия = ""85""
		|			ТОГДА 85
		|		КОГДА СвободныеЯчейки.Линия = ""085""
		|			ТОГДА 85
		|		КОГДА СвободныеЯчейки.Линия = ""86""
		|			ТОГДА 86
		|		КОГДА СвободныеЯчейки.Линия = ""086""
		|			ТОГДА 86
		|		КОГДА СвободныеЯчейки.Линия = ""87""
		|			ТОГДА 87
		|		КОГДА СвободныеЯчейки.Линия = ""087""
		|			ТОГДА 87
		|		КОГДА СвободныеЯчейки.Линия = ""88""
		|			ТОГДА 88
		|		КОГДА СвободныеЯчейки.Линия = ""088""
		|			ТОГДА 88
		|		КОГДА СвободныеЯчейки.Линия = ""89""
		|			ТОГДА 89
		|		КОГДА СвободныеЯчейки.Линия = ""089""
		|			ТОГДА 89
		|		КОГДА СвободныеЯчейки.Линия = ""90""
		|			ТОГДА 90
		|		КОГДА СвободныеЯчейки.Линия = ""090""
		|			ТОГДА 90
		|		КОГДА СвободныеЯчейки.Линия = ""91""
		|			ТОГДА 91
		|		КОГДА СвободныеЯчейки.Линия = ""091""
		|			ТОГДА 91
		|		КОГДА СвободныеЯчейки.Линия = ""92""
		|			ТОГДА 92
		|		КОГДА СвободныеЯчейки.Линия = ""092""
		|			ТОГДА 92
		|		КОГДА СвободныеЯчейки.Линия = ""93""
		|			ТОГДА 93
		|		КОГДА СвободныеЯчейки.Линия = ""093""
		|			ТОГДА 93
		|		КОГДА СвободныеЯчейки.Линия = ""94""
		|			ТОГДА 94
		|		КОГДА СвободныеЯчейки.Линия = ""094""
		|			ТОГДА 94
		|		КОГДА СвободныеЯчейки.Линия = ""95""
		|			ТОГДА 95
		|		КОГДА СвободныеЯчейки.Линия = ""095""
		|			ТОГДА 95
		|		КОГДА СвободныеЯчейки.Линия = ""96""
		|			ТОГДА 96
		|		КОГДА СвободныеЯчейки.Линия = ""096""
		|			ТОГДА 96
		|		КОГДА СвободныеЯчейки.Линия = ""97""
		|			ТОГДА 97
		|		КОГДА СвободныеЯчейки.Линия = ""097""
		|			ТОГДА 97
		|		КОГДА СвободныеЯчейки.Линия = ""98""
		|			ТОГДА 98
		|		КОГДА СвободныеЯчейки.Линия = ""098""
		|			ТОГДА 98
		|		КОГДА СвободныеЯчейки.Линия = ""99""
		|			ТОГДА 99
		|		КОГДА СвободныеЯчейки.Линия = ""099""
		|			ТОГДА 99
		|		КОГДА СвободныеЯчейки.Линия = ""100""
		|			ТОГДА 100
		|		КОГДА СвободныеЯчейки.Линия = ""0100""
		|			ТОГДА 100
		|		ИНАЧЕ СвободныеЯчейки.Линия
		|	КОНЕЦ КАК Линия,
		|	СвободныеЯчейки.Секция,
		|	СвободныеЯчейки.Стеллаж,
		|	СвободныеЯчейки.Ярус,
		|	СвободныеЯчейки.ПорядокОбхода,
		|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) КАК КоличествоПаллет,
		|	СвободныеЯчейки.НомерРяда_Пролета,
		|	СвободныеЯчейки.Зона
		|ПОМЕСТИТЬ ТаблицаАнализаСвободныхЯчеек
		|ИЗ
		|	СвободныеЯчейки КАК СвободныеЯчейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПаллетМестГруппировка КАК ТаблицаПаллетМестГруппировка
		|		ПО СвободныеЯчейки.Ячейка = ТаблицаПаллетМестГруппировка.Ячейка
		|ГДЕ
		|	СвободныеЯчейки.КоличествоПаллет - ЕСТЬNULL(ТаблицаПаллетМестГруппировка.КоличествоЗанятыхПаллетМест, 0) >= 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПаллетМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПаллетМестГруппировка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СвободныеЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Зона
		|ПОМЕСТИТЬ СвободныеЯчейки
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАнализаСвободныхЯчеек.Ячейка КАК Ячейка,
		|	ТаблицаАнализаСвободныхЯчеек.СкладскоеПомещение КАК СкладскоеПомещение,
		|	ТаблицаАнализаСвободныхЯчеек.Линия КАК Линия,
		|	ТаблицаАнализаСвободныхЯчеек.Секция,
		|	ТаблицаАнализаСвободныхЯчеек.Стеллаж,
		|	ТаблицаАнализаСвободныхЯчеек.Ярус,
		|	ТаблицаАнализаСвободныхЯчеек.ПорядокОбхода КАК ПорядокОбхода,
		|	ТаблицаАнализаСвободныхЯчеек.КоличествоПаллет,
		|	ТаблицаАнализаСвободныхЯчеек.НомерРяда_Пролета КАК НомерРяда_Пролета,
		|	ТаблицаАнализаСвободныхЯчеек.Зона
		|ИЗ
		|	ТаблицаАнализаСвободныхЯчеек КАК ТаблицаАнализаСвободныхЯчеек
		|
		|УПОРЯДОЧИТЬ ПО
		|	СкладскоеПомещение,
		|	ПорядокОбхода,
		|	Линия,
		|	НомерРяда_Пролета,
		|	Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаАнализаСвободныхЯчеек";
	
	   Запрос.УстановитьПараметр("ТаблицаПаллетМест",ТаблицаПаллетМест);
	
	   Возврат Запрос.Выполнить();
	
	
КонецФункции
	








Функция НайтиЗначенияВСтруктурированномМассиве(Массив,ИмяПоля)
	Для Каждого стр из Массив цикл
		Если НРег(стр.имя)=НРег(ИмяПоля) Тогда 
			Возврат стр.Значение;
		КонецЕсли;	
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

#КонецОбласти

	
#Область ОбязательныеПроцедурыИФункции
Процедура ДействияПриОтказеОтИсполненияДокумента()Экспорт 
	ЭтотОбъект.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределяется;	
	Товары.Загрузить(СнимокТабличнойЧастиДоРаспределения.Получить());
КонецПроцедуры

Процедура ДействияПриФиксацииЗадачДокумента() Экспорт 
	ЭтотОбъект.СтатусДокумента=СтатусДокументаПриФиксации();
	ДатаЗавершенияДокумента=ТекущаяДата();
	ФиксацияСтрокДокумента();
	Отказ=Ложь;
	итWMSСлужебныеПроцедурыИФункции.СоздатьДокументПереупаковкиПМУ(Ссылка,Отказ);
	Если Отказ Тогда 
		СтатусДокумента= Перечисления.итWMSСтатусыСкладскихДокументов.ВыполненСОшибкой;
		Комментарий=Комментарий+" #Ошибка переупаковки марок";
	иначе
		ОчиститьДанныеПомарочногоУчета();   
	КонецЕсли;
КонецПроцедуры

Функция СтатусДокументаПриФиксации()
	МассивСтрокОтмененныхЗадач=Товары.НайтиСтроки(новый Структура("СостояниеЗадачи",Перечисления.итWMSСостоянияЗадачТСД.Отменена));	
	Если МассивСтрокОтмененныхЗадач.Количество()>0 или КоличествоПланНеРавноФакту() тогда
		Возврат Перечисления.итWMSСтатусыСкладскихДокументов.ВыполненСОшибкой;
	иначе
		Возврат Перечисления.итWMSСтатусыСкладскихДокументов.Завершен;
	КонецЕсли;	
КонецФункции

Процедура ФиксацияСтрокДокумента()
	Для Каждого стр из Товары цикл
		стр.ФиксацияСтроки=Истина;
	КонецЦикла;
КонецПроцедуры

Функция КоличествоПланНеРавноФакту()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSПеремещениеТовары.Количество КАК Количество,
	|	итWMSПеремещениеТовары.КоличествоФакт КАК КоличествоФакт,
	|	&Ссылка
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК итWMSПеремещениеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВтТовары.Количество) КАК Количество,
	|	СУММА(ВтТовары.КоличествоФакт) КАК КоличествоФакт,
	|	ВтТовары.Ссылка
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТовары.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Товары",Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Если ВыборкаДетальныеЗаписи.Количество<>ВыборкаДетальныеЗаписи.КоличествоФакт Тогда 
			Возврат Истина;
		иначе
			Возврат Ложь
		КонецЕсли;	
	иначе
		Возврат Ложь;
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции


#КонецОбласти
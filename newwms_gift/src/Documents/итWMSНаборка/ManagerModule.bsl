Процедура ВнестиИзменениеДанныхТСДВДокумент(Документ) Экспорт 
	итWMSОбработчикДанныхНаборки.ВнестиИзмененияВДокументНаборки(Документ);
КонецПроцедуры


Процедура Печать(ТабличныйДокумент,НаименованиеПечатнойФормы,Ссылка) Экспорт 
	Если НаименованиеПечатнойФормы="ПаллетныйЛистКоммандор" Тогда 
		ПечатьПаллетныйЛистКоммандор(ТабличныйДокумент,Ссылка);
	КонецЕсли;
	Если НаименованиеПечатнойФормы="ПечатьПаспортаПаллеты" Тогда 
		ПечатьПаспортаПаллеты(ТабличныйДокумент,Ссылка);
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьПаспортаПаллеты(ТабличныйДокумент,Ссылка)
	
	Макет = ПолучитьМакет("ПАСПОРТ_ПАЛЛЕТА");

	Запрос = Новый Запрос;
	Запрос.Текст =
	    "ВЫБРАТЬ
	    |	ЗаказПокупателя.Ссылка КАК Ссылка,
	    |	ПОДСТРОКА(ЗаказПокупателя.АдресДоставки, 1, 255) КАК АдресРЦ,
	    |	ЗаказПокупателя.ДатаПоставки КАК итДатаПоставки,
	    |	ЗаказПокупателя.СетевойНомерЗаказа КАК Номер,
	    |	&Наборка КАК Наборка
	    |ПОМЕСТИТЬ ВтЗаказ
	    |ИЗ
	    |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	    |ГДЕ
	    |	ЗаказПокупателя.Ссылка = &Ссылка
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВтЗаказ.АдресРЦ КАК АдресРЦ,
	    |	ВтЗаказ.Номер КАК Номер,
	    |	ВтЗаказ.итДатаПоставки КАК итДатаПоставки,
	    |	итWMSНаборкаТовары.Ссылка КАК Ссылка,
	    |	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковки,
	    |	итWMSНаборкаТовары.Номенклатура КАК Номенклатура,
	    |	итWMSНаборкаТовары.Характеристика КАК Характеристика,
	    |	итWMSНаборкаТовары.Качество КАК Качество,
	    |	итWMSНаборкаТовары.ДатаРозлива КАК ДатаРозлива,
	    |	итWMSНаборкаТовары.СостояниеЗадачи КАК СостояниеЗадачи,
	    |	СУММА(ВЫБОР
	    |			КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	    |				ТОГДА ЕСТЬNULL(итWMSНаборкаТовары.КоличествоФакт, 0) - ЕСТЬNULL(итWMSНаборкаТовары.КоличествоИзъятия, 0)
	    |			ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт
	    |		КОНЕЦ) КАК Количество,
	    |	итWMSНаборкаТовары.СерияНоменклатуры КАК СерияНоменклатуры
	    |ПОМЕСТИТЬ ДанныеНаборкиОтбор
	    |ИЗ
	    |	ВтЗаказ КАК ВтЗаказ
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
	    |		ПО ВтЗаказ.Наборка = итWMSНаборкаТовары.Ссылка
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ВтЗаказ.АдресРЦ,
	    |	ВтЗаказ.Номер,
	    |	ВтЗаказ.итДатаПоставки,
	    |	итWMSНаборкаТовары.Ссылка,
	    |	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель,
	    |	итWMSНаборкаТовары.Номенклатура,
	    |	итWMSНаборкаТовары.Характеристика,
	    |	итWMSНаборкаТовары.Качество,
	    |	итWMSНаборкаТовары.ДатаРозлива,
	    |	итWMSНаборкаТовары.СостояниеЗадачи,
	    |	итWMSНаборкаТовары.СерияНоменклатуры
	    |
	    |ИМЕЮЩИЕ
	    |	СУММА(ВЫБОР
	    |			КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	    |				ТОГДА ЕСТЬNULL(итWMSНаборкаТовары.КоличествоФакт, 0) - ЕСТЬNULL(итWMSНаборкаТовары.КоличествоИзъятия, 0)
	    |			ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт
	    |		КОНЕЦ) > 0
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ДанныеНаборкиОтбор.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	    |	СУММА(ЕСТЬNULL(ДанныеНаборкиОтбор.Количество, 0) / ВЫБОР
	    |			КОГДА ЕСТЬNULL(ДанныеНаборкиОтбор.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0) = 0
	    |				ТОГДА 1
	    |			ИНАЧЕ ЕСТЬNULL(ДанныеНаборкиОтбор.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент, 0)
	    |		КОНЕЦ) КАК КоличествоКоробов
	    |ПОМЕСТИТЬ КоличествоКоробовПоИдентификатору
	    |ИЗ
	    |	ДанныеНаборкиОтбор КАК ДанныеНаборкиОтбор
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ДанныеНаборкиОтбор.ИдентификаторУпаковки
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ДанныеНаборкиОтбор.АдресРЦ КАК АдресРЦ,
	    |	ДанныеНаборкиОтбор.Номер КАК Номер,
	    |	ДанныеНаборкиОтбор.итДатаПоставки КАК итДатаПоставки,
	    |	ДанныеНаборкиОтбор.Ссылка КАК Ссылка,
	    |	ДанныеНаборкиОтбор.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	    |	ДанныеНаборкиОтбор.Номенклатура КАК Номенклатура,
	    |	ДанныеНаборкиОтбор.Характеристика КАК Характеристика,
	    |	ДанныеНаборкиОтбор.Качество КАК Качество,
	    |	ДанныеНаборкиОтбор.ДатаРозлива КАК ДатаРозлива,
	    |	ДанныеНаборкиОтбор.СостояниеЗадачи КАК СостояниеЗадачи,
	    |	ДанныеНаборкиОтбор.Количество КАК Количество,
	    |	ВложенныйЗапрос.Штрихкод КАК Штрихкод,
	    |	ВложенныйЗапрос.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	    |	КоличествоКоробовПоИдентификатору.КоличествоКоробов КАК КоличествоКоробов,
	    |	ДанныеНаборкиОтбор.СерияНоменклатуры КАК СерияНоменклатуры
	    |ИЗ
	    |	ДанныеНаборкиОтбор КАК ДанныеНаборкиОтбор
	    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	    |			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	    |			Штрихкоды.Штрихкод КАК Штрихкод,
	    |			ВложенныйЗапрос.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков
	    |		ИЗ
	    |			(ВЫБРАТЬ
	    |				ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	    |				МАКСИМУМ(ЗаказПокупателяТовары.Номенклатура.ЕдиницаХраненияОстатков) КАК ЕдиницаХраненияОстатков
	    |			ИЗ
	    |				ВтЗаказ КАК ВтЗаказ
	    |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	    |					ПО ВтЗаказ.Ссылка = ЗаказПокупателяТовары.Ссылка
	    |			
	    |			СГРУППИРОВАТЬ ПО
	    |				ЗаказПокупателяТовары.Номенклатура) КАК ВложенныйЗапрос
	    |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	    |				ПО ВложенныйЗапрос.Номенклатура = Штрихкоды.Штрихкод
	    |					И ВложенныйЗапрос.ЕдиницаХраненияОстатков = Штрихкоды.ЕдиницаИзмерения) КАК ВложенныйЗапрос
	    |		ПО ДанныеНаборкиОтбор.Номенклатура = ВложенныйЗапрос.Номенклатура
	    |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоКоробовПоИдентификатору КАК КоличествоКоробовПоИдентификатору
	    |		ПО ДанныеНаборкиОтбор.ИдентификаторУпаковки = КоличествоКоробовПоИдентификатору.ИдентификаторУпаковки
	    |ИТОГИ
	    |	МАКСИМУМ(АдресРЦ),
	    |	МАКСИМУМ(Номер),
	    |	МАКСИМУМ(итДатаПоставки),
	    |	МАКСИМУМ(Номенклатура),
	    |	МАКСИМУМ(Количество),
	    |	МАКСИМУМ(Штрихкод),
	    |	МАКСИМУМ(КоличествоКоробов)
	    |ПО
	    |	ИдентификаторУпаковки,
	    |	СерияНоменклатуры";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка.итОснование);	
	Запрос.УстановитьПараметр("Наборка",Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИдентификаторУпаковки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИдЗаменыДанных=Строка(новый УникальныйИдентификатор());
	//ДанныеWMS= итWMSПривилегированныйМодуль.ПолучитьНастройкиИзХранилища();
	Обработка=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	КомпонентаШк=Неопределено;
	Обработка.ПодключитьКомпоненту(КомпонентаШк);
	
	Паллета=0;
	
	Пока ВыборкаИдентификаторУпаковки.Следующий() Цикл
		
		Паллета=Паллета+1;
		ОбластьПаспорта=Макет.ПолучитьОбласть("ОбластьПаспортПаллеты");
		ОбластьПаспорта.Параметры.Поставщик=Ссылка.Организация;
		ОбластьПаспорта.Параметры.НумерацияПаллеты="№"+Паллета+" из "+ИдЗаменыДанных;
		ОбластьПаспорта.Параметры.КоличествоКоробовВПаллете=ВыборкаИдентификаторУпаковки.КоличествоКоробов;
		ОбластьПаспорта.Параметры.АдресРцНазвание=ВыборкаИдентификаторУпаковки.АдресРЦ+"/"+ВыборкаИдентификаторУпаковки.АдресРЦ;//СсылкаНаОбъект.алкПунктРазгрузки.НаименованиеПолное;
		ОбластьПаспорта.Параметры.НомерЗаказаВремяПоставки="№"+ВыборкаИдентификаторУпаковки.Номер+"/ "+ ВыборкаИдентификаторУпаковки.итДатаПоставки;
		
		ВыборкаСерии=ВыборкаИдентификаторУпаковки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСерии.Следующий() цикл
			
			ОбластьSSCC=Макет.ПолучитьОбласть("ОбластьSSCC");
			ОбластьSSCC.Параметры.Поставщик=Ссылка.Организация;
			ОбластьSSCC.Параметры.Номенклатура=ВыборкаСерии.Номенклатура;
			ОбластьSSCC.Параметры.SSCC=ВыборкаСерии.ИдентификаторУпаковки;
			ОбластьSSCC.Параметры.EAN13=ВыборкаСерии.Штрихкод;
			ОбластьSSCC.Параметры.Количество=ВыборкаСерии.Количество;
			ОбластьSSCC.Параметры.СрокГодности=ВыборкаСерии.СерияНоменклатуры.СрокГодности;
			ОбластьSSCC.Параметры.НомерПартии=ВыборкаСерии.СерияНоменклатуры.СерийныйНомер; 
			Если КомпонентаШк=Неопределено тогда
				Сообщить("Нет компоненты штрихкода");
				Возврат 
			КонецЕсли;	
			КомпонентаШк.ТипКода=4;
			КомпонентаШк.ЗначениеКода=ОбластьSSCC.Параметры.SSCC;
			КомпонентаШк.ОтображатьТекст=Истина;
			КомпонентаШк.Ширина=167;
			КомпонентаШк.Высота=30;
			ПроверкаКартинкиПоМинимальнымПараметрам(КомпонентаШк);
			Картинка=КомпонентаШк.ПолучитьШтрихкод();
			ОбластьSSCC.Параметры.ШтрихкодПараметр=новый Картинка(Картинка);
			МассивОбластей=новый Массив;
			МассивОбластей.Добавить(ОбластьSSCC);
			МассивОбластей.Добавить(ОбластьПаспорта);
			Если не ТабличныйДокумент.ПроверитьВывод(МассивОбластей) тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьПаспорта);
			ТабличныйДокумент.Вывести(ОбластьSSCC);
		КонецЦикла;
	КонецЦикла;
	пока ТабличныйДокумент.НайтиТекст(ИдЗаменыДанных)<> Неопределено цикл
		ОбластьСтрокВсего=ТабличныйДокумент.НайтиТекст(ИдЗаменыДанных);
		ОбластьСтрокВсего.Текст=СтрЗаменить(ОбластьСтрокВсего.Текст,ИдЗаменыДанных,Паллета);
	КонецЦикла;

	КонецПроцедуры
Процедура ПроверкаКартинкиПоМинимальнымПараметрам(КомпонентШК)Экспорт 
	Если КомпонентШК.Ширина < КомпонентШК.МинимальнаяШиринаКода Тогда
		КомпонентШК.Ширина = КомпонентШК.МинимальнаяШиринаКода;
	КонецЕсли;
	// Если установленная нами высота меньше минимально допустимой для этого штрихкода.
	Если КомпонентШК.Высота < КомпонентШК.МинимальнаяВысотаКода Тогда
		КомпонентШК.Высота = КомпонентШК.МинимальнаяВысотаКода;
	КонецЕсли;
	
КонецПроцедуры

Процедура  ПечатьПаллетныйЛистКоммандор(ТабличныйДокумент,Ссылка)
	Макет=ПолучитьМакет("ПаллетныйЛистКомандор");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSНаборка.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВтНаборка
	|ИЗ
	|	Документ.итWMSНаборка КАК итWMSНаборка
	|ГДЕ
	|	итWMSНаборка.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателя.СетевойНомерЗаказа КАК НомерЗаказа,
	|	ЗаказПокупателя.Организация КАК Поставщик,
	|	ЗаказПокупателя.Контрагент КАК Покупатель,
	|	ЗаказПокупателя.АдресДоставки КАК АдресДоставки,
	|	ЗаказПокупателя.Ссылка КАК Заказ
	|ПОМЕСТИТЬ ВтДанныеЗаказа
	|ИЗ
	|	ВтНаборка КАК ВтНаборка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|		ПО ВтНаборка.Ссылка.итОснование = ЗаказПокупателя.Ссылка
	|			И (ЗаказПокупателя.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеЗаказа.НомерЗаказа КАК НомерЗаказа,
	|	ВтДанныеЗаказа.Поставщик КАК Поставщик,
	|	ВтДанныеЗаказа.Покупатель КАК Покупатель,
	|	ВтДанныеЗаказа.АдресДоставки КАК Адрес,
	|	ВтДанныеЗаказа.Заказ КАК Заказ
	|ПОМЕСТИТЬ ДанныеАдресаПоЗаказу
	|ИЗ
	|	ВтДанныеЗаказа КАК ВтДанныеЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номер КАК НомерТН,
	|	ДанныеАдресаПоЗаказу.НомерЗаказа КАК НомерЗаказа,
	|	ДанныеАдресаПоЗаказу.Поставщик КАК Поставщик,
	|	ДанныеАдресаПоЗаказу.Покупатель КАК Покупатель,
	|	ДанныеАдресаПоЗаказу.Адрес КАК Адрес
	|ПОМЕСТИТЬ ДанныеЗаказаиТН
	|ИЗ
	|	ДанныеАдресаПоЗаказу КАК ДанныеАдресаПоЗаказу
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ДанныеАдресаПоЗаказу.Заказ = РеализацияТоваровУслуг.Сделка
	|			И (РеализацияТоваровУслуг.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итWMSНаборкаТовары.Номенклатура КАК Номенклатура,
	|	итWMSНаборкаТовары.ДатаРозлива КАК ДатаРозлива,
	|	итWMSНаборкаТовары.Номенклатура.СрокГодности КАК СрокГодности,
	|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковкиПолучатель,
	|	ВтНаборка.Ссылка КАК НАборка
	|ПОМЕСТИТЬ ВтДанныеНаборки
	|ИЗ
	|	ВтНаборка КАК ВтНаборка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
	|		ПО ВтНаборка.Ссылка = итWMSНаборкаТовары.Ссылка
	|ГДЕ
	|	итWMSНаборкаТовары.ФиксацияСтроки
	|	И итWMSНаборкаТовары.СостояниеЗадачи = ЗНАЧЕНИЕ(Перечисление.итwmsСостоянияЗадачТСД.Выполнена)
	|	И ВЫБОР
	|			КОГДА итWMSНаборкаТовары.ИзъятиеТовара
	|				ТОГДА итWMSНаборкаТовары.КоличествоФакт - итWMSНаборкаТовары.КоличествоИзъятия > 0
	|			ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт > 0
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	итWMSНаборкаТовары.Номенклатура,
	|	итWMSНаборкаТовары.ДатаРозлива,
	|	итWMSНаборкаТовары.Номенклатура.СрокГодности,
	|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель,
	|	ВтНаборка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтДанныеНаборки.ИдентификаторУпаковкиПолучатель) КАК ИдентификаторУпаковкиПолучатель,
	|	ВтДанныеНаборки.НАборка КАК НАборка
	|ПОМЕСТИТЬ КоличествоSSCC
	|ИЗ
	|	ВтДанныеНаборки КАК ВтДанныеНаборки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДанныеНаборки.НАборка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗаказаиТН.НомерТН КАК НомерТН,
	|	ДанныеЗаказаиТН.НомерЗаказа КАК НомерЗаявки,
	|	ДанныеЗаказаиТН.Поставщик КАК Организация,
	|	ДанныеЗаказаиТН.Покупатель КАК Контрагент,
	|	ДанныеЗаказаиТН.Адрес КАК ПунктРазгрузкиКА
	|ИЗ
	|	ДанныеЗаказаиТН КАК ДанныеЗаказаиТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеНаборки.Номенклатура КАК Номенклатура,
	|	ВтДанныеНаборки.ДатаРозлива КАК ДатаПроизводства,
	|	ВтДанныеНаборки.СрокГодности КАК СрокГодности,
	|	ВтДанныеНаборки.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковкиПолучатель
	|ИЗ
	|	ВтДанныеНаборки КАК ВтДанныеНаборки
	|ИТОГИ
	|	КОЛИЧЕСТВО(Номенклатура)
	|ПО
	|	ИдентификаторУпаковкиПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КоличествоSSCC.ИдентификаторУпаковкиПолучатель, 0) КАК КоличествоSSCC
	|ИЗ
	|	КоличествоSSCC КАК КоличествоSSCC";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаШаки=МассивРезультатов[6].Выбрать();
	Если не ВыборкаШаки.Следующий() Тогда 
		Возврат;
	КонецЕсли;
	ВыборкаКоличествоПаллет=МассивРезультатов[8].Выбрать();
	Если не ВыборкаКоличествоПаллет.Следующий() Тогда 
		Возврат;
	КонецЕсли;
	НомерПаллеты=0;
	ДетальнаяВыборкаПаллета=МассивРезультатов[7].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ДетальнаяВыборкаПаллета.Следующий() Цикл 
		НомерПаллеты=НомерПаллеты+1;
		ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(ВыборкаШаки);
		ОбластьШапка.Параметры.КоличествоПозицийВПаллете=ДетальнаяВыборкаПаллета.Номенклатура;
		ОбластьШапка.Параметры.НомерПоПорядку=Строка(НомерПаллеты)+"/"+Строка(ВыборкаКоличествоПаллет.КоличествоSSCC);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ДетальнаяВыборка=ДетальнаяВыборкаПаллета.Выбрать();
		Пока ДетальнаяВыборка.Следующий() Цикл 
			ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Заполнить(ДетальнаяВыборка);
			Если  ДетальнаяВыборка.СрокГодности= 0 Тогда 
				ОбластьСтрока.Параметры.СрокГодности="Без срока годности";
			иначе
				ОбластьСтрока.Параметры.СрокГодности= Строка(ДетальнаяВыборка.СрокГодности)+" Месяцев";
			КонецЕсли;
			Если ТабличныйДокумент.ПроверитьВывод(ОбластьСтрока) Тогда 
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьШапка);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;

КонецПроцедуры    




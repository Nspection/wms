
Процедура ПриЗаписи(Отказ, Замещение)
	//РегистрацияИзмененийSQLПриЗаписи(Отказ, Замещение);
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("НеРегестрироватьИзменения") Тогда 
		Возврат
	КонецЕсли;	
	для Каждого Запись из ЭтотОбъект цикл
		Если не Запись.ТСД.Пустая() тогда
			НовыйНаборЗаписей=РегистрыСведений.итWMSЗадачиТСД.СоздатьНаборЗаписей();
			НовыйНаборЗаписей.Отбор.ИдЗадачи.Установить(Запись.ИдЗадачи);
			НовыйНаборЗаписей.Отбор.ДокументОснование.Установить(Запись.ДокументОснование);
			НовыйНаборЗаписей.Отбор.ТСД.Установить(Запись.ТСД);
			НовыйНаборЗаписей.Отбор.ТипЗадачи.Установить(Запись.ТипЗадачи);
			НовыйНаборЗаписей.Отбор.ИдЗадачиРодителя.Установить(Запись.ИдЗадачиРодителя);
			ПланыОбмена.ЗарегистрироватьИзменения(Запись.ТСД.УзелПланаОбмена,НовыйНаборЗаписей);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
ПолучитьДанныеНабора(МенеджерВременныхТаблиц);
//РегистрацияИзмененийSQLПередЗаписи(Отказ, Замещение);
для Каждого НоваяЗапись из ЭтотОбъект цикл	
	СтарыйНаборЗаписей=ПолучитьСтарыйНаборЗаписей(НоваяЗапись.ИдЗадачи,МенеджерВременныхТаблиц);
	Пока  СтарыйНаборЗаписей.Следующий() цикл
		Если СтарыйНаборЗаписей.ТСД<>Справочники.итWMSСправочникТСД.ПустаяСсылка() и СтарыйНаборЗаписей.ТСД <> НоваяЗапись.ТСД тогда
			НовыйНаборЗаписей=РегистрыСведений.итWMSЗадачиТСД.СоздатьНаборЗаписей();
			НовыйНаборЗаписей.Отбор.ИдЗадачи.Установить(СтарыйНаборЗаписей.ИдЗадачи);
			НовыйНаборЗаписей.Отбор.ДокументОснование.Установить(СтарыйНаборЗаписей.ДокументОснование);
			НовыйНаборЗаписей.Отбор.ТСД.Установить(СтарыйНаборЗаписей.ТСД);
			НовыйНаборЗаписей.Отбор.ТипЗадачи.Установить(СтарыйНаборЗаписей.ТипЗадачи);
			НовыйНаборЗаписей.Отбор.ИдЗадачиРодителя.Установить(СтарыйНаборЗаписей.ИдЗадачиРодителя);
			ПланыОбмена.ЗарегистрироватьИзменения(СтарыйНаборЗаписей.ТСД.УзелПланаОбмена,НовыйНаборЗаписей);	
		КонецЕсли;
	КонецЦикла;
КонецЦикла;	

КонецПроцедуры
Процедура ПолучитьДанныеНабора(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSЗадачиТСД.ТСД,
		|	итWMSЗадачиТСД.ДокументОснование,
		|	итWMSЗадачиТСД.ТипЗадачи,
		|	итWMSЗадачиТСД.ИдЗадачи,
		|	итWMSЗадачиТСД.ИдЗадачиРодителя,
		|	итWMSЗадачиТСД.ИдентификаторУпаковки,
		|	итWMSЗадачиТСД.ЯчейкаОтправитель,
		|	итWMSЗадачиТСД.ЯчейкаПолучатель,
		|	итWMSЗадачиТСД.ДополнительныеДанные,
		|	итWMSЗадачиТСД.ДатаНачала,
		|	итWMSЗадачиТСД.ДатаОкончания,
		|	итWMSЗадачиТСД.Состояние,
		|	итWMSЗадачиТСД.ФиксацияЗадачи,
		|	итWMSЗадачиТСД.ДанныеДокументаТСД
		|ПОМЕСТИТЬ ВтДанныеЗадач
		|ИЗ
		|	РегистрСведений.итWMSЗадачиТСД КАК итWMSЗадачиТСД
		|ГДЕ
		|	итWMSЗадачиТСД.ИдЗадачи В(&СписокЗадач)";
	
	Запрос.УстановитьПараметр("СписокЗадач", ЭтотОбъект.ВыгрузитьКолонку("ИдЗадачи"));
	
	Запрос.Выполнить();
	
	
	КонецПроцедуры
	
Функция ПолучитьСтарыйНаборЗаписей(ИдЗадачи,МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВтДанныеЗадач.ТСД,
		|	ВтДанныеЗадач.ДокументОснование,
		|	ВтДанныеЗадач.ТипЗадачи,
		|	ВтДанныеЗадач.ИдЗадачи,
		|	ВтДанныеЗадач.ИдЗадачиРодителя,
		|	ВтДанныеЗадач.ИдентификаторУпаковки,
		|	ВтДанныеЗадач.ЯчейкаОтправитель,
		|	ВтДанныеЗадач.ЯчейкаПолучатель,
		|	ВтДанныеЗадач.ДополнительныеДанные,
		|	ВтДанныеЗадач.ДатаНачала,
		|	ВтДанныеЗадач.ДатаОкончания,
		|	ВтДанныеЗадач.Состояние,
		|	ВтДанныеЗадач.ФиксацияЗадачи,
		|	ВтДанныеЗадач.ДанныеДокументаТСД
		|ИЗ
		|	ВтДанныеЗадач КАК ВтДанныеЗадач
		|ГДЕ
		|	ВтДанныеЗадач.ИдЗадачи = &ИдЗадачи";
	
	Запрос.УстановитьПараметр("ИдЗадачи", ИдЗадачи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	КонецФункции


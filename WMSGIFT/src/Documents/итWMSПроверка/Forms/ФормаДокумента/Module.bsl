

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Распределен Тогда
		ОбновитьДанныеСТСД();
	КонецЕсли;
	Если Параметры.Ключ.Пустая() тогда
		Объект.НеРаспределятьНаТСД=Истина;
		Если не Объект.СозданНаОснованиСерверногоВызова тогда
			Для Каждого стр из Объект.итОснования  Цикл 
				стр.Документ=Неопределено;
			КонецЦикла;
		иначе
			Объект.СозданНаОснованиСерверногоВызова=Ложь;
		КонецЕсли;
		Объект.Дата=ТекущаяДата();
        Объект.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Создан;
        Объект.Ответственный=ПараметрыСеанса.ТекущийПользователь;

	КонецЕсли;
	   ВидимостьДоступностьЭлементовСервер();
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ДобавитьТовары(Команда)
	Если  Элементы.ГруппаТовары.ТолькоПросмотр тогда
		Возврат
	КонецЕсли;	
	НоваяСтрока=Объект.Товары.Добавить();
	НоваяСтрока.ИдентификаторСтроки=новый УникальныйИдентификатор;
	НоваяСтрока.ИдентификаторСтрокиПредставление= Строка(НоваяСтрока.ИдентификаторСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьТовары(Команда)
	Если  Элементы.ГруппаТовары.ТолькоПросмотр тогда
		Возврат
	КонецЕсли;	
	Если ТекущийЭлемент.Имя="Товары" тогда
		НоваяСтрока=Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущийЭлемент.ТекущиеДанные);
		НоваяСтрока.ИдентификаторСтроки=новый УникальныйИдентификатор;
		НоваяСтрока.ИдентификаторСтрокиПредставление=Строка(НоваяСтрока.ИдентификаторСтроки);
		НоваяСтрока.Количество=0;
		НоваяСтрока.КоличествоФакт=0;
		НоваяСтрока.ЯчейкаПикинга=ПустаяЯчейка();
		НоваяСтрока.ЯчейкаОтправитель=ПустаяЯчейка();
		НоваяСтрока.ЯчейкаПолучатель=ПустаяЯчейка();
		НоваяСтрока.ФиксацияСтроки=Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрЗначения(Команда)
	Если ТекущийЭлемент.Имя="Товары" Тогда
		Если ТипЗнч(ТекущийЭлемент.ТекущийЭлемент)=Тип("ПолеФормы") Тогда
			ИмяПоля=ТекущийЭлемент.ТекущийЭлемент.Имя;
			ДлинаСтроки=СтрДлина(ИмяПоля);
			ДлинаТовары=СтрДлина("Товары");
			ПутьКДанным=Прав(ИмяПоля,ДлинаСтроки-ДлинаТовары);
		//	#Если не ВебКлиент Тогда
		//	ОткрытьЗначение(ТекущийЭлемент.ТекущиеДанные[ПутьКДанным]);
		//#КонецЕсли	
		ПоказатьЗначение(,ТекущийЭлемент.ТекущиеДанные[ПутьКДанным]);
		КонецЕсли;
	КонецЕсли;  
	КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	Если Объект.Ссылка.Пустая() Тогда 
		Сообщить("запишите документ");
		Возврат
	КонецЕсли;
	ТабличныйДокумент= ПечатьНаСервере();
	ТабличныйДокумент.Показать();
КонецПроцедуры
&НаСервере
Функция ПечатьНаСервере()
	ТабличныйДокумент=новый ТабличныйДокумент;
	Документы.итWMSПроверка.СформироватьПечатнуюФорму(Объект.Ссылка,ТабличныйДокумент);
	Если ТабличныйДокумент.НайтиТекст("{ШаблонСотрудника}") <> Неопределено Тогда  
			Область=ТабличныйДокумент.НайтиТекст("{ШаблонСотрудника}");
			Область.Текст=СтрЗаменить(Область.Текст,"{ШаблонСотрудника}","");
	КонецЕсли;
	Возврат ТабличныйДокумент;
КонецФункции

&НаСервере
Процедура СверкаСОснованиемНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧ.ИдентификаторУпаковки,
		|	ТЧ.Номенклатура,
		|	ТЧ.Характеристика,
		|	ТЧ.СерияНоменклатуры,
		|	ТЧ.Качество,
		|	ТЧ.ДатаРозлива,
		|	ТЧ.Ячейка,
		|	ТЧ.ФиксацияСтроки,
		|	ТЧ.СостояниеЗадачи,
		|	ТЧ.КоличествоФакт КАК КоличествоФакт
		|ПОМЕСТИТЬ ДанныеТоваровПроверки
		|ИЗ
		|	&Товары КАК ТЧ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковки,
		|	итWMSНаборкаТовары.Номенклатура,
		|	итWMSНаборкаТовары.Характеристика,
		|	итWMSНаборкаТовары.СерияНоменклатуры,
		|	итWMSНаборкаТовары.Качество,
		|	итWMSНаборкаТовары.ДатаРозлива,
		|	СУММА(ВЫБОР
		|			КОГДА итWMSНаборкаТовары.ИзъятиеТовара
		|				ТОГДА итWMSНаборкаТовары.КоличествоФакт - итWMSНаборкаТовары.КоличествоИзъятия
		|			ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт
		|		КОНЕЦ) КАК Количество,
		|	итWMSНаборкаТовары.ЯчейкаПолучатель КАК Ячейка
		|ПОМЕСТИТЬ Вт
		|ИЗ
		|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
		|ГДЕ
		|	итWMSНаборкаТовары.ФиксацияСтроки
		|	И итWMSНаборкаТовары.Ссылка В(&Наборка)
		|	И итWMSНаборкаТовары.СостояниеЗадачи = ЗНАЧЕНИЕ(Перечисление.итWMSСостояниязадачТСД.Выполнена)
		|
		|СГРУППИРОВАТЬ ПО
		|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель,
		|	итWMSНаборкаТовары.Номенклатура,
		|	итWMSНаборкаТовары.Характеристика,
		|	итWMSНаборкаТовары.СерияНоменклатуры,
		|	итWMSНаборкаТовары.Качество,
		|	итWMSНаборкаТовары.ДатаРозлива,
		|	итWMSНаборкаТовары.ЯчейкаПолучатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт.ИдентификаторУпаковки,
		|	Вт.Номенклатура,
		|	Вт.Характеристика,
		|	Вт.СерияНоменклатуры,
		|	Вт.Качество,
		|	Вт.ДатаРозлива,
		|	Вт.Количество,
		|	Вт.Ячейка
		|ПОМЕСТИТЬ ВтДанныеНаборки
		|ИЗ
		|	Вт КАК Вт
		|ГДЕ
		|	Вт.Количество > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеТоваровПроверки.ИдентификаторУпаковки,
		|	ДанныеТоваровПроверки.Номенклатура,
		|	ДанныеТоваровПроверки.Характеристика,
		|	ДанныеТоваровПроверки.СерияНоменклатуры,
		|	ДанныеТоваровПроверки.Качество,
		|	ДанныеТоваровПроверки.ДатаРозлива,
		|	ДанныеТоваровПроверки.Ячейка,
		|	СУММА(ДанныеТоваровПроверки.КоличествоФакт) КАК Количество
		|ПОМЕСТИТЬ ДанныеПроверки
		|ИЗ
		|	ДанныеТоваровПроверки КАК ДанныеТоваровПроверки
		|ГДЕ
		|	ДанныеТоваровПроверки.ФиксацияСтроки
		|	И ДанныеТоваровПроверки.СостояниеЗадачи = ЗНАЧЕНИЕ(Перечисление.итWMSСостояниязадачТСД.Выполнена)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеТоваровПроверки.ИдентификаторУпаковки,
		|	ДанныеТоваровПроверки.Номенклатура,
		|	ДанныеТоваровПроверки.Характеристика,
		|	ДанныеТоваровПроверки.СерияНоменклатуры,
		|	ДанныеТоваровПроверки.Качество,
		|	ДанныеТоваровПроверки.ДатаРозлива,
		|	ДанныеТоваровПроверки.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтДанныеНаборки.ИдентификаторУпаковки,
		|	ВтДанныеНаборки.Номенклатура,
		|	ВтДанныеНаборки.Характеристика,
		|	ВтДанныеНаборки.СерияНоменклатуры,
		|	ВтДанныеНаборки.Качество,
		|	ВтДанныеНаборки.ДатаРозлива,
		|	ВтДанныеНаборки.Количество КАК КоличествоНаборки,
		|	ВтДанныеНаборки.Ячейка,
		|	ЕСТЬNULL(ДанныеПроверки.Количество, 0) КАК КоличествоПроверки,
		|	ВтДанныеНаборки.Количество - ЕСТЬNULL(ДанныеПроверки.Количество, 0) КАК КоличествоКДобавлению
		|ИЗ
		|	ВтДанныеНаборки КАК ВтДанныеНаборки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПроверки КАК ДанныеПроверки
		|		ПО ВтДанныеНаборки.ИдентификаторУпаковки = ДанныеПроверки.ИдентификаторУпаковки
		|			И ВтДанныеНаборки.Номенклатура = ДанныеПроверки.Номенклатура
		|			И ВтДанныеНаборки.Характеристика = ДанныеПроверки.Характеристика
		|			И ВтДанныеНаборки.СерияНоменклатуры = ДанныеПроверки.СерияНоменклатуры
		|			И ВтДанныеНаборки.Качество = ДанныеПроверки.Качество
		|			И ВтДанныеНаборки.ДатаРозлива = ДанныеПроверки.ДатаРозлива
		|			И ВтДанныеНаборки.Ячейка = ДанныеПроверки.Ячейка
		|ГДЕ
		|	ВтДанныеНаборки.Количество <> ЕСТЬNULL(ДанныеПроверки.Количество, 0)";
	
	Запрос.УстановитьПараметр("Наборка", Объект.итОснования.Выгрузить().ВыгрузитьКолонку("Документ"));
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Данные=РеквизитФормыВЗначение("Объект");
		Данные.ДействияПриФиксацииЗадачДокумента();
		ЗначениеВРеквизитФормы(Данные,"Объект");
		ВидимостьДоступностьЭлементовСервер();
		Возврат;
	КонецЕсли;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ОбъектДокумента=Объект.Ссылка.ПолучитьОбъект();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КоличествоКДобавлению<0 Тогда 
			ЗначениеВРеквизитФормы(ОбъектДокумента,"Объект");
			Сообщить("КоличествоКДобавлению меньше 0, проверьте наборку");
		КонецЕсли;	
		Если НаличиеНеОтмененногоТекущегоИдентификатораВПроверке(ВыборкаДетальныеЗаписи.ИдентификаторУпаковки) Тогда 
			 ЗначениеВРеквизитФормы(ОбъектДокумента,"Объект");
			 Сообщить("В идентификатор "+ВыборкаДетальныеЗаписи.ИдентификаторУпаковки +" внесены изменения, пожалуйста в начале отмени задачу данной паллеты , до начала сверки с основанием");
		КонецЕсли;	
		НоваяСтрока=Объект.Товары.Добавить();
		НоваяСтрока.ИдентификаторСтроки=новый УникальныйИдентификатор;
		НоваяСтрока.ИдентификаторУпаковки=ВыборкаДетальныеЗаписи.ИдентификаторУпаковки;
		НоваяСтрока.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяСтрока.Характеристика=ВыборкаДетальныеЗаписи.Характеристика;
		НоваяСтрока.СерияНоменклатуры=ВыборкаДетальныеЗаписи.СерияНоменклатуры;
		НоваяСтрока.Качество=ВыборкаДетальныеЗаписи.Качество;
        НоваяСтрока.ДатаРозлива=ВыборкаДетальныеЗаписи.ДатаРозлива;
	    НоваяСтрока.Ячейка=ВыборкаДетальныеЗаписи.Ячейка;
	    НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.КоличествоКДобавлению;
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура СверкаСОснованием(Команда)
	СверкаСОснованиемНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗадачу(Команда)
	Оповещение=новый ОписаниеОповещения("ОтменитьЗадачуОповещение",ЭтаФорма);
	ПоказатьВопрос(Оповещение,"Предупреждение!!!Вы отмените результат всего паллета, а не конкретной строчки,данные марок так же будут удалены.
	|Вы точно хотите отменить задачу? ",РежимДиалогаВопрос.ДаНет);
КонецПроцедуры
&НаКлиенте
Процедура ОтменитьЗадачуОповещение(Результат,Параметры) Экспорт 
	Если Результат=КодВозвратаДиалога.Нет Тогда 
		Возврат
	КонецЕсли;
	Строка=Элементы.Товары.ТекущиеДанные.ИдентификаторСтроки;
	ОтменитьЗадачуСервер(Строка);
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗадачуСервер(Строка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSСтрокиЗадачТСД.ИдЗадачи
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрСведений.итWMSСтрокиЗадачТСД КАК итWMSСтрокиЗадачТСД
		|ГДЕ
		|	итWMSСтрокиЗадачТСД.идСтроки = &идСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итWMSСтрокиЗадачТСД.идСтроки
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.итWMSСтрокиЗадачТСД КАК итWMSСтрокиЗадачТСД
		|		ПО ВТ.ИдЗадачи = итWMSСтрокиЗадачТСД.ИдЗадачи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.ИдЗадачи
		|ИЗ
		|	ВТ КАК ВТ";
	
	Запрос.УстановитьПараметр("идСтроки", Строка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Отменена=Перечисления.итWMSСостоянияЗадачТСД.Отменена;
	ВыборкаСтрок= РезультатЗапроса[1].Выбрать();
	Пока ВыборкаСтрок.Следующий() Цикл
		Строки=Объект.Товары.НайтиСтроки(новый Структура("ИдентификаторСтроки",ВыборкаСтрок.идСтроки));
		Для Каждого стр из Строки Цикл 
			стр.СостояниеЗадачи=Отменена;
		КонецЦикла;
	КонецЦикла;
	Данные=РеквизитФормыВЗначение("Объект");
	Данные.ДействияПриФиксацииЗадачДокумента();
	Данные.Записать();
	ЗначениеВРеквизитФормы(Данные,"Объект");
	ВидимостьДоступностьЭлементовСервер();
	ВыборкаЗадач = РезультатЗапроса[2].Выбрать();
	
	Пока ВыборкаЗадач.Следующий() Цикл
		 ОчиститьДанныеМарок(Объект.Ссылка,ВыборкаЗадач.ИдЗадачи);
	КонецЦикла;

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ОбновитьДанныеСТСД()
Документы.итWMSПроверка.ВнестиИзменениеДанныхТСДВДокумент(Объект.Ссылка);
Данные=Объект.Ссылка.ПолучитьОбъект();
Если итWMSСлужебныеПроцедурыИФункции.ВсеЗадачиДокументаЗафиксированны(Объект.Ссылка) Тогда
	Данные.ДействияПриФиксацииЗадачДокумента();
	Данные.ОбменДанными.Загрузка=Истина;
	//Данные.ОтложенноеПроведение=Истина;
	Данные.Записать();
	итWMSСлужебныеПроцедурыИФункции.СделатьЗаписьДопОбработкиОтложенногоПроведения(Данные.Ссылка);
КонецЕсли;
ЗначениеВРеквизитФормы(Данные,"Объект");
КонецПроцедуры

&НаСервере
Процедура ВидимостьДоступностьЭлементовСервер()
	Если Объект.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.ВыполненСОшибкой
	или Объект.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Выполнен
		Тогда 
		Элементы.ТоварыКонтекстноеМенюОтменитьЗадачу.Видимость=Истина;
		Элементы.ФормаСверкаСОснованием.Видимость=Истина;
	иначе
		Элементы.ТоварыКонтекстноеМенюОтменитьЗадачу.Видимость=Ложь;
		Элементы.ФормаСверкаСОснованием.Видимость=Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеМарок(Ссылка,ИдЗадачи)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMS_МаркиВОбработке.Марка,
		|	итWMS_МаркиВОбработке.ДокументОснование,
		|	итWMS_МаркиВОбработке.Ключ
		|ИЗ
		|	РегистрСведений.итWMS_МаркиВОбработке КАК итWMS_МаркиВОбработке
		|ГДЕ
		|	итWMS_МаркиВОбработке.ДокументОснование = &ДокументОснование
		|	И итWMS_МаркиВОбработке.Ключ = &Ключ";
	
	Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
	Запрос.УстановитьПараметр("Ключ", ИдЗадачи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей=РегистрыСведений.итWMS_МаркиВОбработке.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Марка.Установить(ВыборкаДетальныеЗаписи.Марка);
		НаборЗаписей.Отбор.ДокументОснование.Установить(ВыборкаДетальныеЗаписи.ДокументОснование);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЦикла;
		
КонецПроцедуры
&НаСервере
Функция НаличиеНеОтмененногоТекущегоИдентификатораВПроверке(Идентификатор)
	Строки=Объект.Товары.НайтиСтроки(новый Структура("ИдентификаторУпаковки",Идентификатор));
	Отменена=Перечисления.итWMSСостоянияЗадачТСД.Отменена;
	Для Каждого стр из Строки Цикл 
		Если стр.ФиксацияСтроки и стр.СостояниеЗадачи<>Отменена Тогда 
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;
	Возврат Ложь;
	КонецФункции
&НаСервереБезКонтекста
Функция ПустаяЯчейка()
	Возврат Справочники.итСкладскиеЯчейки.ПустаяСсылка();
КонецФункции

&НаСервере
Процедура ПечатьШкВПаллетахНаСервере(ТабличныйДокумент)
	Данные=РеквизитФормыВЗначение("Объект");
	Данные.ПечатьШкВПаллете(ТабличныйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьШкВПаллетах(Команда)
	ТабличныйДокумент=новый ТабличныйДокумент;
	ПечатьШкВПаллетахНаСервере(ТабличныйДокумент);
	ТабличныйДокумент.Показать();
КонецПроцедуры
#КонецОбласти

#Область ГИФТ
#КонецОбласти



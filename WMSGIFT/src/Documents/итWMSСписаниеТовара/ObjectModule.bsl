Перем ИгнорироватьОтказПриПроверках Экспорт ;

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Проведен и РежимЗаписи=РежимЗаписиДокумента.Запись Тогда 
		Если ОбменДанными.Загрузка Тогда 
			РежимЗаписи=РежимЗаписиДокумента.Проведение;
		КонецЕсли;
	КонецЕсли;
	
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение тогда
		ПередЗаписьюПроведение(Отказ, РежимЗаписи, РежимПроведения);
	КонецЕсли;
	Если РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения тогда
		ПередЗаписьюОтменаПроведения(Отказ, РежимЗаписи, РежимПроведения);
	КонецЕсли;
	Если ОбменДанными.Загрузка Тогда 
		Отказ=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗаписьюПроведение(Отказ, РежимЗаписи, РежимПроведения)
	СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен;
	ПроверитьОснованиеНаНесколькоПодчиненныхДокументов(Отказ);
	ПроверкаНаСоответствиеОснованию(Отказ);
КонецПроцедуры

Процедура ПередЗаписьюОтменаПроведения(Отказ, РежимЗаписи, РежимПроведения)
	СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Создан;
	ОбработчикПриОтменеПроведенияОснование();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	УстановитьБлокировкиДанныхИОчиститьРегистры();
	ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения);
	ПроверкаНаСоответсвиеДанныхЯчеек(Отказ, РежимПроведения);
	Если Отказ Тогда 
		ОтменитьТранзакцию();
	КонецЕсли;	
	ЗафиксироватьТранзакцию();
	ОбработчикПриПроведенииОснование();
КонецПроцедуры

Процедура ОбработчикПриПроведенииОснование()
	Если ТипЗнч(итОснование)=Тип("ДокументСсылка.итWMSНаборка") Тогда 
		ОбъектИзменения=итОснование.ПолучитьОбъект();
		ОбъектИзменения.СтатусДокумента=Перечисления.итWMSСтатусыСкладскихДокументов.Завершен;
		ОбъектИзменения.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработчикПриОтменеПроведенияОснование()
	Если ТипЗнч(итОснование)=Тип("ДокументСсылка.итWMSНаборка") Тогда 
		ОбъектИзменения=итОснование.ПолучитьОбъект();
		ОбъектИзменения.ПроведениеБезИзмененияДатыЗавршения=Истина;
		ОбъектИзменения.ДействияПриФиксацииЗадачДокумента();
		ОбъектИзменения.Записать();
	КонецЕсли;
КонецПроцедуры
Процедура  ПроведениеПоРегистрамНакопления(Отказ, РежимПроведения)
	ПроведениеПоТоварамВЯчейках(Отказ, РежимПроведения);
	
	
КонецПроцедуры

Процедура ПроведениеПоТоварамВЯчейках(Отказ, РежимПроведения)
	итТоварыВЯчейках=Движения.итТоварыВЯчейках;
	Для Каждого стр из Товары цикл
		////////////Расход
		НоваяЗапись=итТоварыВЯчейках.Добавить();
		НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
		НоваяЗапись.Регистратор=Ссылка;
		НоваяЗапись.Период=Дата;
		НоваяЗапись.ИдентификаторУпаковки=стр.ИдентификаторУпаковки;
		НоваяЗапись.Номенклатура=стр.Номенклатура;
		НоваяЗапись.Организация=Организация;
		НоваяЗапись.Склад=Склад;
		НоваяЗапись.Ячейка=стр.Ячейка;
		НоваяЗапись.СерияНоменклатуры=стр.СерияНоменклатуры;
		НоваяЗапись.Качество=стр.Качество;
		НоваяЗапись.Характеристика=стр.Характеристика;
		НоваяЗапись.ДатаРозлива=стр.ДатаРозлива;
		НоваяЗапись.Количество=стр.Количество;	
		///////////Приход
		//__________________________
	КонецЦикла;
	итТоварыВЯчейках.Записать();
КонецПроцедуры

Процедура ПроверкаНаСоответсвиеДанныхЯчеек(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSСписаниеТовараТовары.ИдентификаторУпаковки,
	|	итWMSСписаниеТовараТовары.Номенклатура,
	|	итWMSСписаниеТовараТовары.СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА итWMSСписаниеТовараТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	|		ИНАЧЕ итWMSСписаниеТовараТовары.Качество
	|	КОНЕЦ КАК Качество,
	|	СУММА(итWMSСписаниеТовараТовары.Количество) КАК Количество,
	|	итWMSСписаниеТовараТовары.Ссылка.Склад КАК СкладОтправитель,
	|	итWMSСписаниеТовараТовары.Ячейка,
	|	итWMSСписаниеТовараТовары.Ссылка.Организация
	|ПОМЕСТИТЬ СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки
	|ИЗ
	|	Документ.итWMSСписаниеТовара.Товары КАК итWMSСписаниеТовараТовары
	|ГДЕ
	|	итWMSСписаниеТовараТовары.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	итWMSСписаниеТовараТовары.ИдентификаторУпаковки,
	|	итWMSСписаниеТовараТовары.Номенклатура,
	|	итWMSСписаниеТовараТовары.СерияНоменклатуры,
	|	итWMSСписаниеТовараТовары.Ячейка,
	|	итWMSСписаниеТовараТовары.Ссылка.Склад,
	|	итWMSСписаниеТовараТовары.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА итWMSСписаниеТовараТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	|		ИНАЧЕ итWMSСписаниеТовараТовары.Качество
	|	КОНЕЦ
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Организация,
	|	итТоварыВЯчейкахОстатки.Склад,
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки,
	|	итТоварыВЯчейкахОстатки.Ячейка,
	|	итТоварыВЯчейкахОстатки.Номенклатура,
	|	итТоварыВЯчейкахОстатки.Характеристика,
	|	итТоварыВЯчейкахОстатки.СерияНоменклатуры,
	|	итТоварыВЯчейкахОстатки.ДатаРозлива,
	|	итТоварыВЯчейкахОстатки.Качество,
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоОстаток
	|ИЗ
	|	СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки КАК СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки(&Период,) КАК итТоварыВЯчейкахОстатки
	|		ПО СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
	|		И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
	|		И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
	|		И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Качество = итТоварыВЯчейкахОстатки.Качество
	|		И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.СкладОтправитель = итТоварыВЯчейкахОстатки.Склад
	|		И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Ячейка = итТоварыВЯчейкахОстатки.Ячейка
	|		И СрезПеремещенияВРазрезеЯчейкиОтправителяИдУпаковки.Организация = итТоварыВЯчейкахОстатки.Организация
	|ГДЕ
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток < 0";
	
	Запрос.УстановитьПараметр("Период", новый Граница(новый МоментВремени(Дата,Ссылка),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);	
	
	РезультатЗапроса = Запрос.Выполнить();
	РезультатПроверкиПриЗабореТовараИзЯчейки=РезультатЗапроса.Выбрать();
	
	
	Пока  РезультатПроверкиПриЗабореТовараИзЯчейки.Следующий() цикл
			Если не РольДоступна("ПолныеПрава") Тогда 
				Отказ=Истина;
			КонецЕсли;
			Сообщить("для Идентификатора упаковки "+РезультатПроверкиПриЗабореТовараИзЯчейки.ИдентификаторУпаковки+" превышенно возможное количетсво перемещаемой номеклатуры 
			|"+РезультатПроверкиПриЗабореТовараИзЯчейки.Номенклатура+" серия-" +РезультатПроверкиПриЗабореТовараИзЯчейки.СерияНоменклатуры +" качеством-"+РезультатПроверкиПриЗабореТовараИзЯчейки.Качество+ 
			" на "+(-РезультатПроверкиПриЗабореТовараИзЯчейки.КоличествоОстаток) +" базовых едениц");	
	КонецЦикла;


	
КонецПроцедуры

Процедура УстановитьБлокировкиДанныхИОчиститьРегистры()
	
БлокировкаДанных = новый БлокировкаДанных;
	
#Область БлокировкаитТоварыВЯчейках	
	СтруктураПараметров=итWMSСлужебныеПроцедурыИФункции.СоздатьСтруктуруПараметровБлокировкиДанных(Товары,БлокировкаДанных);
	СтруктураПараметров.ПолеПространствоБлокировок="Номенклатура,Ячейка,ИдентификаторУпаковки";
	СтруктураПараметров.ПолеИсточника="Номенклатура,Ячейка,ИдентификаторУпаковки";
	СтруктураПараметров.ПространствоБлокировки="РегистрНакопления.итТоварыВЯчейках";
	итWMSСлужебныеПроцедурыИФункции.УстановкаЭлементаБлокировокДанныхWMS(СтруктураПараметров);
#КонецОбласти


	
БлокировкаДанных.Заблокировать();
	
	
	НаборЗаписей=РегистрыНакопления.итТоварыВЯчейках.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.СписаниеТоваров") тогда
		ЗаполнитьНаОснованииСписания(ДанныеЗаполнения)
	КонецЕсли;
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.итWMSНаборка") Тогда 
		ЗаполнитьНаОснованииНаборки(ДанныеЗаполнения);
	КонецЕсли;
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		ЗаполнитьНаОснованииПеремещения(ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНаОснованииСписания(ДанныеЗаполнения)
	Склад=ДанныеЗаполнения.Склад;
	Организация=ДанныеЗаполнения.Организация;
	итОснование=ДанныеЗаполнения;
	СозданНаОснованиСерверногоВызова=Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеТоваровТовары.Номенклатура,
	|	СписаниеТоваровТовары.СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА СписаниеТоваровТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	|		ИНАЧЕ СписаниеТоваровТовары.Качество
	|	КОНЕЦ КАК Качество,
	|	СУММА(ЕСТЬNULL(СписаниеТоваровТовары.Количество, 0)) КАК Количество,
	|	СписаниеТоваровТовары.ХарактеристикаНоменклатуры,
	|	СписаниеТоваровТовары.Ссылка.Склад,
	|	СписаниеТоваровТовары.Ссылка.Организация
	|ПОМЕСТИТЬ ДанныеПеремещения
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|ГДЕ
	|	СписаниеТоваровТовары.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	СписаниеТоваровТовары.Номенклатура,
	|	СписаниеТоваровТовары.СерияНоменклатуры,
	|	СписаниеТоваровТовары.ХарактеристикаНоменклатуры,
	|	СписаниеТоваровТовары.Ссылка.Склад,
	|	СписаниеТоваровТовары.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА СписаниеТоваровТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	|		ИНАЧЕ СписаниеТоваровТовары.Качество
	|	КОНЕЦ
	|;
	|
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итТоварыВЯчейкахОстатки.Склад,
	|	итТоварыВЯчейкахОстатки.Ячейка,
	|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки,
	|	итТоварыВЯчейкахОстатки.Номенклатура,
	|	итТоварыВЯчейкахОстатки.Характеристика,
	|	итТоварыВЯчейкахОстатки.СерияНоменклатуры,
	|	итТоварыВЯчейкахОстатки.ДатаРозлива,
	|	итТоварыВЯчейкахОстатки.Качество,
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоОстаток,
	|	итТоварыВЯчейкахОстатки.Организация
	|ПОМЕСТИТЬ СвободныйОстаток
	|ИЗ
	|	ДанныеПеремещения КАК ДанныеПеремещения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
	|		ПО ДанныеПеремещения.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
	|		И ДанныеПеремещения.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
	|		И ДанныеПеремещения.Качество = итТоварыВЯчейкахОстатки.Качество
	|		И ДанныеПеремещения.ХарактеристикаНоменклатуры = итТоварыВЯчейкахОстатки.Характеристика
	|		И ДанныеПеремещения.Склад = итТоварыВЯчейкахОстатки.Склад
	|		И ДанныеПеремещения.Организация = итТоварыВЯчейкахОстатки.Организация
	|ГДЕ
	|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток > 0
	|;
	|
	|
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныйОстаток.Ячейка,
	|	СвободныйОстаток.ИдентификаторУпаковки,
	|	ДанныеПеремещения.Номенклатура КАК Номенклатура,
	|	ДанныеПеремещения.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ДанныеПеремещения.СерияНоменклатуры КАК СерияНоменклатуры,
	|	СвободныйОстаток.ДатаРозлива,
	|	ДанныеПеремещения.Качество КАК Качество,
	|	ЕСТЬNULL(СвободныйОстаток.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ДанныеПеремещения.Количество, 0) КАК Количество
	|ИЗ
	|	ДанныеПеремещения КАК ДанныеПеремещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныйОстаток КАК СвободныйОстаток
	|		ПО СвободныйОстаток.Склад = ДанныеПеремещения.Склад
	|		И СвободныйОстаток.Номенклатура = ДанныеПеремещения.Номенклатура
	|		И СвободныйОстаток.СерияНоменклатуры = ДанныеПеремещения.СерияНоменклатуры
	|		И СвободныйОстаток.Качество = ДанныеПеремещения.Качество
	|		И СвободныйОстаток.Характеристика = ДанныеПеремещения.ХарактеристикаНоменклатуры
	|		И ДанныеПеремещения.Качество = СвободныйОстаток.Качество
	|		И ДанныеПеремещения.Организация = СвободныйОстаток.Организация
	|ИТОГИ
	|	СУММА(КоличествоОстаток),
	|	МАКСИМУМ(Количество)
	|ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Качество,
	|	Характеристика";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		Сообщить("нет остатокв на складе");
	КонецЕсли;	
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		// Вставить обработку выборки ВыборкаНоменклатура
		
		ВыборкаСерияНоменклатуры = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСерияНоменклатуры.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСерияНоменклатуры
			
			ВыборкаКачество = ВыборкаСерияНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКачество.Следующий() Цикл
				// Вставить обработку выборки ВыборкаКачество
				
				ВыборкаХарактеристика = ВыборкаКачество.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаХарактеристика.Следующий() Цикл
					
					
					ВыборкаДетальныеЗаписи = ВыборкаХарактеристика.Выбрать();
					
					Если ВыборкаХарактеристика.КоличествоОстаток<ВыборкаХарактеристика.Количество Тогда 
						Сообщить("для номенклатуры "+Строка(ВыборкаХарактеристика.Номенклатура)+" с серией "+Строка(ВыборкаХарактеристика.СерияНоменклатуры) +" код "+ Строка(ВыборкаХарактеристика.СерияНоменклатуры.Код) +
						" с качеством "+ ВыборкаХарактеристика.Качество+" не хватает остатков "+Строка(ВыборкаХарактеристика.Количество-ВыборкаХарактеристика.КоличествоОстаток)+" поиск товара будет осуществлен по максимальному значению");
					КонецЕсли;	
					КоличествоВсего=ВыборкаХарактеристика.Количество;
					Остаток= ВыборкаХарактеристика.КоличествоОстаток;
					Если Остаток<=0 тогда
						Продолжить;
					КонецЕсли;	
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						НоваяСтрока=Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
						Если  КоличествоВсего<=ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда 
							НоваяСтрока.Количество= КоличествоВсего;
						иначе
							НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток;
						КонецЕсли;
						КоличествоВсего=КоличествоВсего-НоваяСтрока.Количество;
						Если КоличествоВсего=0 Тогда 
							Прервать;
						КонецЕсли;	
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииНаборки(ДанныеЗаполнения)
	СозданНаОснованиСерверногоВызова=Истина;
	итОснование=ДанныеЗаполнения;
	Организация=ДанныеЗаполнения.Организация;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель КАК ИдентификаторУпаковки,
		|	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
		|	итWMSНаборкаТовары.ЯчейкаПолучатель КАК Ячейка,
		|	итWMSНаборкаТовары.Ссылка.Организация,
		|	итWMSНаборкаТовары.Номенклатура,
		|	итWMSНаборкаТовары.СерияНоменклатуры,
		|	итWMSНаборкаТовары.Характеристика,
		|	СУММА(ВЫБОР
		|		КОГДА итWMSНаборкаТовары.ИзъятиеТовара
		|			ТОГДА итWMSНаборкаТовары.КоличествоФакт - итWMSНаборкаТовары.КоличествоИзъятия
		|		ИНАЧЕ итWMSНаборкаТовары.КоличествоФакт
		|	КОНЕЦ) КАК Количество,
		|	ВЫБОР
		|		КОГДА итWMSНаборкаТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|		ИНАЧЕ итWMSНаборкаТовары.Качество
		|	КОНЕЦ КАК Качество
		|ПОМЕСТИТЬ ВтДанныеНаборки
		|ИЗ
		|	Документ.итWMSНаборка.Товары КАК итWMSНаборкаТовары
		|ГДЕ
		|	итWMSНаборкаТовары.Ссылка.Проведен
		|	И итWMSНаборкаТовары.ФиксацияСтроки
		|	И итWMSНаборкаТовары.СостояниеЗадачи <> ЗНАЧЕНИЕ(Перечисление.итwmsСостоянияЗадачТСД.Отменена)
		|	И итWMSНаборкаТовары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	итWMSНаборкаТовары.ИдентификаторУпаковкиПолучатель,
		|	итWMSНаборкаТовары.Ссылка.Организация,
		|	итWMSНаборкаТовары.Номенклатура,
		|	итWMSНаборкаТовары.СерияНоменклатуры,
		|	итWMSНаборкаТовары.Характеристика,
		|	итWMSНаборкаТовары.ЯчейкаПолучатель,
		|	ВЫБОР
		|		КОГДА итWMSНаборкаТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|		ИНАЧЕ итWMSНаборкаТовары.Качество
		|	КОНЕЦ
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итТоварыВЯчейкахОстатки.Склад,
		|	итТоварыВЯчейкахОстатки.Ячейка,
		|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки,
		|	итТоварыВЯчейкахОстатки.Номенклатура,
		|	итТоварыВЯчейкахОстатки.Характеристика,
		|	итТоварыВЯчейкахОстатки.СерияНоменклатуры,
		|	итТоварыВЯчейкахОстатки.ДатаРозлива,
		|	итТоварыВЯчейкахОстатки.Качество,
		|	ВЫБОР
		|		КОГДА итТоварыВЯчейкахОстатки.КоличествоОстаток -
		|			итТоварыВЯчейкахОстатки.КОтборуОстаток > ВтДанныеНаборки.Количество
		|			ТОГДА ВтДанныеНаборки.Количество
		|		ИНАЧЕ итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток
		|	КОНЕЦ КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВтДанныеКСписанию
		|ИЗ
		|	ВтДанныеНаборки КАК ВтДанныеНаборки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
		|		ПО ВтДанныеНаборки.ИдентификаторУпаковки = итТоварыВЯчейкахОстатки.ИдентификаторУпаковки
		|		И ВтДанныеНаборки.Склад = итТоварыВЯчейкахОстатки.Склад
		|		И ВтДанныеНаборки.Ячейка = итТоварыВЯчейкахОстатки.Ячейка
		|		И ВтДанныеНаборки.Организация = итТоварыВЯчейкахОстатки.Организация
		|		И ВтДанныеНаборки.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
		|		И ВтДанныеНаборки.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
		|		И ВтДанныеНаборки.Характеристика = итТоварыВЯчейкахОстатки.Характеристика
		|		И ВтДанныеНаборки.Качество = итТоварыВЯчейкахОстатки.Качество
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	итТоварыВЯчейкахРезервОстатки.Склад,
		|	итТоварыВЯчейкахРезервОстатки.ЯчейкаОтправитель,
		|	итТоварыВЯчейкахРезервОстатки.ИдентификаторУпаковки,
		|	итТоварыВЯчейкахРезервОстатки.Номенклатура,
		|	итТоварыВЯчейкахРезервОстатки.Характеристика,
		|	итТоварыВЯчейкахРезервОстатки.СерияНоменклатуры,
		|	итТоварыВЯчейкахРезервОстатки.ДатаРозлива,
		|	итТоварыВЯчейкахРезервОстатки.Качество,
		|	-ЕСТЬNULL(итТоварыВЯчейкахРезервОстатки.КоличествоОстаток, 0)
		|ИЗ
		|	ВтДанныеНаборки КАК ВтДанныеНаборки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейкахРезерв.Остатки КАК итТоварыВЯчейкахРезервОстатки
		|		ПО ВтДанныеНаборки.ИдентификаторУпаковки = итТоварыВЯчейкахРезервОстатки.ИдентификаторУпаковки
		|		И ВтДанныеНаборки.Склад = итТоварыВЯчейкахРезервОстатки.Склад
		|		И ВтДанныеНаборки.Ячейка = итТоварыВЯчейкахРезервОстатки.ЯчейкаОтправитель
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтДанныеКСписанию.Склад,
		|	ВтДанныеКСписанию.Ячейка,
		|	ВтДанныеКСписанию.ИдентификаторУпаковки,
		|	ВтДанныеКСписанию.Номенклатура,
		|	ВтДанныеКСписанию.Характеристика,
		|	ВтДанныеКСписанию.СерияНоменклатуры,
		|	ВтДанныеКСписанию.ДатаРозлива,
		|	ВтДанныеКСписанию.Качество,
		|	СУММА(ВтДанныеКСписанию.КоличествоОстаток) КАК КоличествоОстаток
		|ИЗ
		|	ВтДанныеКСписанию КАК ВтДанныеКСписанию
		|СГРУППИРОВАТЬ ПО
		|	ВтДанныеКСписанию.Склад,
		|	ВтДанныеКСписанию.Ячейка,
		|	ВтДанныеКСписанию.ИдентификаторУпаковки,
		|	ВтДанныеКСписанию.Номенклатура,
		|	ВтДанныеКСписанию.Характеристика,
		|	ВтДанныеКСписанию.СерияНоменклатуры,
		|	ВтДанныеКСписанию.ДатаРозлива,
		|	ВтДанныеКСписанию.Качество";
	
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);	
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
		НоваяСтрока.ИдентификаторСтроки=новый УникальныйИдентификатор;
		НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
	

	КонецПроцедуры
	
Процедура ЗаполнитьНаОснованииПеремещения(ДанныеЗаполнения)
	Склад=ДанныеЗаполнения.СкладОтправитель;
	Организация=ДанныеЗаполнения.Организация;
	итОснование=ДанныеЗаполнения;
	СозданНаОснованиСерверногоВызова=Истина;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Номенклатура,
		|	ПеремещениеТоваровТовары.СерияНоменклатуры,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|		ИНАЧЕ ПеремещениеТоваровТовары.Качество
		|	КОНЕЦ КАК Качество,
		|	СУММА(ЕСТЬNULL(ПеремещениеТоваровТовары.Количество, 0)) КАК Количество,
		|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры,
		|	ПеремещениеТоваровТовары.Ссылка.СкладОтправитель КАК Склад,
		|	ПеремещениеТоваровТовары.Ссылка.Организация
		|ПОМЕСТИТЬ ДанныеПеремещения
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеТоваровТовары.Номенклатура,
		|	ПеремещениеТоваровТовары.СерияНоменклатуры,
		|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры,
		|	ПеремещениеТоваровТовары.Ссылка.СкладОтправитель,
		|	ПеремещениеТоваровТовары.Ссылка.Организация,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|		ИНАЧЕ ПеремещениеТоваровТовары.Качество
		|	КОНЕЦ
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итТоварыВЯчейкахОстатки.Склад,
		|	итТоварыВЯчейкахОстатки.Ячейка,
		|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки,
		|	итТоварыВЯчейкахОстатки.Номенклатура,
		|	итТоварыВЯчейкахОстатки.Характеристика,
		|	итТоварыВЯчейкахОстатки.СерияНоменклатуры,
		|	итТоварыВЯчейкахОстатки.ДатаРозлива,
		|	итТоварыВЯчейкахОстатки.Качество,
		|	СУММА(итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток) КАК КоличествоОстаток
		|ПОМЕСТИТЬ СвободныйОстаток
		|ИЗ
		|	ДанныеПеремещения КАК ДанныеПеремещения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.итТоварыВЯчейках.Остатки КАК итТоварыВЯчейкахОстатки
		|		ПО ДанныеПеремещения.Номенклатура = итТоварыВЯчейкахОстатки.Номенклатура
		|		И ДанныеПеремещения.СерияНоменклатуры = итТоварыВЯчейкахОстатки.СерияНоменклатуры
		|		И ДанныеПеремещения.Качество = итТоварыВЯчейкахОстатки.Качество
		|		И ДанныеПеремещения.ХарактеристикаНоменклатуры = итТоварыВЯчейкахОстатки.Характеристика
		|		И ДанныеПеремещения.Склад = итТоварыВЯчейкахОстатки.Склад
		|		И ДанныеПеремещения.Организация = итТоварыВЯчейкахОстатки.Организация
		|ГДЕ
		|	итТоварыВЯчейкахОстатки.КоличествоОстаток - итТоварыВЯчейкахОстатки.КОтборуОстаток > 0
		|	И НЕ итТоварыВЯчейкахОстатки.Ячейка.Заблокирована
		|СГРУППИРОВАТЬ ПО
		|	итТоварыВЯчейкахОстатки.Склад,
		|	итТоварыВЯчейкахОстатки.Ячейка,
		|	итТоварыВЯчейкахОстатки.ИдентификаторУпаковки,
		|	итТоварыВЯчейкахОстатки.Номенклатура,
		|	итТоварыВЯчейкахОстатки.Характеристика,
		|	итТоварыВЯчейкахОстатки.СерияНоменклатуры,
		|	итТоварыВЯчейкахОстатки.ДатаРозлива,
		|	итТоварыВЯчейкахОстатки.Качество
		|;
		|
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвободныйОстаток.Ячейка,
		|	СвободныйОстаток.ИдентификаторУпаковки,
		|	ДанныеПеремещения.Номенклатура КАК Номенклатура,
		|	ДанныеПеремещения.ХарактеристикаНоменклатуры КАК Характеристика,
		|	ДанныеПеремещения.СерияНоменклатуры КАК СерияНоменклатуры,
		|	СвободныйОстаток.ДатаРозлива,
		|	ДанныеПеремещения.Качество КАК Качество,
		|	ЕСТЬNULL(СвободныйОстаток.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ДанныеПеремещения.Количество, 0) КАК Количество
		|ИЗ
		|	ДанныеПеремещения КАК ДанныеПеремещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныйОстаток КАК СвободныйОстаток
		|		ПО СвободныйОстаток.Склад = ДанныеПеремещения.Склад
		|		И СвободныйОстаток.Номенклатура = ДанныеПеремещения.Номенклатура
		|		И СвободныйОстаток.СерияНоменклатуры = ДанныеПеремещения.СерияНоменклатуры
		|		И СвободныйОстаток.Качество = ДанныеПеремещения.Качество
		|		И СвободныйОстаток.Характеристика = ДанныеПеремещения.ХарактеристикаНоменклатуры
		|ИТОГИ
		|	СУММА(КоличествоОстаток),
		|	МАКСИМУМ(Количество)
		|ПО
		|	Номенклатура,
		|	СерияНоменклатуры,
		|	Качество,
		|	Характеристика";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		Сообщить("нет остатокв на складе");
	КонецЕсли;	
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		// Вставить обработку выборки ВыборкаНоменклатура
		
		ВыборкаСерияНоменклатуры = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСерияНоменклатуры.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСерияНоменклатуры
			
			ВыборкаКачество = ВыборкаСерияНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКачество.Следующий() Цикл
				// Вставить обработку выборки ВыборкаКачество
				
				ВыборкаХарактеристика = ВыборкаКачество.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаХарактеристика.Следующий() Цикл
					
					
					ВыборкаДетальныеЗаписи = ВыборкаХарактеристика.Выбрать();
					
					Если ВыборкаХарактеристика.КоличествоОстаток<ВыборкаХарактеристика.Количество Тогда 
						Сообщить("для номенклатуры "+Строка(ВыборкаХарактеристика.Номенклатура)+" с серией "+Строка(ВыборкаХарактеристика.СерияНоменклатуры) +" код "+ Строка(ВыборкаХарактеристика.СерияНоменклатуры.Код) +
						" с качеством "+ ВыборкаХарактеристика.Качество+" не хватает остатков "+Строка(ВыборкаХарактеристика.Количество-ВыборкаХарактеристика.КоличествоОстаток)+" поиск товара будет осуществлен по максимальному значению");
					КонецЕсли;	
					КоличествоВсего=ВыборкаХарактеристика.Количество;
					Остаток= ВыборкаХарактеристика.КоличествоОстаток;
					Если Остаток<=0 тогда
						Продолжить;
					КонецЕсли;	
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						НоваяСтрока=Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
						Если  КоличествоВсего<=ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда 
							НоваяСтрока.Количество= КоличествоВсего;
						иначе
							НоваяСтрока.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток;
						КонецЕсли;
						КоличествоВсего=КоличествоВсего-НоваяСтрока.Количество;
						Если КоличествоВсего=0 Тогда 
							Прервать;
						КонецЕсли;	
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	
КонецПроцедуры
	
Процедура ПроверкаНаСоответствиеОснованию(Отказ)
	Если итОснование=Неопределено Тогда 
		Возврат
	КонецЕсли;
	Если ТипЗнч(итОснование)=Тип("ДокументСсылка.СписаниеТоваров") или ТипЗнч(итОснование)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		ПроверкаНаСоответствиеСписаниюПеремещениюТоваров(Отказ);
	КонецЕсли;
КонецПроцедуры


Процедура ПроверкаНаСоответствиеСписаниюПеремещениюТоваров(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	Товары.Качество КАК Качество,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваровТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	СписаниеТоваровТовары.Номенклатура КАК Номенклатура,
	|	СписаниеТоваровТовары.Качество КАК Качество,
	|	СУММА(СписаниеТоваровТовары.Количество) КАК КоличествоСписания,
	|	СУММА(0) КАК КоличествоWMSСписания
	|ПОМЕСТИТЬ ВтДанные
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|ГДЕ
	|	СписаниеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеТоваровТовары.Номенклатура,
	|	СписаниеТоваровТовары.СерияНоменклатуры,
	|	СписаниеТоваровТовары.Качество
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтТовары.СерияНоменклатуры,
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Качество,
	|	СУММА(0),
	|	СУММА(ВтТовары.Количество)
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТовары.Номенклатура,
	|	ВтТовары.СерияНоменклатуры,
	|	ВтТовары.Качество
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.СерияНоменклатуры,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Качество,
	|	СУММА(ПеремещениеТоваровТовары.Количество),
	|	СУММА(0)
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.СерияНоменклатуры,
	|	ПеремещениеТоваровТовары.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанные.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВтДанные.Номенклатура КАК Номенклатура,
	|	ВтДанные.Качество КАК Качество,
	|	СУММА(ВтДанные.КоличествоСписания) КАК КоличествоСписания,
	|	СУММА(ВтДанные.КоличествоWMSСписания) КАК КоличествоWMSСписания
	|ПОМЕСТИТЬ ВтГруппировка
	|ИЗ
	|	ВтДанные КАК ВтДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДанные.СерияНоменклатуры,
	|	ВтДанные.Номенклатура,
	|	ВтДанные.Качество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтГруппировка.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВтГруппировка.Номенклатура КАК Номенклатура,
	|	ВтГруппировка.Качество КАК Качество,
	|	ВтГруппировка.КоличествоСписания КАК КоличествоСписания,
	|	ВтГруппировка.КоличествоWMSСписания КАК КоличествоWMSСписания
	|ИЗ
	|	ВтГруппировка КАК ВтГруппировка
	|ГДЕ
	|	ВтГруппировка.КоличествоСписания <> ВтГруппировка.КоличествоWMSСписания";
	
	Запрос.УстановитьПараметр("Ссылка", итОснование);
	Запрос.УстановитьПараметр("Товары",Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Отказ=Истина;
		Сообщить("У номенклатуры "+Строка(ВыборкаДетальныеЗаписи.Номенклатура)+" серии "+Строка(ВыборкаДетальныеЗаписи.СерияНоменклатуры) +" качества "+ Строка(ВыборкаДетальныеЗаписи.Качество)+ 
		" количество основания "+ВыборкаДетальныеЗаписи.КоличествоСписания +" отличается от количества документа " + ВыборкаДетальныеЗаписи.КоличествоWMSСписания);
	КонецЦикла;
	
КонецПроцедуры


Процедура ПроверитьОснованиеНаНесколькоПодчиненныхДокументов(Отказ) Экспорт 
	Если итОснование=Неопределено Тогда 
		Возврат
	КонецЕсли;	

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSСписаниеТовара.Ссылка
	|ИЗ
	|	Документ.итWMSСписаниеТовара КАК итWMSСписаниеТовара
	|ГДЕ
	|	итWMSСписаниеТовара.итОснование = &итОснование
	|	И итWMSСписаниеТовара.Проведен = ИСТИНА
	|	И итWMSСписаниеТовара.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("итОснование", итОснование);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Отказ=Истина;
		Сообщить("У документа "+Строка(итОснование)+" уже есть складской документ "+ Строка(ВыборкаДетальныеЗаписи.Ссылка));
	КонецЕсли;

	
КонецПроцедуры

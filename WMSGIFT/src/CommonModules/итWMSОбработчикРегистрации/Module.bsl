#Область Регистрация
Процедура ПровестиРегистрациюУстройства(ДанныеАвторизации)Экспорт 
	ТерминалСбораДанных=итWMSСлужебныеПроцедурыИФункции.НайтиСоздатьТерминалСбораДанных(ДанныеАвторизации);
	СтруктураОтвета = итWMSСлужебныеПроцедурыИФункции.ПоискСотрудникаПоШтрихКоду(ДанныеАвторизации.ШтрихКодПользователя);
	Если СтруктураОтвета.РаботникСклада.Пустая() тогда
		ДанныеАвторизации.Статус=404;
		ДанныеАвторизации.ОписаниеОшибки="Сотрудник со штрих-кодом "+ДанныеАвторизации.ШтрихКодПользователя+" не найден";
		Возврат
	ИначеЕсли СтруктураОтвета.Заблокирован тогда 
		ДанныеАвторизации.Статус=404;
		ДанныеАвторизации.ОписаниеОшибки="Сотрудник со штрих-кодом "+ДанныеАвторизации.ШтрихКодПользователя+" Заблокирован";
		Возврат
	КонецЕсли;
	ПараметрыРаботникаСкладаСрезПоследних=итWMSСлужебныеПроцедурыИФункции.ПолучитьДанныеПоРаботникуСклада(СтруктураОтвета.РаботникСклада);
	Если ПараметрыРаботникаСкладаСрезПоследних=Неопределено тогда
		ДанныеАвторизации.Статус=404;
		ДанныеАвторизации.ОписаниеОшибки="для сотрудника со штрих-кодом "+ДанныеАвторизации.ШтрихКодПользователя+" не определена роль и территория";
		Возврат
	КонецЕсли;	
	ДанныеАвторизации.ТекущийПользователь=ПараметрыРаботникаСкладаСрезПоследних.РаботникСклада.Наименование;
	ДанныеАвторизации.Роль=ПараметрыРаботникаСкладаСрезПоследних.Роль.Наименование;
	ДанныеАвторизации.Территория=ПараметрыРаботникаСкладаСрезПоследних.ТерриторияСклада.Наименование;
	ДанныеАвторизации.Принтер=ПараметрыРаботникаСкладаСрезПоследних.ПринтерПоУмолчанию.Наименование;
	ЗарегестрироватьУстроствоНаСервере(ТерминалСбораДанных,ПараметрыРаботникаСкладаСрезПоследних);
КонецПроцедуры
Процедура ЗарегестрироватьУстроствоНаСервере(ТерминалСбораДанных,ПараметрыРаботникаСкладаСрезПоследних)
	НаборЗаписей=РегистрыСведений.итWMSСостояниеТСД.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТСД.Установить(ТерминалСбораДанных);
	НаборЗаписей.Прочитать();
	НоваяЗапись=НаборЗаписей.Добавить();
	НоваяЗапись.ТСД=ТерминалСбораДанных;
	НоваяЗапись.Период=ТекущаяДата();
	НоваяЗапись.РаботникСклада=ПараметрыРаботникаСкладаСрезПоследних.РаботникСклада;
	НоваяЗапись.Состояние=Перечисления.итWMSСостоянияТСД.ВРаботе;
	НоваяЗапись.Роль=ПараметрыРаботникаСкладаСрезПоследних.Роль;
	НоваяЗапись.ТерриторияСклада =ПараметрыРаботникаСкладаСрезПоследних.ТерриторияСклада;
	НаборЗаписей.Записать();
КонецПроцедуры
#КонецОбласти
#Область Выход
Процедура ЗафиксироватьВыходИзПрограммы(ДанныеАвторизации)экспорт
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSСостояниеТСДСрезПоследних.ТСД,
		|	итWMSСостояниеТСДСрезПоследних.РаботникСклада,
		|	итWMSСостояниеТСДСрезПоследних.Роль,
		|	итWMSСостояниеТСДСрезПоследних.ТерриторияСклада,
		|	итWMSСостояниеТСДСрезПоследних.Состояние
		|ИЗ
		|	РегистрСведений.итWMSСостояниеТСД.СрезПоследних(
		|			&Дата,
		|			ТСД = &ТСД
		|				И Состояние = ЗНАЧЕНИЕ(Перечисление.итWMSСостоянияТСД.ВРаботе)) КАК итWMSСостояниеТСДСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТСД", итWMSСлужебныеПроцедурыИФункции.НайтиСоздатьТерминалСбораДанных(ДанныеАвторизации));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() тогда
	НаборЗаписей=РегистрыСведений.итWMSСостояниеТСД.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТСД.Установить(ВыборкаДетальныеЗаписи.ТСД);
	НаборЗаписей.Прочитать();
	НоваяЗапись=НаборЗаписей.Добавить();
	НоваяЗапись.ТСД=ВыборкаДетальныеЗаписи.ТСД;
	НоваяЗапись.Период=ТекущаяДата();
	НоваяЗапись.РаботникСклада=ВыборкаДетальныеЗаписи.РаботникСклада;
	НоваяЗапись.Состояние=Перечисления.итWMSСостоянияТСД.Отключен;
	НоваяЗапись.Роль=ВыборкаДетальныеЗаписи.Роль;
	НоваяЗапись.ТерриторияСклада =ВыборкаДетальныеЗаписи.ТерриторияСклада;
    НаборЗаписей.Записать();
КонецЕсли;
    ДанныеАвторизации.Принято=Истина;
	КонецПроцедуры
#КонецОбласти


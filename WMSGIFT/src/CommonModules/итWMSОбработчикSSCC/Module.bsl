Функция ПолучитьНовыйSSCC(Филиал,ВидДиапазона="Перечисления.итWMSВидыДиапазонвSSCC.РучноеПолучение",ФизЛицо,ТипЛогистическойЕденицы="Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйПаллет",НомерЛинии="00") Экспорт 
НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);	
		
	Если ВидДиапазона="Перечисления.итWMSВидыДиапазонвSSCC.РучноеПолучение" тогда
		ВидДиапазона=Вычислить(ВидДиапазона);
	КонецЕсли;
	Если ТипЛогистическойЕденицы= "Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйПаллет" тогда
		ТипЛогистическойЕденицы=Вычислить(ТипЛогистическойЕденицы);
	КонецЕсли;
	БлокировкаДанных = новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.итWMSSSCCпаллет");
	ЭлементБлокировки.Режим=РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Филиал",Филиал);
	ЭлементБлокировки.УстановитьЗначение("ВидДиапазона",ВидДиапазона);
	БлокировкаДанных.Заблокировать();
	НачалоГода=НачалоГода(ТекущаяДата());	

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итWMSДиапазоныSSCC.Филиал,
		|	итWMSДиапазоныSSCC.ВидДиапазона,
		|	итWMSДиапазоныSSCC.FSRAR_ID,
		|	итWMSДиапазоныSSCC.ДиапазонС,
		|	итWMSДиапазоныSSCC.ДиапазонПо,
		|	ЕСТЬNULL(итWMSSSCCпаллет.SSCC, -1) КАК ПоследнийSSCC,
		|	ЕСТЬNULL(итWMSSSCCпаллет.ИдентификаторSSCC, -1) КАК ПоследнийИдентификаторSSCC,
		|	ЕСТЬNULL(итWMSSSCCпаллет.СерийныйНомер, -1) КАК ПоследнийСерийныйНомерSSCC,
		|	итWMSДиапазоныSSCC.ЦифраРасширенияС
		|ИЗ
		|	РегистрСведений.итWMSДиапазоныSSCC КАК итWMSДиапазоныSSCC
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.итWMSSSCCпаллет КАК итWMSSSCCпаллет
		|		ПО итWMSДиапазоныSSCC.Филиал = итWMSSSCCпаллет.Филиал
		|			И итWMSДиапазоныSSCC.ВидДиапазона = итWMSSSCCпаллет.ВидДиапазона
		|			И (итWMSSSCCпаллет.ТипЛогистическойЕденицыWMS = &ТипЛогистическойЕденицыWMS)
		|			И (итWMSSSCCпаллет.Год = &Год)
		|ГДЕ
		|	итWMSДиапазоныSSCC.Филиал = &Филиал
		|	И итWMSДиапазоныSSCC.ВидДиапазона = &ВидДиапазона
		|
		|ДЛЯ ИЗМЕНЕНИЯ";
	
	Запрос.УстановитьПараметр("ВидДиапазона", ВидДиапазона);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("ТипЛогистическойЕденицыWMS",ТипЛогистическойЕденицы);
	Запрос.УстановитьПараметр("Год",НачалоГода);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если  РезультатЗапроса.Пустой() тогда
		Возврат новый Структура("Статус,ОписаниеОшибки",404,"по данным параметрам, не найдено настроек диапазона");
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() тогда
		Если  ВыборкаДетальныеЗаписи.ПоследнийSSCC=-1 тогда
			Если ВыборкаДетальныеЗаписи.ДиапазонС = 0 тогда
				ДиапазонС=1;
			иначе
				ДиапазонС=ВыборкаДетальныеЗаписи.ДиапазонС;
			КонецЕсли;	
		НовыйSSCC=Строка(ВыборкаДетальныеЗаписи.FSRAR_ID)+Строка(ПолучитьЦифровойИдентификаторЛогистическоеЕденицы(ТипЛогистическойЕденицы))+НомерЛинии+Прав(Строка(Год(НачалоГода)),2)+
		Строка(ВыборкаДетальныеЗаписи.ЦифраРасширенияС)+СтрЗаменить(РаботаСоСтрокойЛидирующиеНули(Прав(Строка(ДиапазонС),8),8),Символы.НПП,"");
		//НовыйSSCC= НовыйSSCC+ПолучитьКонтрольнуюЦифруШтрихКода(НовыйSSCC);
		ИдентификаторНовогоSSCC=ДиапазонС;
		СерийныйНомерДляЗаписи=Число(Прав(Строка(ДиапазонС),8));
		ЦифраРасширенияДляЗаписи=ВыборкаДетальныеЗаписи.ЦифраРасширенияС;
	иначе
		ИдентификаторНовогоSSCC= ВыборкаДетальныеЗаписи.ПоследнийИдентификаторSSCC+1;
		Если не (ИдентификаторНовогоSSCC>=ВыборкаДетальныеЗаписи.ДиапазонС и ИдентификаторНовогоSSCC <= ВыборкаДетальныеЗаписи.ДиапазонПо) тогда
			Возврат новый Структура("Статус,ОписаниеОшибки",404,"Указанные параметры выработали свой ресурс по SSCC") ;
		КонецЕсли;	
		СтрокаНовогоИдентификатора=СтрЗаменить(Строка(ИдентификаторНовогоSSCC),Символы.НПП,"");
		ЦифраРасширенияНовогоИдентификатора=?(СтрДлина(СтрокаНовогоИдентификатора)=9,Лев(СтрокаНовогоИдентификатора,1),"0");
		СерийныНомерНовогоИдентификатора=СтрЗаменить(РаботаСоСтрокойЛидирующиеНули(Прав(СтрокаНовогоИдентификатора,8),8),Символы.НПП,"");
		НовыйSSCC=Строка(ВыборкаДетальныеЗаписи.FSRAR_ID)+Строка(ПолучитьЦифровойИдентификаторЛогистическоеЕденицы(ТипЛогистическойЕденицы))+НомерЛинии+Прав(Строка(Год(НачалоГода)),2)
		+ЦифраРасширенияНовогоИдентификатора+СерийныНомерНовогоИдентификатора;
		//НовыйSSCC= НовыйSSCC+ПолучитьКонтрольнуюЦифруШтрихКода(НовыйSSCC);
		СерийныйНомерДляЗаписи=Число(СерийныНомерНовогоИдентификатора);
		ЦифраРасширенияДляЗаписи=Число(ЦифраРасширенияНовогоИдентификатора);
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////////////////
	НаборЗаписей = РегистрыСведений.итWMSSSCCпаллет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Филиал.Установить(Филиал);
	НаборЗаписей.Отбор.ВидДиапазона.Установить(ВидДиапазона);
	НаборЗаписей.Отбор.ТипЛогистическойЕденицыWMS.Установить(ТипЛогистическойЕденицы);
	НаборЗаписей.Отбор.Год.Установить(НачалоГода);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НоваяЗапись=НаборЗаписей.Добавить();
	НоваяЗапись.FSRAR_ID=ВыборкаДетальныеЗаписи.FSRAR_ID;
	НоваяЗапись.SSCC=НовыйSSCC;
	НоваяЗапись.ВидДиапазона=ВидДиапазона;
	НоваяЗапись.ИдентификаторSSCC=ИдентификаторНовогоSSCC;
	НоваяЗапись.СерийныйНомер= СерийныйНомерДляЗаписи;
	НоваяЗапись.Филиал=Филиал;
	НоваяЗапись.Год=НачалоГода;
	НоваяЗапись.ТипЛогистическойЕденицыWMS=ТипЛогистическойЕденицы;
	НоваяЗапись.ЦифраРасширения=ЦифраРасширенияДляЗаписи;
	НаборЗаписей.Записать(Истина);
	///////////////////////////////////////////////////////////////////////////////////////
	КонецЕсли;
	ЗафиксироватьТранзакцию();

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Параметры=новый Массив;
	Параметры.Добавить(новый Структура("НовыйSSCC,ФизЛицо,ИдентификаторНовогоSSCC",НовыйSSCC,ФизЛицо,ИдентификаторНовогоSSCC));
	ФоновыеЗадания.Выполнить("итWMSОбработчикSSCC.ДобавитьЗаписьВАрхивSSCC",Параметры,новый УникальныйИдентификатор(),"ДобавитьЗаписьВАрхивSSCC");
	Возврат НовыйSSCC;
	КонецФункции
Функция ПолучитьНовыеSSCC(Филиал,ВидДиапазона="Перечисления.итWMSВидыДиапазонвSSCC.РучноеПолучение",ФизЛицо,КоличествоSSCC,ТипЛогистическойЕденицы="Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйПаллет",НомерЛинии="00")Экспорт 
	МассивSSCC=новый Массив;
	для n=1 по КоличествоSSCC цикл
		SSCC=ПолучитьНовыйSSCC(Филиал,ВидДиапазона,ФизЛицо,ТипЛогистическойЕденицы,НомерЛинии);
		МассивSSCC.Добавить(SSCC);
	КонецЦикла;
	
	Возврат МассивSSCC;
КонецФункции
Процедура ДобавитьЗаписьВАрхивSSCC(Параметры) Экспорт
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);	
	//БлокировкаДанных = новый БлокировкаДанных;
	//ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.итWMSАрхивSSCC");
	//ЭлементБлокировки.Режим=РежимБлокировкиДанных.Исключительный;
	//БлокировкаДанных.Заблокировать();
    ИдЗаписи=новый УникальныйИдентификатор; 
	Ошибка=ложь;
	СтрокаДанных=Параметры;
	НаборЗаписей=РегистрыСведений.итWMSАрхивИдентификаторов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдЗаписи.Установить(ИдЗаписи);
	НаборЗаписей.Прочитать();
	Если НаличиеSSCCGTINВАрхиве(СтрокаДанных.НовыйSSCC) тогда
		ЗаписьЖурналаРегистрации("ДобавитьЗаписьВАрхивSSCC",,,,"Исключительная ситация, SSCC "+СтрокаДанных.НовыйSSCC+" уже есть в базе , он будет перезаписан",);
	Ошибка=Истина;	
	КонецЕсли;
	НаборЗаписей.Очистить();
	НоваяЗапись=НаборЗаписей.Добавить();
	НоваяЗапись.ИдентификаторУпаковки=СтрокаДанных.НовыйSSCC;
	НоваяЗапись.ИдЗаписи=ИдЗаписи;
	НоваяЗапись.ПорядковыйИдентификаторУпаковки=СтрокаДанных.ИдентификаторНовогоSSCC;
	НоваяЗапись.ДатаВремя=ТекущаяДата();
	НоваяЗапись.ФизЛицо=СтрокаДанных.ФизЛицо;
	НоваяЗапись.Комментарий=?(Ошибка,"Исключительная ситация, SSCC: см запись в журнале регистрации","Нормальная Запись");
	НаборЗаписей.Записать();
	ЗафиксироватьТранзакцию();
	КонецПроцедуры

	
Функция НаличиеSSCCGTINВАрхиве(Идентификатор)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итWMSАрхивИдентификаторов.ИдентификаторУпаковки
	|ИЗ
	|	РегистрСведений.итWMSАрхивИдентификаторов КАК итWMSАрхивИдентификаторов
	|ГДЕ
	|	итWMSАрхивИдентификаторов.ИдентификаторУпаковки = &ИдентификаторУпаковки";
	
	Запрос.УстановитьПараметр("ИдентификаторУпаковки", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Истина;
	КонецЦикла;
	Возврат Ложь;
	
КонецФункции
Функция ПолучитьКонтрольнуюЦифруШтрихКода(ШтрихКод)Экспорт
	ДлинаШтрихКода=СтрДлина(ШтрихКод);
	СуммаНеЧетных=ПолучитьСуммуЦифрНаНечетныхМестах(ДлинаШтрихКода,ШтрихКод);
	СуммаЧетных=ПосчитатьСуммуЦифрНаЧетныхМестах(ДлинаШтрихКода,ШтрихКод);
	СтрокаИтого=Строка(СуммаНеЧетных+СуммаЧетных);
	ЕденицаСуммы=Прав(СтрокаИтого,1);
	Если Число(ЕденицаСуммы) = 0 тогда
		Возврат "0" 
	иначе
		Возврат Строка(10-Число(ЕденицаСуммы));
	КонецЕсли;	
КонецФункции
Функция РаботаСоСтрокойЛидирующиеНули(Строка,ДлинаСтроки)
	Пока СтрДлина(Строка)<ДлинаСтроки цикл
		Строка="0"+Строка;
	КонецЦикла;
	Возврат Строка;
	КонецФункции
	
//Функция ПосчитатьСуммуЦифрНаЧетныхМестах(ДлинаШтрихКода,ШтрихКод)
//	Если ДлинаШтрихКода<2 тогда
//		Возврат 0
//	КонецЕсли;
//	Сумма=0;
//	ТочкаОтсчета=ДлинаШтрихКода;
//	для n=1 по ДлинаШтрихКода цикл
//		Сумма=Сумма+Число(Сред(ШтрихКод,ТочкаОтсчета-n,1));
//		Если (n+1)>ДлинаШтрихКода тогда
//			Прервать;
//		КонецЕсли;	
//		n=n+1;
//	КонецЦикла;
//	Возврат Сумма;

//КонецФункции
Функция ПосчитатьСуммуЦифрНаЧетныхМестах(ДлинаШтрихКода,ШтрихКод)
	Если ДлинаШтрихКода<2 тогда
		Возврат 0
	КонецЕсли;
	Сумма=0;
	ТочкаОтсчета=ДлинаШтрихКода;
	Если  Окр(ДлинаШтрихКода/2,0,РежимОкругления.Окр15как20) <> ДлинаШтрихКода/2 тогда
		ЧетноеКоличествоСимволов=Ложь;
	иначе
		ЧетноеКоличествоСимволов=Истина;
	КонецЕсли;	

	для n=1 по ДлинаШтрихКода цикл
		Если ТочкаОтсчета-n=0 и не ЧетноеКоличествоСимволов Тогда 
			Прервать;
		КонецЕсли;	
		Сумма=Сумма+Число(Сред(ШтрихКод,ТочкаОтсчета-n,1));
		Если (n+1)>ДлинаШтрихКода тогда
			Прервать;
		КонецЕсли;		
		n=n+1;
	КонецЦикла;

	Возврат Сумма;

	КонецФункции

//Функция ПолучитьСуммуЦифрНаНечетныхМестах(ДлинаШтрихКода,ШтрихКод)
//	Сумма=0;
//	ТочкаОтсчета=ДлинаШтрихКода+1;
//	для n=1 по ДлинаШтрихКода цикл
//		Сумма=Сумма+Число(Сред(ШтрихКод,ТочкаОтсчета-n,1));
//		Если (n+1)>ДлинаШтрихКода тогда
//			Прервать;
//		КонецЕсли;	
//		n=n+1;
//	КонецЦикла;
//	Сумма=Сумма*3;
//	Возврат Сумма;
//КонецФункции

Функция ПолучитьСуммуЦифрНаНечетныхМестах(ДлинаШтрихКода,ШтрихКод)
	Сумма=0;
	ТочкаОтсчета=ДлинаШтрихКода+1;
	Если  Окр(ДлинаШтрихКода/2,0,РежимОкругления.Окр15как20) <> ДлинаШтрихКода/2 тогда
		ЧетноеКоличествоСимволов=Ложь;
	иначе
		ЧетноеКоличествоСимволов=Истина;
	КонецЕсли;	

	для n=1 по ДлинаШтрихКода цикл
		Если ТочкаОтсчета-n=0 и  ЧетноеКоличествоСимволов Тогда 
			Прервать;
		КонецЕсли;
		Сумма=Сумма+Число(Сред(ШтрихКод,ТочкаОтсчета-n,1));
		Если (n+1)>ДлинаШтрихКода тогда
			Прервать;
		КонецЕсли;	
		n=n+1;
	КонецЦикла;
	Сумма=Сумма*3;
	Возврат Сумма;
КонецФункции

Функция ПолучитьЦифровойИдентификаторЛогистическоеЕденицы(ТипЛогистическойЕденицы)
	Если ТипЛогистическойЕденицы=Перечисления.итWMSТипыЛогистическойЕденицыWMS.Короб тогда
		Возврат 1 ;
	ИначеЕсли ТипЛогистическойЕденицы=Перечисления.итWMSТипыЛогистическойЕденицыWMS.Паллет тогда
		Возврат 2;
	ИначеЕсли ТипЛогистическойЕденицы=Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйКороб тогда
		Возврат 3;
	ИначеЕсли ТипЛогистическойЕденицы=Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйПаллет тогда
		Возврат 4;	
	КонецЕсли;
	Возврат 4;

	КонецФункции


Процедура НагрузочноеТестированиеФоновымЗаданием(Параметры) Экспорт
	для n=1 по Параметры.КоличествоSSCC цикл
		ПолучитьНовыйSSCC(Параметры.Филиал,Параметры.ВидДиапазона,Параметры.ФизЛицо,Параметры.ТипЛогистическойЕденицы,Параметры.НомерЛинии);
	КонецЦикла;
	КонецПроцедуры
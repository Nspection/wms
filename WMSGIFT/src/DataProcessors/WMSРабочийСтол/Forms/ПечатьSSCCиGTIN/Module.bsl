
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КоличествоGTIN=1;
	КоличествоSSCC=1;
	КоличествоВСтроке=1;
	КоличествоКопийSSCC=1;
	Элементы.ТипКода.СписокВыбора.Добавить(16,"QR");
	Элементы.ТипКода.СписокВыбора.Добавить(4,"CODE128");
	Элементы.ТипКода.СписокВыбора.Добавить(14,"EAN13Addon2");
    Элементы.ТипКода.СписокВыбора.Добавить(15,"EAN13Addon5");

КонецПроцедуры

&НаКлиенте
Процедура КоличествоSSCCПриИзменении(Элемент)
	Если КоличествоSSCC<=0 тогда
		КоличествоSSCC=1
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоGTINПриИзменении(Элемент)
	Если КоличествоGTIN<=0 тогда
		КоличествоGTIN=1
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьSSCC(Команда)
	Если ПроверкаНаВозможностьзапросаДанных() Тогда 
		Сообщить("за раз в таблице идентифкаторов, может находиться только 1 тип штрих-кода, либо GTIN, либо SSCC,  пожалуйста очистите таблицу и повторите заного");
		Возврат
	КонецЕсли;
	ЗапроситьSSCCНаСервере();
КонецПроцедуры
&НаСервере
Процедура ЗапроситьSSCCНаСервере()
	Данные=итWMSПривилегированныйМодуль.ПолучитьНастройкиИзХранилища();
	Если КоличествоSSCC=1 тогда
		SSCC=итWMSОбработчикSSCC.ПолучитьНовыйSSCC(Данные.Филиал,,ПараметрыСеанса.ТекущийПользователь.ФизЛицо);
		НоваяСтрока=ТаблицаПолученныхSSCC_GTIN.Добавить();
		НоваяСтрока.Идентификатор=SSCC;
	ИначеЕсли КоличествоSSCC>1 тогда
		SSCCСписок=итWMSОбработчикSSCC.ПолучитьНовыеSSCC(Данные.Филиал,,ПараметрыСеанса.ТекущийПользователь.ФизЛицо,КоличествоSSCC);
		для Каждого стр из SSCCСписок  Цикл 
			НоваяСтрока=ТаблицаПолученныхSSCC_GTIN.Добавить();
			НоваяСтрока.Идентификатор=стр;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура КоличествоКопийSSCCПриИзменении(Элемент)
	Если КоличествоКопийSSCC =0 тогда
		КоличествоКопийSSCC=1
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ЗапроситьGTINНаСервере()
	Данные=итWMSПривилегированныйМодуль.ПолучитьНастройкиИзХранилища();
	Если КоличествоGTIN=1 тогда
		GTIN=итWMSОбработчикSSCC.ПолучитьНовыйSSCC(Данные.Филиал,,ПараметрыСеанса.ТекущийПользователь.ФизЛицо,Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйКороб);
		НоваяСтрока=ТаблицаПолученныхSSCC_GTIN.Добавить();
		НоваяСтрока.Идентификатор=GTIN;
	ИначеЕсли КоличествоGTIN>1 тогда
		GTINписок=итWMSОбработчикSSCC.ПолучитьНовыеSSCC(Данные.Филиал,,ПараметрыСеанса.ТекущийПользователь.ФизЛицо,КоличествоGTIN,Перечисления.итWMSТипыЛогистическойЕденицыWMS.СборныйКороб);
		для Каждого стр из GTINписок  Цикл 
			НоваяСтрока=ТаблицаПолученныхSSCC_GTIN.Добавить();
			НоваяСтрока.Идентификатор=стр;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЗапроситьGTIN(Команда)
	Если ПроверкаНаВозможностьзапросаДанных("GTIN") Тогда 
		Сообщить("за раз в таблице идентифкаторов, может находиться только 1 тип штрих-кода, либо GTIN, либо SSCC,  пожалуйста очистите таблицу и повторите заного");
		Возврат
	КонецЕсли;
	ЗапроситьGTINНаСервере();
КонецПроцедуры

&НаСервере
Функция ПроверкаНаВозможностьзапросаДанных(ТипПроверки="SSCC")
	Ошибка=Ложь;
	Если ТипПроверки="SSCC" тогда
		для Каждого стр из ТаблицаПолученныхSSCC_GTIN цикл
			ТипЛогистическойЕденицы=Сред(СокрЛП(стр.Идентификатор),13,1);
			Попытка
				ТипЛогистическойЕденицы=Число(ТипЛогистическойЕденицы);
			Исключение
				Сообщить("Не возможно определить тип логистической еденицы");
				Возврат Истина;
			КонецПопытки;
			Если ТипЛогистическойЕденицы=1 или ТипЛогистическойЕденицы=3 тогда
				Ошибка=Истина;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	Если ТипПроверки="GTIN" тогда
		для Каждого стр из ТаблицаПолученныхSSCC_GTIN цикл
			ТипЛогистическойЕденицы=Сред(СокрЛП(стр.Идентификатор),13,1);
			Попытка
				ТипЛогистическойЕденицы=Число(ТипЛогистическойЕденицы);
			Исключение
				Сообщить("Не возможно определить тип логистической еденицы");
				Возврат Истина;
			КонецПопытки;
			Если ТипЛогистическойЕденицы=2 или ТипЛогистическойЕденицы=4 тогда
				Ошибка=Истина;
			КонецЕсли;
	КонецЦикла;
КонецЕсли;
Возврат Ошибка;
КонецФункции

&НаКлиенте
Процедура КоличествоВСтрокеПриИзменении(Элемент)
		Если КоличествоВСтроке<=0 тогда
		КоличествоВСтроке=1
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПечатьНаОбычныйПринтерНаСервере(ТабДок)
	ПараметрыПечати = новый Структура;
	ПараметрыПечати.Вставить("Ширина",?(ЗначениеЗаполнено(ШиринаШК),ШиринаШК,10));
	ПараметрыПечати.Вставить("Высота",?(ЗначениеЗаполнено(ВысотаШК),ВысотаШК,15));
	ПараметрыПечати.Вставить("ТипКода",ТипКода);
	ПараметрыПечати.Вставить("КоличествоВСтроке",КоличествоВСтроке);
    ТаблицаЗначенийШХ=ТаблицаПолученныхSSCC_GTIN.Выгрузить();
	ОбработкаОбъект=Обработки.итПечатьПроизвольногоШтрихкода.Создать();
	ТабДок=ОбработкаОбъект.Печать(ПараметрыПечати,ТаблицаЗначенийШХ.ВыгрузитьКолонку("Идентификатор"));
КонецПроцедуры

&НаКлиенте
Процедура ПечатьНаОбычныйПринтер(Команда)
	ТабДок=новый ТабличныйДокумент;
	ПечатьНаОбычныйПринтерНаСервере(ТабДок);
	ТабДок.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ИмяПринтераЭтикетокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка=Ложь;
ГруппаПринтеры=ПолучитьГруппуОборудованияПринтеры();
ОткрытьФорму("Справочник.ИтWMSОборудование.Форма.ФормаВыбора",новый Структура("ГруппаОборудования",ГруппаПринтеры),Элемент);
КонецПроцедуры

&НаСервере
Функция ПолучитьГруппуОборудованияПринтеры()
	Возврат Справочники.ИтWMSОборудование.Принтеры;
	КонецФункции

&НаСервере
Процедура ПечатьНаПринтерЭтикетокНаСервере()
	Если ИмяПринтераЭтикеток.Пустая() тогда
		Сообщить("Не выбран принтер этикеток");
		Возврат
	КонецЕсли;
	Если ПечатьВ1Поток Тогда 
		ПечатьНаПринтерЭтикетокНаСервереВПоток();
	иначе
		ПечатьНаПринтерЭтикетокНаСервереПоОдному();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПечатьНаПринтерЭтикетокНаСервереПоОдному()
	
	//Обработка=Обработки.итWMSПечатныеФормы.Создать();
	Для Каждого стр из ТаблицаПолученныхSSCC_GTIN цикл
		Если стр.Распечатан Тогда 
			Продолжить;
		КонецЕсли;	
		Счетчик=0;
	Пока Счетчик < КоличествоКопийSSCC цикл
			Обработка=Обработки.итWMSПечатныеФормы.Создать();
		Если ПечататьГрупповуюТару Тогда
				СтруктураПараметров=Обработка.СформироватьСтруктуруПараметровДляГрупповойЭтикетки();
				СтруктураПараметров.ШкУпаковкиТекст=стр.Идентификатор;
				СтруктураПараметров.ШкУпаковки=стр.Идентификатор;
				СтруктураПараметров.Продукция=Номенклатура.Наименование;
				СтруктураПараметров.ИНН=ИНН;
				СтруктураПараметров.КПП=КПП;
				СтруктураПараметров.КОДЕГАИСорг=КОДЕГАИСорг;
				СтруктураПараметров.ДатаИзготовления = ДатаПроизводства;
				СтруктураПараметров.СрокГодности =СрокГодности;
				СтруктураПараметров.КОДЕГАИСпрод = КОДЕГАИСпрод;
				СтруктураПараметров.ДоляСпирта = Креопсть;	
				СтруктураПараметров.Объем = Объем;
				СтруктураПараметров.Количествовкоробе = КоличествоВУпаковке;
				СтруктураПараметров.ИнформацияПоСрокуГодности = ИнформацияПоСрокуГодности;
				СтруктураПараметров.УсловияХранения = УсловияХранения;
				СтруктураПараметров.ОрганизацияИзготовитель=Производитель.Наименование;
				СтруктураПараметров.ЮрФактАдрес = АдресПроизводителя;
				СтруктураПараметров.КодИзготовителя="";
				СтруктураПараметров.ШкГрупповойТарыТекст=ШтрихКодГрупповойТары;
				СтруктураПараметров.ШкГрупповойТары=ШтрихКодГрупповойТары;
				Обработка.ПечатьГрупповойЭтикетки(СтруктураПараметров,ИмяПринтераЭтикеток.Наименование);	
			ИначеЕсли УлучшенноеКачествоПринтераЭтикеток Тогда 
				Обработка.ПечатьЭтикеткиПаллетыКоробаPDF(стр.Идентификатор,ИмяПринтераЭтикеток.Наименование);
			иначе
				Обработка.ПечатьЭтикеткиПаллетыКороба(стр.Идентификатор,ИмяПринтераЭтикеток.Наименование);
			КонецЕсли;
			Счетчик=Счетчик+1;
		КонецЦикла;
		стр.Распечатан=Истина;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПечатьНаПринтерЭтикетокНаСервереВПоток()
	
	МассивШк=новый Массив;
	Для Каждого стр из ТаблицаПолученныхSSCC_GTIN цикл
		Если стр.Распечатан Тогда 
			Продолжить;
		КонецЕсли;	
		Счетчик=0;
		Пока Счетчик < КоличествоКопийSSCC цикл
			МассивШк.Добавить(стр.Идентификатор);
			Счетчик=Счетчик+1;
		КонецЦикла;
		стр.Распечатан=Истина;
	КонецЦикла;
	Обработка=Обработки.итWMSПечатныеФормы.Создать();
	Если ПечататьГрупповуюТару Тогда
	СтруктураПараметров=Обработка.СформироватьСтруктуруПараметровДляГрупповойЭтикетки();
	//СтруктураПараметров=новый Структура;
	СтруктураПараметров.ШкУпаковкиТекст=МассивШк;
	СтруктураПараметров.ШкУпаковки=МассивШк;
	СтруктураПараметров.Продукция=Номенклатура.Наименование;
	СтруктураПараметров.ИНН=ИНН;
	СтруктураПараметров.КПП=КПП;
	СтруктураПараметров.КОДЕГАИСорг=КОДЕГАИСорг;
	СтруктураПараметров.ДатаИзготовления = ДатаПроизводства;
    СтруктураПараметров.СрокГодности =СрокГодности;
	СтруктураПараметров.КОДЕГАИСпрод = КОДЕГАИСпрод;
	СтруктураПараметров.ДоляСпирта = Креопсть;	
	СтруктураПараметров.Объем = Объем;
	СтруктураПараметров.Количествовкоробе = КоличествоВУпаковке;
	СтруктураПараметров.ИнформацияПоСрокуГодности = ИнформацияПоСрокуГодности;
	СтруктураПараметров.УсловияХранения = УсловияХранения;
	СтруктураПараметров.ОрганизацияИзготовитель=Производитель.Наименование;
	СтруктураПараметров.ЮрФактАдрес = АдресПроизводителя;
	СтруктураПараметров.КодИзготовителя="";
	СтруктураПараметров.ШкГрупповойТарыТекст=ШтрихКодГрупповойТары;
	СтруктураПараметров.ШкГрупповойТары=ШтрихКодГрупповойТары;
    Обработка.ПечатьГрупповойЭтикетки(СтруктураПараметров,ИмяПринтераЭтикеток.Наименование);
	ИначеЕсли УлучшенноеКачествоПринтераЭтикеток Тогда 
		Обработка.ПечатьЭтикеткиПаллетыКоробаPDF(МассивШк,ИмяПринтераЭтикеток.Наименование);
	иначе
		Обработка.ПечатьЭтикеткиПаллетыКороба(МассивШк,ИмяПринтераЭтикеток.Наименование);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПечатьНаПринтерЭтикеток(Команда)
		ПечатьНаПринтерЭтикетокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	  НоменклатураПриИзмененииНаСервере();
  КонецПроцедуры
&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
	Если Номенклатура.алкКрепость>0 Тогда 
		 НМАлкогольПриИзмененииСервер();
	иначе
		 НМБезАлкогольПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура НМБезАлкогольПриИзмененииНаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка,
		|	Номенклатура.ЕдиницаИзмеренияМест
		|ПОМЕСТИТЬ ВтНм
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтНм.Ссылка,
		|	ВЫБОР
		|		КОГДА ВтНм.Ссылка.Производитель = НЕОПРЕДЕЛЕНО
		|				ИЛИ ВтНм.Ссылка.Производитель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|				ИЛИ ВтНм.Ссылка.Производитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВтНм.Ссылка.алкПроизводитель
		|		ИНАЧЕ ВтНм.Ссылка.Производитель
		|	КОНЕЦ КАК Производитель,
		|	ВтНм.Ссылка.ЕдиницаХраненияОстатков.Объем КАК Объем,
		|	ВтНм.Ссылка.ЕдиницаИзмеренияМест.Коэффициент КАК КоличествоВУпаковке,
		|	МАКСИМУМ(ЕСТЬNULL(Штрихкоды.Штрихкод, """")) КАК ШК
		|ПОМЕСТИТЬ ВтПроизводитель
		|ИЗ
		|	ВтНм КАК ВтНм
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО ВтНм.Ссылка = Штрихкоды.Владелец
		|			И ВтНм.ЕдиницаИзмеренияМест = Штрихкоды.ЕдиницаИзмерения
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВтНм.Ссылка.Производитель = НЕОПРЕДЕЛЕНО
		|				ИЛИ ВтНм.Ссылка.Производитель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|				ИЛИ ВтНм.Ссылка.Производитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВтНм.Ссылка.алкПроизводитель
		|		ИНАЧЕ ВтНм.Ссылка.Производитель
		|	КОНЕЦ,
		|	ВтНм.Ссылка.ЕдиницаХраненияОстатков.Объем,
		|	ВтНм.Ссылка.ЕдиницаИзмеренияМест.Коэффициент,
		|	ВтНм.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтПроизводитель.Ссылка,
		|	ВтПроизводитель.Производитель,
		|	ВтПроизводитель.Объем,
		|	ВтПроизводитель.КоличествоВУпаковке,
		|	МАКСИМУМ(ПОДСТРОКА(ЕСТЬNULL(КонтактнаяИнформация.Представление, """"), 1, 255)) КАК Адрес,
		|	ВтПроизводитель.ШК
		|ИЗ
		|	ВтПроизводитель КАК ВтПроизводитель
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО ВтПроизводитель.Производитель = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
		|			И (КонтактнаяИнформация.Вид В (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации), ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтПроизводитель.Ссылка,
		|	ВтПроизводитель.Производитель,
		|	ВтПроизводитель.Объем,
		|	ВтПроизводитель.КоличествоВУпаковке,
		|	ВтПроизводитель.ШК";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КОДЕГАИСпрод="-";
	КоличествоВУпаковке=ВыборкаДетальныеЗаписи.КоличествоВУпаковке;
	Производитель=ВыборкаДетальныеЗаписи.Производитель;
	Креопсть=0;
	Объем=ВыборкаДетальныеЗаписи.Объем;
	АдресПроизводителя=ВыборкаДетальныеЗаписи.Адрес;
	ШтрихКодГрупповойТары=ВыборкаДетальныеЗаписи.ШК;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	КонецПроцедуры
&НаСервере	
Процедура НМАлкогольПриИзмененииСервер()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка,
		|	МАКСИМУМ(Номенклатура.ЕдиницаИзмеренияМест) КАК ЕдиницаИзмеренияМест
		|ПОМЕСТИТЬ ВтНоменклатура
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(алкСоответствияАлкогольнойПродукцииЕГАИСИНоменклатуры.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
		|	ВтНоменклатура.Ссылка КАК Номенклатура,
		|	ВтНоменклатура.ЕдиницаИзмеренияМест
		|ПОМЕСТИТЬ ДанныеАлкПродукции
		|ИЗ
		|	ВтНоменклатура КАК ВтНоменклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.алкСоответствияАлкогольнойПродукцииЕГАИСИНоменклатуры КАК алкСоответствияАлкогольнойПродукцииЕГАИСИНоменклатуры
		|		ПО ВтНоменклатура.Ссылка = алкСоответствияАлкогольнойПродукцииЕГАИСИНоменклатуры.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтНоменклатура.Ссылка,
		|	ВтНоменклатура.ЕдиницаИзмеренияМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеАлкПродукции.АлкогольнаяПродукция,
		|	ДанныеАлкПродукции.Номенклатура,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Код КАК КодЕГАИСпрод,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Производитель КАК Производитель,
		|	ПОДСТРОКА(ДанныеАлкПродукции.АлкогольнаяПродукция.Производитель.ПредставлениеАдреса, 1, 500) КАК ПроизводительАдрес,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Крепость КАК Крепость,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Объем КАК Объем,
		|	ДанныеАлкПродукции.ЕдиницаИзмеренияМест.Коэффициент КАК КоличествоВУпаковке,
		|	МАКСИМУМ(ЕСТЬNULL(Штрихкоды.Штрихкод, """")) КАК ШК
		|ИЗ
		|	ДанныеАлкПродукции КАК ДанныеАлкПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО ДанныеАлкПродукции.Номенклатура = Штрихкоды.Владелец
		|			И ДанныеАлкПродукции.ЕдиницаИзмеренияМест = Штрихкоды.ЕдиницаИзмерения
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеАлкПродукции.АлкогольнаяПродукция,
		|	ДанныеАлкПродукции.Номенклатура,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Код,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Производитель,
		|	ПОДСТРОКА(ДанныеАлкПродукции.АлкогольнаяПродукция.Производитель.ПредставлениеАдреса, 1, 500),
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Крепость,
		|	ДанныеАлкПродукции.АлкогольнаяПродукция.Объем,
		|	ДанныеАлкПродукции.ЕдиницаИзмеренияМест.Коэффициент";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КОДЕГАИСпрод=ВыборкаДетальныеЗаписи.КодЕГАИСпрод;
	КоличествоВУпаковке=ВыборкаДетальныеЗаписи.КоличествоВУпаковке;
	Производитель=ВыборкаДетальныеЗаписи.Производитель;
	Креопсть=ВыборкаДетальныеЗаписи.Крепость;
	Объем=ВыборкаДетальныеЗаписи.Объем;
	АдресПроизводителя=ВыборкаДетальныеЗаписи.ПроизводительАдрес;
	ШтрихКодГрупповойТары=ВыборкаДетальныеЗаписи.ШК;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА	
	КонецПроцедуры

&НаКлиенте
Процедура СерияНоменклатурыПриИзменении(Элемент)
СерияНоменклатурыПриИзмененииНаСервере();
КонецПроцедуры
&НаСервере
Процедура СерияНоменклатурыПриИзмененииНаСервере()
ДатаПроизводства=СерияНоменклатуры.алкДатаНачалаРозлива;
СрокГодности=СерияНоменклатуры.СрокГодности;
	КонецПроцедуры

&НаСервере
Процедура ОрганизацияКонтрагентПриИзмененииНаСервере()
	ИНН=ОрганизацияКонтрагент.ИНН;
	КПП=ОрганизацияКонтрагент.КПП;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	алкСоответствияОрганизацийЕГАИСИКонтрагентов.ОрганизацияЕГАИС
	|ИЗ
	|	РегистрСведений.алкСоответствияОрганизацийЕГАИСИКонтрагентов КАК алкСоответствияОрганизацийЕГАИСИКонтрагентов
	|ГДЕ
	|	алкСоответствияОрганизацийЕГАИСИКонтрагентов.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", ОрганизацияКонтрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КОДЕГАИСорг=ВыборкаДетальныеЗаписи.ОрганизацияЕГАИС.Код;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияКонтрагентПриИзменении(Элемент)
		ОрганизацияКонтрагентПриИзмененииНаСервере();
КонецПроцедуры




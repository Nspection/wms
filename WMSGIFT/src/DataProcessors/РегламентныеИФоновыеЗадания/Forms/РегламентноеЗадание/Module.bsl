
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Отказ от инициализации, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Администрирование", Метаданные) Тогда
		ВызватьИсключение(НСтр("ru = 'У пользователя нет права администрирования.'"));
	КонецЕсли;
	
	Действие = Параметры.Действие;
	
	Если Найти(", Добавить, Скопировать, Изменить,", ", " + Действие + ",") = 0 Тогда
		ВызватьИсключение(НСтр("ru = 'Неверные параметры в форме ""Регламентное задание"".'"));
	КонецЕсли;
	Элементы.ИмяПользователя.Доступность = НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Если Действие = "Добавить" Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания;
		Для каждого РегламентноеЗаданиеМетаданные ИЗ Метаданные.РегламентныеЗадания Цикл
			ОписанияМетаданныхРегламентныхЗаданий.Добавить
			(РегламентноеЗаданиеМетаданные.Имя + "
			 |" + РегламентноеЗаданиеМетаданные.Синоним + "
			 |" + РегламентноеЗаданиеМетаданные.ИмяМетода,
			 ?(ПустаяСтрока(РегламентноеЗаданиеМетаданные.Синоним),
			   РегламентноеЗаданиеМетаданные.Имя,
			   РегламентноеЗаданиеМетаданные.Синоним) );
		КонецЦикла;
	Иначе
		Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(Параметры.Идентификатор);
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Задание, "Ключ, Наименование, Использование, ИмяПользователя, ИнтервалПовтораПриАварийномЗавершении, КоличествоПовторовПриАварийномЗавершении");
		Идентификатор        = Строка(Задание.УникальныйИдентификатор);
		ИмяМетаданных        = ?(Задание.Метаданные <> Неопределено, Задание.Метаданные.Имя,       НСтр("ru = '<нет метаданных>'"));
		СинонимМетаданных    = ?(Задание.Метаданные <> Неопределено, Задание.Метаданные.Синоним,   НСтр("ru = '<нет метаданных>'"));
		ИмяМетодаМетаданных  = ?(Задание.Метаданные <> Неопределено, Задание.Метаданные.ИмяМетода, НСтр("ru = '<нет метаданных>'"));
		Расписание = Задание.Расписание;
		СообщенияПользователюИОписаниеИнформацииОбОшибкеВФоне(Параметры.Идентификатор)
		//СообщенияПользователюИОписаниеИнформацииОбОшибке = РегламентныеЗаданияСервер.СообщенияИОписанияОшибокРегламентногоЗадания(Задание);
	КонецЕсли;
	
	Если Действие <> "Изменить" Тогда
		Идентификатор = НСтр("ru = '<будет создан при записи>'");
		Использование = Ложь;
		Наименование = ?(Действие = "Добавить", "", РегламентныеЗаданияСервер.ПредставлениеРегламентногоЗадания(Задание));
	КонецЕсли;
	
	// Заполнение списка выбора имени пользователя
	МассивПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для каждого Пользователь Из МассивПользователей Цикл
		Элементы.ИмяПользователя.СписокВыбора.Добавить(Пользователь.Имя);
	КонецЦикла;
	
КонецПроцедуры 
&НаСервере
Процедура СообщенияПользователюИОписаниеИнформацииОбОшибкеВФоне(Идентификатор)
	Если АдресСообщения="" Тогда 
		АдресСообщения=ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	МассивПараметров=новый Массив;
	СтруктураПараметров=новый Структура;
	СтруктураПараметров.Вставить("АдресСообщения",АдресСообщения);
	СтруктураПараметров.Вставить("Идентификатор",Идентификатор);
	МассивПараметров.Добавить(СтруктураПараметров);
	Задание=ФоновыеЗадания.Выполнить("РегламентныеЗаданияСервер.СообщенияПользователюИОписаниеИнформацииОбОшибкеВФоне",МассивПараметров,новый УникальныйИдентификатор,"ФоновоеПолучениеСообщенияРегЗадания");
	КлючФоновогоЗаданияСообщения=Задание.УникальныйИдентификатор;

	КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Действие = "Добавить" Тогда
		// Выбор шаблона регламентного задания (метаданные)
		ЭлементСписка = ОписанияМетаданныхРегламентныхЗаданий.ВыбратьЭлемент(НСтр("ru = 'Выберите предопределенный шаблон регламентного задания'"));
		Если ЭлементСписка = Неопределено Тогда
			Отказ = Истина;
			Возврат;
		Иначе
			ИмяМетаданных       = СтрПолучитьСтроку(ЭлементСписка.Значение, 1);
			СинонимМетаданных   = СтрПолучитьСтроку(ЭлементСписка.Значение, 2);
			ИмяМетодаМетаданных = СтрПолучитьСтроку(ЭлементСписка.Значение, 3);
			Наименование        = ЭлементСписка.Представление;
		КонецЕсли;
	КонецЕсли;
	
	мЗаданиеЗаписано = Ложь;
	ОбновитьЗаголовокФормы();
    ПодключитьОбработчикОжидания("ПолучениеРезультатовСообщенияФоновогоЗадания",0.1,Истина);

КонецПроцедуры
&НаКлиенте
Процедура ПолучениеРезультатовСообщенияФоновогоЗадания()Экспорт 
	ЗаданияПолучены=Ложь;
	ПустойИд=новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	Если КлючФоновогоЗаданияСообщения=ПустойИд  Тогда 
		Возврат
	КонецЕсли;	
	ПолучениеРезультатовСообщенияФоновогоЗаданияСервер(ЗаданияПолучены,ПустойИд);
	Если не ЗаданияПолучены Тогда 
		ПодключитьОбработчикОжидания("ПолучениеРезультатовСообщенияФоновогоЗадания",10,Истина);
	КонецЕсли;


	КонецПроцедуры
Процедура ПолучениеРезультатовСообщенияФоновогоЗаданияСервер(ЗаданияПолучены,ПустойИд)
	
	Если КлючФоновогоЗаданияСообщения=ПустойИд  Тогда 
		ЗаданияПолучены=Истина;
		Возврат
	КонецЕсли;
	
	 
		Задание=ФоновыеЗадания.НайтиПоУникальномуИдентификатору(КлючФоновогоЗаданияСообщения);
		Если Задание=Неопределено Тогда 
			КлючФоновогоЗаданияСообщения=ПустойИд;
			Сообщить("Ошибка получения данных сообщения о  задании");
			ЗаданияПолучены=Истина;
			Элементы.Декорация1.Видимость=Ложь;
		ИначеЕсли Задание.Состояние=СостояниеФоновогоЗадания.ЗавершеноАварийно или Задание.Состояние=СостояниеФоновогоЗадания.Отменено Тогда 
			ЗаданияПолучены=Истина;
			Элементы.Декорация1.Видимость=Ложь;
			КлючФоновогоЗаданияСообщения=ПустойИд;
			Сообщить("Ошибка получения данных сообщения о  задании");
		ИначеЕсли Задание.Состояние=СостояниеФоновогоЗадания.Завершено Тогда 
			Сообщение=ПолучитьИзВременногоХранилища(АдресСообщения);
			Элементы.Декорация1.Видимость=Ложь;
			СообщенияПользователюИОписаниеИнформацииОбОшибке=Сообщение;
			КлючФоновогоЗаданияСообщения=ПустойИд;
			ЗаданияПолучены=Истина;
		иначе	
			ЗаданияПолучены=Ложь;	
		КонецЕсли;	

	КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	ОписаниеОповещения=новый ОписаниеОповещения("ДействияПриМодифицированностиФормы",ЭтаФорма);
	Если Модифицированность Тогда
		ПоказатьВопрос(ОписаниеОповещения,НСтр("ru = 'Записать изменения?'"),РежимДиалогаВопрос.ДаНет);
		//КодВозврата = Вопрос(НСтр("ru = 'Записать изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		//Если КодВозврата = КодВозвратаДиалога.Да Тогда
		//	ЗаписатьРегламентноеЗадание();
		//ИначеЕсли КодВозврата = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ДействияПриМодифицированностиФормы (Результат,параметры) Экспорт
	Если Результат=КодВозвратаДиалога.Да Тогда 
		ЗаписатьРегламентноеЗадание();
		ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий команд и элементов формы
//

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	ЗаписатьРегламентноеЗадание();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьРегламентноеЗадание();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеВыполнить()

	//Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	//Если Диалог.ОткрытьМодально() Тогда
	//	Расписание = Диалог.Расписание;
	//	Модифицированность = Истина;
	//КонецЕсли;
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОткрытьРасписаниеЗавершение", ЭтотОбъект));

КонецПроцедуры
&НаКлиенте
Процедура ОткрытьРасписаниеЗавершение(НовоеРасписание, Контекст) Экспорт

	Если НовоеРасписание <> Неопределено Тогда
		Расписание = НовоеРасписание;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции формы
//

&НаКлиенте
Процедура ЗаписатьРегламентноеЗадание()
	
	ЗаписатьРегламентноеЗаданиеНаСервере();
	ОбновитьЗаголовокФормы();
	Оповестить("Запись_РегламентныеИФоновыеЗадания", Новый Структура);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРегламентноеЗаданиеНаСервере()
	
	Если Действие = "Изменить" Тогда
		Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(Идентификатор);
	Иначе
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания[ИмяМетаданных]);
		Идентификатор = Строка(Задание.УникальныйИдентификатор);
		Действие = "Изменить";
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Задание, ЭтаФорма, "Ключ, Наименование, Использование, ИмяПользователя, ИнтервалПовтораПриАварийномЗавершении, КоличествоПовторовПриАварийномЗавершении");
	Задание.Расписание = Расписание;
	Задание.Записать();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	
	Если НЕ ПустаяСтрока(Наименование) Тогда
		Представление = Наименование;
	ИначеЕсли НЕ ПустаяСтрока(СинонимМетаданных) Тогда
		Представление = СинонимМетаданных;
	Иначе
		Представление = ИмяМетаданных;
	КонецЕсли;
	Если Действие <> "Изменить" Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Регламентное задание (создание)'"), Представление);
	Иначе
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (Регламентное задание)'"), Представление);
	КонецЕсли;
	
КонецПроцедуры

